(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["proz-estimate-proz-estimate-module"],{

/***/ "./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-commonvanlynkheader></app-commonvanlynkheader>\r\n<app-prozadmin-sidemenu></app-prozadmin-sidemenu>\r\n<!-- Main Container -->\r\n<div class=\"main-container container-fluid\">\r\n  <!-- Page Container -->\r\n  <div class=\"page-container\">\r\n    <!-- Page Content -->\r\n    <div class=\"page-content\">\r\n      <!-- Page Breadcrumb -->\r\n      <div class=\"page-breadcrumbs\">\r\n        <ul class=\"breadcrumb\">\r\n          <li>\r\n            <i class=\"fa fa-home\"></i>\r\n            <a (click)=\"home()\">Home</a>\r\n          </li>\r\n          <li>\r\n            <a >Estimates</a>\r\n          </li>\r\n          <li>\r\n            <a (click)=\"list()\">List of Estimates</a>\r\n          </li>\r\n          <li class=\"active\">Add Estimate</li>\r\n        </ul>\r\n      </div>\r\n      <!-- /Page Breadcrumb -->\r\n      <!-- Page Header -->\r\n      <div class=\"page-header position-relative\">\r\n        <div class=\"header-title\">\r\n          <h1>Add Estimate</h1>\r\n        </div>\r\n      </div>\r\n      <!-- /Page Header -->\r\n      <!-- Page Body -->\r\n      <div class=\"page-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-12 col-md-12 col-md-12 col-xs-12 \">\r\n                <div class=\"well with-header with-footer three-bordered \">\r\n                  <div class=\"header gray\">\r\n                    Add Estimate\r\n                  </div>\r\n                  <!-- form1 -->\r\n                  <div id=\"registration-form\">\r\n                    <form [formGroup]=\"addEstimate\">\r\n                      <!-- Add Estimate -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"estimateNumLbl\">\r\n                                  <b>Estimate # <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    value=\"E-0001\" readonly style=\"background-color: gray; color: white;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"dobLbl\">\r\n                                  <b>Date Created <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control date-picker\" type=\"date\" value=\"09-11-2019\"\r\n                                  data-date-format=\"dd-mm-yyyy\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <!-- NOTES: This Row is visible to Pro Only not to Customer -->\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"channelManagerLbl\">\r\n                                  <b>Channel Manager <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" id=\"channelManager\" required>\r\n                                  <option value=\"Tonny A\">Tonny C</option>\r\n                                  <option value=\"Donald Trump\">Donald Trump</option>\r\n                                  <option value=\"Larry A\">Larry A</option>\r\n                                  <option value=\"Jeff B\">Jeff B</option>\r\n                                  <option value=\"Brain L\">Brain L</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"splitRateLbl\">\r\n                                  <b>Split Rate <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" name=\"splitRate\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"50/50\">50/50</option>\r\n                                  <option value=\"75/25\">75/25</option>\r\n                                  <option value=\"25/75\">25/75</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <!-- /NOTES: This Row is visible to Pro Only not to Customer -->\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"primaryTechLbl\">\r\n                                  <b>Primary Tech <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" id=\"primaryTech\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"Larry A\">Larry A</option>\r\n                                  <option value=\"Jeff B\">Jeff B</option>\r\n                                  <option value=\"Brain L\">Brain L</option>\r\n                                  <option value=\"Tonny A\">Tonny C</option>\r\n                                  <option value=\"Donald Trump\">Donald Trump</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"secondaryTechLbl\">\r\n                                  <b>Secondary Tech <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" name=\"secondaryTech\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"Jeff B\">Jeff B</option>\r\n                                  <option value=\"Brain L\">Brain L</option>\r\n                                  <option value=\"Larry A\">Larry A</option>\r\n                                  <option value=\"Tonny A\">Tonny C</option>\r\n                                  <option value=\"Donald Trump\">Donald Trump</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"statusLbl\">\r\n                                  <b>Status <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" id=\"status\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"Draft\">Draft</option>\r\n                                  <option value=\"Sent\">Sent</option>\r\n                                  <option value=\"Approved\">Approved</option>\r\n                                  <option value=\"Rejected\">Rejected</option>\r\n                                  <option value=\"FollowsUp\">Follows Up</option>\r\n                                  <option value=\"Canceled\">Canceled</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- Add Estimate -->\r\n\r\n\r\n                      <!-- Billing Address Details -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Billing Details\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"companyNameLbl\">\r\n                                  <b>Company/Customer Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" (keypress)=\"keyPress1($event)\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"emailIDLbl\">\r\n                                  <b>Email ID </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"firstNameLbl\">\r\n                                  <b>First Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" (keypress)=\"keyPress1($event)\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"lastNameLbl\">\r\n                                  <b>Last Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" (keypress)=\"keyPress1($event)\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"phoneNumberLbl\">\r\n                                  <b>Phone Number </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" [dropSpecialCharacters]=\"false\"\r\n                                    mask=\"000-000-0000\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\">\r\n                                  <option value=\"Cell\">Cell</option>\r\n                                  <option value=\"Home\">Home</option>\r\n                                  <option value=\"Work\">Work</option>\r\n                                  <option value=\"Fax\">Fax</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"serviceAddressLbl\">\r\n                                  <b>Address </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"stateLbl\">\r\n                                  <b>State </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" id=\"stateRegistred\" name=\"status\" data-bv-field=\"row-title\">\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value={{data.stateName}}>\r\n                                    {{data.stateName}}\r\n                                  </option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"cityLbl\">\r\n                                  <b>City </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"zipCodeLbl\">\r\n                                  <b>Zip Code </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" minlength=\"5\" maxlength=\"6\">\r\n                                </span>\r\n                                <!-- <div *ngIf=\"f.customerZipCode.errors.minlength\" style=\"color:red;font-size: 11px\">Invalid Zip Code\r\n                                          (5-6 digits)\r\n                                        </div> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"sendInvoiceToLbl\">\r\n                                  <b>Send Invoice By </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                  <option value=\"E-Mail\">E-Mail</option>\r\n                                  <option value=\"Cell\">Cell</option>\r\n                                  <option value=\"US Mail\">US Mail</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"invoiceEmailLbl\">\r\n                                  <b>Invoice Email </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"termsLbl\">\r\n                                  <b>PO# </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"customerSinceLbl\">\r\n                                  <b>Customer Since </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"2019\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"crossSt1Lbl\">\r\n                                  <b>Cross St 1</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"crossSt2Lbl\">\r\n                                  <b>Cross St 2</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"sourceLbl\">\r\n                                  <b>Source </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\">\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"Yelp\">Yelp</option>\r\n                                  <option value=\"Home Advisor\">Home Advisor</option>\r\n                                  <option value=\"Thumbtack\">Thumbtack</option>\r\n                                  <option value=\"Word of Mouth\">Word of Mouth</option>\r\n                                  <option value=\"Money Mailer\">Money Mailer</option>\r\n                                  <option value=\"HomeMag\">HomeMag</option>\r\n                                  <option value=\"Angies List\">Angies List</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"paymentMethodLbl\">\r\n                                  <b>Payment Method</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <select type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                    <option value=\"Cash\">Cash</option>\r\n                                    <option value=\"Check\">Check</option>\r\n                                    <option value=\"Credit Card\">Credit Card</option>\r\n                                    <option value=\"Direct Deposit\">Direct Deposit</option>\r\n                                    <option value=\"Finance\">Finance</option>\r\n                                  </select>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"expectedStartDateLbl\">\r\n                                  <b>Expected Start Date/Time <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" placeholder=\"09-11-2019 11:00:00\">\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"expectedEndDateLbl\">\r\n                                  <b>Expected End Date/Time <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" value=\"09-11-2019 15:00:00\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                          <!-- NOTES: This Row is visible to Pro Only not to Customer -->\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"frequencyLbl\">\r\n                                  <b>Frequency </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" id=\"frequency\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"None\">None</option>\r\n                                  <option value=\"Weekly\">Weekly</option>\r\n                                  <option value=\"Monthly\">Monthly</option>\r\n                                  <option value=\"Quaterly\">Quaterly</option>\r\n                                  <option value=\"Yearly\">Yearly</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"leadQuantityLbl\">\r\n                                  <b>Lead Quantity</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" id=\"leadQuantity\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"None\">None</option>\r\n                                  <option value=\"Weekly\">Poor</option>\r\n                                  <option value=\"Monthly\">Average</option>\r\n                                  <option value=\"Quaterly\">Good</option>\r\n                                  <option value=\"Yearly\">Excellent</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <!-- /NOTES: This Row is visible to Pro Only not to Customer -->\r\n                          <div class=\"row\">\r\n                            <!-- NOTES: This Field is visible to Pro Only not to Customer -->\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\">\r\n                                    <span class=\"text\">Do Not Serve</span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                              </div>\r\n                            </div>\r\n                            <!-- /NOTES: This Field is visible to Pro Only not to Customer -->\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"adminNotesLbl\">\r\n                                  <b>Admin Notes </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div><br />\r\n\r\n                          <div class=\"form-title\">\r\n                            Job Info\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobTitleLbl\">\r\n                                  <b>Job Title </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobEmailLbl\">\r\n                                  <b>Email </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobPhoneNumberLbl\">\r\n                                  <b>Phone Number </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" [dropSpecialCharacters]=\"false\"\r\n                                    mask=\"000-000-0000\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\">\r\n                                  <option value=\"Cell\">Cell</option>\r\n                                  <option value=\"Home\">Home</option>\r\n                                  <option value=\"Work\">Work</option>\r\n                                  <option value=\"Fax\">Fax</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobAddressLbl\">\r\n                                  <b>Address </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" >\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobStateLbl\">\r\n                                  <b>State </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" id=\"stateRegistred\" name=\"status\" data-bv-field=\"row-title\"\r\n                                  >\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value={{data.stateName}}>\r\n                                    {{data.stateName}}\r\n                                  </option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobCityLbl\">\r\n                                  <b>City </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobZipCodeLbl\">\r\n                                  <b>Zip Code </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" minlength=\"5\" maxlength=\"6\">\r\n                                </span>\r\n                                <!-- <div *ngIf=\"f.customerZipCode.errors.minlength\" style=\"color:red;font-size: 11px\">Invalid Zip Code\r\n                                  (5-6 digits)\r\n                                </div> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Billing Address Details -->\r\n\r\n\r\n                      <!-- Add Inventory Item -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Add Items\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n\r\n                              <div class=\"flip-scroll\">\r\n                                <!-- Form 2 -->\r\n                                <!-- <form [formGroup]=\"addInventoryItem\"> -->\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                      <a class=\"btn btn-gray\" data-toggle=\"modal\" data-target=\"#myInventory\"><i\r\n                                          class=\"fa fa-plus\"></i>\r\n                                        Select Inventory Item</a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                      <a type=\"submit\" class=\"btn btn-blue\" data-toggle=\"modal\"\r\n                                        data-target=\"#myPriceBook\"><i class=\"fa fa-plus\"></i>\r\n                                        Select PriceBook </a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div><br />\r\n                                <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                                  <thead class=\"flip-content bordered-palegreen\">\r\n                                    <tr>\r\n                                      <th width=\"10%\">\r\n                                        Item #\r\n                                      </th>\r\n                                      <th width=\"10%\">\r\n                                        Type\r\n                                      </th>\r\n                                      <th width=\"35%\">\r\n                                        Name\r\n                                      </th>\r\n                                      <!-- <th width=\"20%\">\r\n                                        Description\r\n                                      </th> -->\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        QTY\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Units\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        List Price($)\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Sub Total($)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Delete\r\n                                      </th>\r\n                                      <!-- <th width=\"10%\">\r\n                                        Total Cost ($)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Cost ($)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Profit From Mark Up ($)\r\n                                      </th> -->\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <ng-container>\r\n                                    <tbody>\r\n                                      <tr>\r\n                                        <td>PART3</td>\r\n                                        <td>PART</td>\r\n                                        <td>Hand Pumps</td>\r\n                                        <td><input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                            class=\"form-control input-sm\"></td>\r\n                                        <td class=\"center\">Each</td>\r\n                                        <td class=\"text-right\">$2,400.00</td>\r\n                                        <td class=\"text-right\">$2,400.00</td>\r\n                                        <td class=\"center\">\r\n                                          <a class=\"btn btn-xs btn-danger\" (click)=\"deleteItem()\">\r\n                                            <i class=\"fa fa-trash-o\"></i>\r\n                                          </a>\r\n                                        </td>\r\n                                        <!-- <td>$3,048.00</td>\r\n                                        <td>$1,846.15</td>\r\n                                        <td>$1,201.85</td> -->\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <td>TOOL3</td>\r\n                                        <td>MATERIAL</td>\r\n                                        <td>Taparia Water Pump Plier</td>\r\n                                        <td><input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                            class=\"form-control input-sm\"></td>\r\n                                        <td class=\"center\">Each</td>\r\n                                        <td class=\"text-right\">$100.00</td>\r\n                                        <td class=\"text-right\">$100.00</td>\r\n                                        <td class=\"center\">\r\n                                          <a class=\"btn btn-xs btn-danger\" (click)=\"deleteItem()\">\r\n                                            <i class=\"fa fa-trash-o\"></i>\r\n                                          </a>\r\n                                        </td>\r\n                                        <!-- <td>$127.00</td>\r\n                                        <td>$76.92</td>\r\n                                        <td>$50.08</td> -->\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <td>CONS1</td>\r\n                                        <td>CONSUMABLE</td>\r\n                                        <td>Soldering Wire Lead</td>\r\n                                        <td><input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                            class=\"form-control input-sm\"></td>\r\n                                        <td class=\"center\">Each</td>\r\n                                        <td class=\"text-right\">$100.00</td>\r\n                                        <td class=\"text-right\">$100.00</td>\r\n                                        <td class=\"center\">\r\n                                          <a class=\"btn btn-xs btn-danger\" (click)=\"deleteItem()\">\r\n                                            <i class=\"fa fa-trash-o\"></i>\r\n                                          </a>\r\n                                        </td>\r\n                                        <!-- <td>$127.00</td>\r\n                                        <td>$76.92</td>\r\n                                        <td>$50.08</td> -->\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <td>PB-7682</td>\r\n                                        <td>STANDARD</td>\r\n                                        <td>Install Water Pumps</td>\r\n                                        <td><input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                            class=\"form-control input-sm\"></td>\r\n                                        <td class=\"center\">Each</td>\r\n                                        <td class=\"text-right\">$932.1</td>\r\n                                        <td class=\"text-right\">$932.1</td>\r\n                                        <td class=\"center\">\r\n                                          <a class=\"btn btn-xs btn-danger\" (click)=\"deleteItem()\">\r\n                                            <i class=\"fa fa-trash-o\"></i>\r\n                                          </a>\r\n                                        </td>\r\n                                        <!-- <td>$932.1</td>\r\n                                        <td></td>\r\n                                        <td></td> -->\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <td>PB-2597</td>\r\n                                        <td>STANDARD</td>\r\n                                        <td>Repair Water Main</td>\r\n                                        <td><input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                            class=\"form-control input-sm\"></td>\r\n                                        <td class=\"center\">Each</td>\r\n                                        <td class=\"text-right\">$672.1</td>\r\n                                        <td class=\"text-right\">$672.1</td>\r\n                                        <td class=\"center\">\r\n                                          <a class=\"btn btn-xs btn-danger\" (click)=\"deleteItem()\">\r\n                                            <i class=\"fa fa-trash-o\"></i>\r\n                                          </a>\r\n                                        </td>\r\n                                        <!-- <td>$672.1</td>\r\n                                        <td></td>\r\n                                        <td></td> -->\r\n                                      </tr>\r\n                                    </tbody>\r\n                                  </ng-container>\r\n                                </table>\r\n\r\n                                <br />\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostLbl\">\r\n                                        <h5><b>Material Cost</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostVal\">\r\n                                        <h5><b class=\"text-right\">$4,204.20</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <br>\r\n                                <!-- </form> -->\r\n                                <!-- /Form 2 -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <br>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Add Inventory Item -->\r\n\r\n                      <!-- Custom Labor & Material -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Custom Labor & Material\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n\r\n                              <div class=\"flip-scroll\">\r\n                                <!-- <form [formGroup]=\"customLabAndMat\"> -->\r\n                                <div class=\"row\">\r\n                                 <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                       <!-- <a type=\"submit\" class=\"btn btn-success\" data-toggle=\"modal\"\r\n                                        data-target=\"#customLaborAndMaterial\"><i class=\"fa fa-plus\"></i>\r\n                                        Custom Labor & Material</a>  -->\r\n                                <!-- <button type=\"submit\" (click)=\"customLaborAndMaterial()\" class=\"btn btn-success\"><i\r\n                                          class=\"fa fa-check\"></i>\r\n                                          Custom Labor & Material</button>    -->\r\n                                          <label for=\"customLabAndMatCostLbl\">\r\n                                              <b>General Description</b>\r\n                                            </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-10\">\r\n                                    <div class=\"form-group\">\r\n                                        <textarea rows=\"3\" class=\"form-control\" placeholder=\"Enter General Description\"></textarea>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <br />\r\n                                <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                                  <thead class=\"flip-content bordered-palegreen\">\r\n                                    <tr>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Item #\r\n                                      </th>\r\n                                      <!-- <th width=\"10%\" class=\"center\">\r\n                                        ID\r\n                                      </th> -->\r\n                                      <th width=\"15%\" class=\"center\">\r\n                                        Type\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        QTY\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Units\r\n                                      </th>\r\n                                      <th width=\"25%\" class=\"center\">\r\n                                        Description\r\n                                      </th>\r\n                                      <th width=\"5%\" class=\"center\">\r\n                                        List Price($)\r\n                                      </th>\r\n                                      <th width=\"5%\" class=\"center\">\r\n                                        Sub Total($)\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Delete\r\n                                      </th>\r\n                                      <!-- <th width=\"5%\">\r\n                                        Total Cost ($)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Cost ($)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Profit From Mark Up ($)\r\n                                      </th> -->\r\n\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <td>\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"CLM-002\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td>\r\n                                        <select class=\"form-control\"   required>\r\n                                          <option value=\"OTHER\">OTHER</option>\r\n                                          <option value=\"MATERIAL\">MATERIAL</option>\r\n                                          <option value=\"PERMIT\">PERMIT</option>\r\n                                          <option value=\"LABOR\">LABOR</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td>\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td>\r\n                                        <select class=\"form-control\">\r\n                                          <option value=\"EACH\">EACH</option>\r\n                                          <option value=\"INCHES\">INCHES</option>\r\n                                          <option value=\"HOUR\">HOUR</option>\r\n                                          <option value=\"DAY\">DAY</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td>\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                          value=\"Contractor will provide the following scope of work. Digging and\r\n                                          Excavation, Exploration to find seepage pit. Snake and hydrojet the pip. Obtain permit\" class=\"form-control input-md\">\r\n                                      </td>\r\n                                      <td class=\"text-right\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$5,325.00\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td class=\"text-right\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$5,325.00\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td class=\"center\">\r\n                                        <a class=\"btn btn-xs btn-success\" (click)=\"saveCustomLAndM()\">\r\n                                          <i class=\"fa fa-check\"></i>\r\n                                        </a> &nbsp; &nbsp;\r\n                                        <a class=\"btn btn-xs btn-danger\" (click)=\"cancelCustomLAndM()\">\r\n                                          <i class=\"fa fa-times\"></i>\r\n                                        </a>\r\n                                      </td>\r\n                                    </tr>\r\n                                    <!-- <tr>\r\n                                      <td class=\"center\">CLM-001</td>\r\n                                      <td class=\"center\">MATERIAL</td>\r\n                                      <td class=\"center\">1</td>\r\n                                      <td class=\"center\">Each</td>\r\n                                      <td>Contractor will provide the following scope of work. Digging and\r\n                                        Excavation, Exploration to find seepage pit. Snake and hydrojet the\r\n                                        pip. Obtain permit</td>\r\n                                      <td class=\"text-right\">$5,325.00</td>\r\n                                      <td class=\"text-right\">$5,325.00</td>\r\n                                      <td class=\"center\">\r\n                                        <a class=\"btn btn-xs btn-danger\" (click)=\"deleteCustomLandM()\">\r\n                                          <i class=\"fa fa-trash-o\"></i>\r\n                                        </a>\r\n                                      </td>\r\n                                       <td>$6,762.75</td>\r\n                                      <td>$553.85</td>\r\n                                      <td>$310.15</td> \r\n                                    </tr> -->\r\n                                  </tbody>\r\n                                </table><br />\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <h5><b>Custom Labor & Material Cost</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <h5><b class=\"text-right\">$5,325.75</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <br>\r\n                                <!-- </form> -->\r\n                                <!-- /Form 4 -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <br>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Custom Labor & Material -->\r\n\r\n                      <!-- Total Estimate Cost -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Total Estimate Cost\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n                              <table class=\"table table-bordered table-hover\" style=\"border-color: 3px solid black;\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Labor & Material Cost</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right;\">$12,198.35</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Tax</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg: 10.00%\"\r\n                                        value=\"8.25%\" class=\"form-control input-sm\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;\">$1,006.36</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Price Before Discount</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: palegreen;\">\r\n                                      <b>$13,204.71</b></td>\r\n                                  </tr>\r\n                                  <tr style=\"border-top-color: 2px solid black\">\r\n                                    <td width=\"40%\"><b>Discounts</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right;\"></td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Discount</b></td>\r\n                                    <td width=\"20%\">PromoCode</td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg: 100.00\"\r\n                                        value=\"150.00\" class=\"form-control input-sm\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;\">- $150.00</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Other Promos</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg: 100.00\"\r\n                                        value=\"120.00\" class=\"form-control input-sm\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;\">- $120.00</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Discounts ($)</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: palegreen;\"><b>-\r\n                                        $270.00</b></td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Payment Methods</b></td>\r\n                                    <td width=\"20%\">\r\n                                      <select class=\"form-control\" id=\"paymentMethods\"  \r\n                                        required>\r\n                                        <option value=\"None\">Credit Card</option>\r\n                                        <option value=\"Weekly\">Check</option>\r\n                                        <option value=\"Monthly\">Cash</option>\r\n                                        <option value=\"Quaterly\">Finance</option>\r\n                                      </select>\r\n                                    </td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg: 10.00%\" value=\"3%\"\r\n                                        class=\"form-control input-sm\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;background-color: palegreen;  \">\r\n                                      <b>$388.04</b></td>\r\n                                  </tr>\r\n                                  <tr style=\"background-color: yellow;\">\r\n                                    <td width=\"40%\">\r\n                                      <h5><b>Total Price ($)</b></h5>\r\n                                    </td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right;\">\r\n                                      <h5><b>$13,322.75</b></h5>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Required Deposit</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg: 10.00%\"\r\n                                        value=\"10%\" class=\"form-control input-sm\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;background-color: skyblue;\">\r\n                                      <b>$1,332.28</b></td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              <br />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <!-- /Total Estimate Cost -->\r\n\r\n\r\n                      <!-- Special Instructions -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Special Instructions\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"bioLbl\">\r\n                                  <b>Add Special Instructions </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\"\r\n                                    placeholder=\"Enter Your Installation Instructions\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Special Instructions -->\r\n\r\n                      <!-- Job Site Notice -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Job Site Notice\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobSiteNoticeLbl\">\r\n                                  <b>Job Site Notice</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\"\r\n                                    placeholder=\"Enter Job Site Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"addPicturesLbl\">\r\n                                  <b>Add Pictures</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type='file' (change)=\"fileChangeEvent($event)\" multiple>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <div>\r\n                                  <!-- <figure class=\"icon1\">\r\n                                        <figcaption (click)=\"removeSelectedFile(index)\"\r\n                                          style=\"margin-left:20px;color: red\"><i class=\"fa fa-times\"></i>\r\n                                        </figcaption>\r\n                                        <img [src]=\"url\" height=\"100px\" width=\"120px\">\r\n\r\n                                      </figure> -->\r\n                                  &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                </div>\r\n                                <!-- <input id=\"cin\" name=\"cin\" type=\"file\" (change)=\"fileChangeEvent($event)\"\r\n                                        placeholder=\"Upload a file...\" multiple />\r\n                                      <img [src]=\"url\" height=\"100px\" width=\"120px\"> -->\r\n                                <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"upload()\">\r\n                                  Upload\r\n                                </button>\r\n                                <!-- <img *ngFor='let url of urls; let i = index'  [src]=\"url\" height=\"200\">\r\n                                                                  <a class=\"btn btn-xs btn-danger shiny\" (click)=\"removeSelectedFile(i)\">\r\n                                                                    <i class=\"fa fa-trash-o\"></i>\r\n                                                                  </a> -->\r\n                                <!-- <div class=\"controls\">\r\n                                                                    <div data-provides=\"fileupload\" class=\"fileupload fileupload-new\">\r\n                                                                      <div style=\"width: 100px; height: 120px;\"\r\n                                                                        class=\"fileupload-new thumbnail\">\r\n                                                                        <img [src]=\"imagePreview\" style=\"height:120px;width:100px;\">\r\n                                                                      </div>\r\n                                                                      <div\r\n                                                                        style=\"max-width: 90px; max-height: 110px; line-height: 20px;\"\r\n                                                                        class=\"fileupload-preview fileupload-exists thumbnail\"></div>\r\n                                                                      <div>\r\n                                                                        <input #imageUpload type=\"file\" accept=\"image/*\" id=\"avatar\"\r\n                                                                          (change)=\"select($event)\" #fileInput>\r\n                                                                        <button type=\"button\" class=\"btn\" [disabled]=\"!img\"\r\n                                                                          (click)=\"imgfileUpload()\">Upload</button>\r\n                                                                      </div>\r\n                                                                    </div>\r\n                                                                  </div> -->\r\n                                <!-- <div *ngIf=\"progressShow\" class=\"progress-bar1 blue stripes\">\r\n                                                                    <span [style.width.%]=\"percentage\">\r\n                                                                      <p style=\"text-align: center;color:black;font-size:18px;\">\r\n                                                                        {{percentage}}%</p>\r\n                                                                    </span>\r\n                                                                  </div>\r\n                                                                  <br>\r\n                                                                  <div *ngIf=\"progressHide\" class=\"alert alert-block alert-success\"\r\n                                                                    style=\"height:3px;\">\r\n                                                                    <h4 class=\"alert-heading\"\r\n                                                                      style=\"margin-top:-5px;text-align:center;\">Image\r\n                                                                      Uploaded\r\n                                                                      Successfully</h4>\r\n                                                                  </div>  -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Job Site Notice -->\r\n\r\n                      <!-- Estimate Notice -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Estimate Notice\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"estimateNoticeLbl\">\r\n                                  <b>Estimate Notice </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" placeholder=\"Enter Estimate Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Estimate Notice -->\r\n\r\n                      <!-- NOTES: This Section is visible to Pro Only not to Customer -->\r\n                      <!-- Private Notice -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\" style=\"color:  #FF0000; border-bottom: 1px dashed #FF0000;\">\r\n                            Private Notice\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"privateNoticeLbl\">\r\n                                  <b>Private Notice </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\"\r\n                                    placeholder=\"Enter Private Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Private Notice -->\r\n                      <!-- /NOTES: This Section is visible to Pro Only not to Customer -->\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <hr class=\"hr-gray-thick\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <!-- Customer Buttons -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-3 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-blue\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Modify and Resubmit</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"cancelEstimate()\" class=\"btn btn-danger\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Reject</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-success\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Approve</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-warning\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Customer Print</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-purple\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Download</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Customer Buttons -->\r\n\r\n                      <!-- PRO Buttons -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-blue\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Send</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"cancelEstimate()\" class=\"btn btn-gray\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Save As Draft</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-success\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Receive Deposit</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <a id=\"formButton\" class=\"btn btn-purple\"><i class=\"fa fa-check\"></i>\r\n                              Estimate Analyzer</a>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-warning\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              View Customer PDF</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /PRO Buttons -->\r\n\r\n                      <!-- Set Reminder -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label for=\"setReminderLbl\">\r\n                              <b>Set Automatic Reminder to Follow up with Customer </b>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                          <div class=\"form-group\">\r\n                            <select class=\"form-control\" id=\"setReminder\" required>\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"None\">None</option>\r\n                              <option value=\"Weekly\">in 1 Day</option>\r\n                              <option value=\"Monthly\">3 Days</option>\r\n                              <option value=\"Quaterly\">1 Week</option>\r\n                              <option value=\"Yearly\">2 Weeks</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Set Reminder -->\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <hr class=\"hr-gray-thick\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- Estimate Analyzer -->\r\n                      <form id=\"form1\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                            <div class=\"form-title\">\r\n                              Estimate Analyzer\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-xs-12 col-md-12\">\r\n                                <table class=\"table table-bordered table-hover\" style=\"border-color: 3px solid black;\">\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Gross Sale = Direct Cost(B) + Overhead Cost(C) + Tech\r\n                                        Commssions (E) + Desired Profit (F)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\">$12,294.30</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Desired Profit</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"20%\" value=\"20%\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\"> $2,458.86</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Direct Cost</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                      </td>\r\n                                    </tr>\r\n                                    <tr style=\"border-top-color: 2px solid black\">\r\n                                      <td width=\"40%\">Estimated Channel Manager Commissions</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"> <input type=\"text\" style=\"text-align: center;\" placeholder=\"7%\"\r\n                                          value=\"7%\" class=\"form-control input-sm\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\">$860.60</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Credit Card Processing Fees</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"2.6%\" value=\"2.6%\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">$365.95</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Truck Operating Cost(TOC)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"120.00\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">$25.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Material Cost With Markup</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        $3,220.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Labor Cost With Markup</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        $1,960.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Other Cost</td>\r\n                                      <td width=\"20%\">Describe</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        $1,125.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Total Direct Job Cost(B)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"> <input type=\"text\" style=\"text-align: center;\"\r\n                                          placeholder=\"61.46%\" value=\"61.46%\" class=\"form-control input-sm\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: palegreen; \">\r\n                                        <b>$7,556.55</b>\r\n                                      </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Gross Profit = Bid Price (A)-Direct Cost (B)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\"><b>\r\n                                          $4,737.75</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Overhead Cost Estimate (C) = Set % *A\r\n                                        </b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"30%\" value=\"30%\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: palegreen;\"><b>\r\n                                          $3,688.29</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Employee Commission and Taxes</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\"><b>\r\n                                        </b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Tech Commissions / Pay</td>\r\n                                      <td width=\"20%\">\r\n                                        <select class=\"form-control\" id=\"paymentMethods\"\r\n                                            required>\r\n                                          <option value=\"Commission\">Commission</option>\r\n                                          <option value=\"Hourly\">Hourly</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"25%\" value=\"25%\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        $1,184.44</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Employee Worksman Comp Ins</td>\r\n                                      <td width=\"20%\">\r\n                                        <select class=\"form-control\" id=\"paymentMethods\"\r\n                                          required>\r\n                                          <option value=\"YES\">YES</option>\r\n                                          <option value=\"No\">NO</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"7%\" value=\"7%\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        $280.35</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Employee Tax Company</td>\r\n                                      <td width=\"20%\">\r\n                                        <select class=\"form-control\" id=\"paymentMethods\"\r\n                                          required>\r\n                                          <option value=\"YES\">YES</option>\r\n                                          <option value=\"No\">NO</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"3%\" value=\"3%\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        $120.15</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">\r\n                                        <b>Employee Commissions, Taxes and Ins (E) </b>\r\n                                      </td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: palegreen;\">\r\n                                        <b>$1,584.94</b>\r\n                                      </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Profit from Material Mark ups</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg: 10.00%\"\r\n                                          value=\"10%\" class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>$1,562.08</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Actual Net Profit from Labor</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">\r\n                                        <b>-$535.48</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Actual Net Profit</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>$1,026.59</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Actual Net Profit (%)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">\r\n                                        <b>8.35%</b></td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                                </table>\r\n                                <br />\r\n                                <br />\r\n                                <div class=\"col-sm-12\">\r\n                                  <div class=\"col-sm-3 \">\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 \">\r\n                                    <div class=\"form-group\">\r\n                                      <!-- <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-success\"><i\r\n                                          class=\"fa fa-check\"></i>\r\n                                        Save Item</button> -->\r\n                                      <a id=\"formButton2\" class=\"btn btn-success\"><i class=\"fa fa-check\"></i>\r\n                                        Save Item</a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <a id=\"formButton1\" class=\"btn btn-purple\"><i class=\"fa fa-check\"></i>\r\n                                        Back to Estimate </a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 \">\r\n                                  </div>\r\n                                </div>\r\n                                <br />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                      <br />\r\n                      <!-- /Estimate Analyzer -->\r\n                    </form>\r\n                  </div>\r\n                  <!-- /form1 -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Select Inventory Popup -->\r\n        <div id=\"myInventory\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Select Parts, Tools, Consumables:</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <br />\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-6\">\r\n                          <div class=\"form-group\">\r\n                            <span class=\"input-icon icon-right\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Eg: Search Material\">\r\n                              <i class=\"fa fa-search\"></i>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-striped table-hover table-bordered\" id=\"editabledatatable\"\r\n                          style=\"width:100%;\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th style=\"width:5%;\">\r\n                                Select\r\n                              </th>\r\n                              <th style=\"width:5%;\">\r\n                                Type\r\n                              </th>\r\n                              <th style=\"width:5%;\">\r\n                                Name\r\n                              </th>\r\n                              <th style=\"width:10%;\">\r\n                                Description\r\n                              </th>\r\n                              <th style=\"width:5%;\">\r\n                                Manufacturer\r\n                              </th>\r\n                              <th style=\"width:5%;\">\r\n                                Model\r\n                              </th>\r\n                              <!-- <th style=\"width:5%;\">\r\n                                QTY\r\n                              </th> -->\r\n                              <th style=\"width:5%;\">\r\n                                List Price\r\n                              </th>\r\n                              <!-- <th style=\"width:5%;\">\r\n                                Sub Total\r\n                              </th> -->\r\n\r\n                            </tr>\r\n                          </thead>\r\n\r\n                          <tbody>\r\n                            <tr>\r\n                              <td class=\"center\">\r\n                                <label>\r\n                                  <input type=\"checkbox\" class=\"colored-success\" value=\"1\">\r\n                                  <span class=\"text\"></span>\r\n                                </label></td>\r\n                              <td>{{data.type}}</td>\r\n                              <td>{{data.name}}</td>\r\n                              <td>{{data.description}}</td>\r\n                              <td>{{data.manufacturer}}</td>\r\n                              <td>{{data.model}}</td>\r\n                              <td class=\"center \">{{data.listPrice}}</td>\r\n                              <!-- <td>{{data.quantity}}</td> -->\r\n                              <!-- <td class=\"center \">{{data.subTotal}}</td> -->\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                        <div>\r\n                          <p>No Records Found</p>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\"\r\n                        (click)=\"saveSelectedInventory()\"><i class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"\r\n                        (click)=\"cancelSelectedInventory()\"><i class=\"fa fa-times\"></i>\r\n                        Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /Select Inventory Popup -->\r\n\r\n\r\n        <!-- Select PriceBook Popup -->\r\n        <div id=\"myPriceBook\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Select Standard/Member/Value from View PriceBook:</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <br />\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-6\">\r\n                          <div class=\"form-group\">\r\n                            <span class=\"input-icon icon-right\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Eg: Search PriceBook\">\r\n                              <i class=\"fa fa-search\"></i>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                          <thead class=\"flip-content bordered-palegreen\">\r\n                            <tr>\r\n                              <th>\r\n                                Preview\r\n                              </th>\r\n                              <th>\r\n                                Service ID\r\n                              </th>\r\n                              <th>\r\n                                Main Category\r\n                              </th>\r\n                              <th>\r\n                                Sub-Category\r\n                              </th>\r\n                              <th>\r\n                                Title\r\n                              </th>\r\n                              <!-- <th>\r\n                                Material retail price\r\n                              </th>\r\n                              <th>\r\n                                Truck Operating Cost\r\n                              </th>\r\n                              <th>\r\n                                Lead Cost\r\n                              </th>\r\n                              <th>\r\n                                Total Cost\r\n                              </th>\r\n                              <th>\r\n                                Time\r\n                              </th>\r\n                              <th>\r\n                                Labor Rate $/HR\r\n                              </th>\r\n                              <th>\r\n                                Labor Cost\r\n                              </th> -->\r\n                              <th>\r\n                                Standard\r\n                              </th>\r\n                              <th>\r\n                                Value\r\n                              </th>\r\n                              <th>\r\n                                Member\r\n                              </th>\r\n                              <!-- <th>\r\n                                Active\r\n                              </th>\r\n                              <th>\r\n                                Last Modified By\r\n                              </th> -->\r\n                            </tr>\r\n                          </thead>\r\n\r\n                          <tbody>\r\n                            <!-- <tr *ngFor=\"let data of priceBookListDetails\"> -->\r\n                            <tr>\r\n                              <td class=\"center\">\r\n                                <!-- <a class=\"btn btn-xs btn-success  \" (click)=\"viewItem(data.serviceId)\">\r\n                                  <i class=\"fa fa-eye\"></i> -->\r\n                                <a class=\"btn btn-xs btn-success  \" (click)=\"viewItem()\">\r\n                                  <i class=\"fa fa-eye\"></i>\r\n                                </a>\r\n                              </td>\r\n                              <td>\r\n                                PB-7682\r\n                              </td>\r\n                              <td>\r\n                                Plumbing\r\n                              </td>\r\n                              <td>\r\n                                Pumps\r\n                              </td>\r\n                              <td>\r\n                                Install Water Pumps\r\n                              </td>\r\n                              <!-- <td>\r\n                                ${{data.materialCost}}\r\n                              </td>\r\n                              <td>\r\n                                ${{data.truckOperatingCost}}\r\n                              </td>\r\n                              <td>\r\n                                ${{data.leadCost}}\r\n                              </td>\r\n                              <td>\r\n                                ${{data.totalCost}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.labourHours}}\r\n                              </td>\r\n                              <td>\r\n                                ${{data.laborRate}}\r\n                              </td>\r\n                              <td>\r\n                                ${{data.laborCost}}\r\n                              </td> -->\r\n                              <td>\r\n                                $932.1\r\n                              </td>\r\n                              <td>\r\n                                $860.4\r\n                              </td>\r\n                              <td>\r\n                                $788.7\r\n                              </td>\r\n                              <!-- <td class=\"item\">\r\n                                <label>\r\n                                  <input type=\"checkbox\" class=\"colored-success\" checked=\"checked\">\r\n                                  <span class=\"text\"></span>\r\n                                </label>\r\n                              </td>\r\n                              <td>\r\n                                {{data.createdOn}}\r\n                              </td> -->\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"center\">\r\n                                <a class=\"btn btn-xs btn-success  \" (click)=\"viewItem()\">\r\n                                  <i class=\"fa fa-eye\"></i>\r\n                                </a>\r\n                              </td>\r\n                              <td>\r\n                                PB-2597\r\n                              </td>\r\n                              <td>\r\n                                Plumbing\r\n                              </td>\r\n                              <td>\r\n                                Septic Systems, Sewers & Water Mains\r\n                              </td>\r\n                              <td>\r\n                                Repair Water Main\r\n                              </td>\r\n                              <td>\r\n                                $672.1\r\n                              </td>\r\n                              <td>\r\n                                $620.4\r\n                              </td>\r\n                              <td>\r\n                                $568.7\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td class=\"center\">\r\n                                <a class=\"btn btn-xs btn-success  \" (click)=\"viewItem()\">\r\n                                  <i class=\"fa fa-eye\"></i>\r\n                                </a>\r\n                              </td>\r\n                              <td>\r\n                                PB-5417\r\n                              </td>\r\n                              <td>\r\n                                Plumbing\r\n                              </td>\r\n                              <td>\r\n                                Water Softening & Purification\r\n                              </td>\r\n                              <td>\r\n                                Install Water Purification\r\n                              </td>\r\n                              <td>\r\n                                $802.1\r\n                              </td>\r\n                              <td>\r\n                                $740.4\r\n                              <td>\r\n                                $678.7\r\n                              </td>\r\n                            </tr>\r\n\r\n                          </tbody>\r\n\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <!-- <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\"\r\n                        (click)=\"saveSelectedInventory()\"><i class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div> -->\r\n                  <div class=\"col-lg-4 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"\r\n                        (click)=\"cancelSelectedInventory()\"><i class=\"fa fa-arrow-left\"></i>\r\n                        Back to Add Item List</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /Select PriceBook Popup -->\r\n\r\n        <!-- Custom Labor & Material Popup -->\r\n        <div id=\"customLaborAndMaterial\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Custom Labor & Material</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <br />\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                          <button type=\"submit\" class=\"btn btn-gray\" (click)=\"addCustomLaborOrMaterial()\">\r\n                            <i class=\"fa fa-user-plus\"></i>Add Custom Labor/Material</button>\r\n                        </div>\r\n                      </div><br />\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-bordered table-striped table-condensed \">\r\n                          <thead class=\" bordered-purple\">\r\n                            <tr>\r\n                              <th>\r\n                                Item #\r\n                              </th>\r\n                              <th>\r\n                                Type\r\n                              </th>\r\n                              <th>\r\n                                Qty\r\n                              </th>\r\n                              <th>\r\n                                Units\r\n                              </th>\r\n                              <th>\r\n                                Description\r\n                              </th>\r\n                              <th>\r\n                                Vendor\r\n                              </th>\r\n                              <th>\r\n                                Unit Cost\r\n                              </th>\r\n                              <th>\r\n                                Rate (Cost Plus Mark Up)\r\n                              </th>\r\n                              <th>\r\n                                Extended Cost With Mark Up\r\n                              </th>\r\n                            </tr>\r\n                            <!-- <tr>\r\n                                      <th width=\"10%\">\r\n                                        Item #\r\n                                      </th>                                      \r\n                                      <th width=\"19%\">\r\n                                        Type\r\n                                      </th>\r\n                                      <th width=\"10%\">\r\n                                        QTY\r\n                                      </th>\r\n                                      <th width=\"13%\">\r\n                                        Units\r\n                                      </th>\r\n                                      <th width=\"20%\"  >\r\n                                        Description\r\n                                      </th>\r\n                                      <th width=\"18%\">\r\n                                        Vendor\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                      Unit Cost\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Rate <br/>\r\n                                       (Cost+MarkUp)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                               Extended Cost With Mark Up\r\n                                      </th>                                    \r\n                             \r\n                                      <!-- <th>\r\n                                                    Delete\r\n                                                  </th> \r\n                                    </tr> -->\r\n                          </thead>\r\n                          <tbody>\r\n                            <!-- Row 1 -->\r\n                            <tr>\r\n                              <td>1</td>\r\n                              <td>\r\n                                <select class=\"form-control\"   required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"6\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"6 Inch PVC Connector\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$50.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$65.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$390.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 1 -->\r\n                            <!-- Row 2 -->\r\n                            <tr>\r\n                              <td>2</td>\r\n                              <td>\r\n                                <select class=\"form-control\"   required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"3\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"6 Inch Elbow\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$25.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$35.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$105.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 2 -->\r\n                            <!-- Row 3 -->\r\n                            <tr>\r\n                              <td>3</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Sand and Concrete\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$225.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$225.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 3 -->\r\n                            <!-- Row 4 -->\r\n                            <tr>\r\n                              <td>4</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"16\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Master Tech\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$165.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$165.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$2640.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 4 -->\r\n                            <!-- Row 5 -->\r\n                            <tr>\r\n                              <td>5</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"Raul dgging 3x4' ft hole\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 5 -->\r\n                            <!-- Row 6 -->\r\n                            <tr>\r\n                              <td>6</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                  value=\"Jose G, dgging tunnel to kitchen\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 6 -->\r\n                            <!-- Row 7 -->\r\n                            <tr>\r\n                              <td>7</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Permit\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$100.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 7 -->\r\n                            <!-- Row 8 -->\r\n                            <tr>\r\n                              <td>8</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"70ft, 6 Inch trenchless pull\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$450.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$675.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$675.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 8 -->\r\n                            <!-- Row 9 -->\r\n                            <tr>\r\n                              <td>9</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"Subcontracted Service\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 9 -->\r\n                            <!-- Row 10 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Material Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $720\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 10 -->\r\n                            <!-- Row 11 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Material Tax</b>\r\n                              </td>\r\n                              <td>\r\n                                $0.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 11 -->\r\n                            <!-- Row 12 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n\r\n                                <b>Labor Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $3,480.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 12 -->\r\n                            <!-- Row 13 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Misc Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $1,125.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 13 -->\r\n                            <!-- Row 13 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Total Project Direct Cost</b>\r\n                              </td>\r\n                              <td>\r\n                                $5,325.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 13 -->\r\n\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\" (click)=\"saveSelectedLabor()\"><i\r\n                          class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\" (click)=\"cancelSelectedLabor()\"><i\r\n                          class=\"fa fa-times\"></i>\r\n                        Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /Custom Labor & Material Popup -->\r\n\r\n      </div>\r\n      <!-- /Page Body -->\r\n    </div>\r\n    <!-- /Page Content -->\r\n  </div>\r\n  <!-- /Page Container -->\r\n</div>\r\n<!-- /Main Container -->"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-title {\n  color: #5db2ff;\n  border-bottom: 1px dashed #5db2ff;\n  /*display: block;\r\n     padding: 8px 0;*/\n  font-size: 15px;\n  font-weight: bold;\n  /*  color: #5DB2FF;\r\n    margin-bottom: 15px;*/ }\n\n.mandatory {\n  font-weight: bold;\n  color: #FF0000;\n  font-size: 16px; }\n\n.hr-gray-thick {\n  border-top: 3px solid #333 !important; }\n\n.hr-gray {\n  border-top: 1px solid #333 !important; }\n\ninput {\n  color: black; }\n\n.mock {\n  color: red;\n  text-align: center; }\n\n.mock-conf {\n  color: green;\n  text-align: center; }\n\n.inprogress {\n  color: orangered;\n  text-align: center; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.checkbox, .radio {\n  position: relative;\n  display: block;\n  margin-top: 0px !important;\n  margin-bottom: 0px !important; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.button-center {\n  text-align: center; }\n\n.button-left {\n  text-align: left; }\n\n.button-right {\n  text-align: right; }\n\n.accordion.panel-group .panel-heading .accordion-toggle.collapsed {\n  color: #5db2ff !important;\n  background-color: #333 !important;\n  border-bottom: 1px solid #5db2ff !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:hover:after {\n  color: #FFF !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle {\n  color: #5db2ff !important;\n  background-color: #333 !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:after {\n  color: #5db2ff !important; }\n\n.center {\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.item {\n  text-align: center; }\n\n.body {\n  background-color: white; }\n\n.header-title {\n  font-size: 18px !important; }\n\n.form-heading {\n  font-size: 18px !important; }\n\n/* Buttons */\n\n.btn {\n  font-size: 14px !important;\n  font-weight: bold !important; }\n\n/* /Buttons */\n\n/* Line */\n\n.hr-blue {\n  border-top: 1px solid #869eb4 !important; }\n\n/* /Line */\n\n/* Textbox */\n\n.formcontrol, select {\n  padding-left: 0px !important;\n  padding-right: 0px !important;\n  border-left-width: 1px !important;\n  border-right-width: 1px !important; }\n\n/* /Textbox */\n\n/* Atkore logo */\n\n.text {\n  text-align: center; }\n\n.text img {\n  width: 70px;\n  height: 80px; }\n\n/* /Atkore logo */\n\n/* Labels */\n\n.label {\n  padding: 5px !important; }\n\nlabel .mandatory {\n  color: red;\n  font-size: 16px !important;\n  font-weight: bold !important; }\n\n/* /Labels */\n\n/* Tables    */\n\n.table > tbody > tr > td {\n  padding: 2px !important;\n  line-height: 1.257143 !important;\n  vertical-align: middle; }\n\n/* /Tables    */\n\n/* Vertical Text */\n\n.testrotate p {\n  line-height: 145px !important;\n  font-size: 15px; }\n\n.testrotate .testq {\n  line-height: 483px !important;\n  font-size: 15px; }\n\n.testrotate .testr {\n  line-height: 100px !important;\n  font-size: 15px; }\n\n.testrotate .testp {\n  line-height: 170px !important;\n  font-size: 15px; }\n\n/* /Vertical Text */\n\n/* Textbox input */\n\n/* /Textbox input */\n\n.table-scrollable > .table > thead > tr > th {\n  white-space: wrap !important; }\n\n.form-control[_ngcontent-c3] {\n  padding: 4px 3px !important; }\n\n/* Pin Gap Diagram */\n\n.row .pin img {\n  width: 230px;\n  height: 240px;\n  margin-left: 30px !important;\n  margin-right: auto !important; }\n\n/* /Pin Gap Diagram */\n\n.gap {\n  text-align: center; }\n\n/* Bolt torque specifications */\n\n.adjust {\n  margin-left: 10px !important;\n  margin-bottom: 1040px !important; }\n\n/* /Bolt torque specifications */\n\n/* Imageupload    */\n\ntd .img-adjust {\n  margin-left: auto !important;\n  margin-right: auto !important; }\n\n/* /Imageupload    */\n\n.alert-heading {\n  font-size: 12px; }\n\n.align-text-top {\n  vertical-align: top !important; }\n\n.text-big {\n  font-size: 16px !important;\n  font-weight: bold !important; }\n\n.form-title {\n  color: #5db2ff;\n  border-bottom: 1px dashed #5db2ff;\n  /*display: block;\r\n     padding: 8px 0;\r\n     border-bottom: 1px dashed #7e3794;*/\n  font-size: 15px;\n  font-weight: bold;\n  /*  color: #5DB2FF;\r\n    margin-bottom: 15px;*/ }\n\n.mandatory {\n  font-weight: bold;\n  color: #FF0000;\n  font-size: 16px; }\n\n.hr-gray-thick {\n  border-top: 3px solid #333 !important; }\n\n.hr-gray {\n  border-top: 1px solid #333 !important; }\n\ninput {\n  color: black; }\n\n.mock {\n  color: red;\n  text-align: center; }\n\n.mock-conf {\n  color: green;\n  text-align: center; }\n\n.inprogress {\n  color: orangered;\n  text-align: center; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.text-center {\n  text-align: center; }\n\n.checkbox-center {\n  position: relative;\n  display: block;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.blue {\n  background-color: #5db2ff !important;\n  color: #333 !important;\n  font-weight: bold; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.accordion.panel-group .panel-body {\n  background-color: #fff !important;\n  border-top: none !important;\n  border-left: 2px solid #eee;\n  color: #262626 !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:hover:after {\n  color: #FFF !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle {\n  color: #5db2ff !important;\n  background-color: #333 !important;\n  border-bottom: 1px solid #5db2ff !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:after {\n  color: #5db2ff !important; }\n\n.icon1 {\n  height: auto;\n  width: 120px;\n  width: -moz-fit-content;\n  width: -webkit-fit-content;\n  width: fit-content;\n  font: 400 16px/1.4 \"Source Code Pro\";\n  font-variant: small-caps;\n  padding: 10px;\n  border: 1px solid #103683;\n  border-radius: 10px; }\n\n.text-blue {\n  color: #5db2ff; }\n\n.btn-xs-two {\n  padding: 2px 7px !important;\n  margin: 2px 0px !important; }\n\n.modal-header {\n  padding: 0px 0px 0px 0px !important; }\n\n.well.with-footer {\n  padding-bottom: 10px !important; }\n\n.modal-footer {\n  border-top: 3px solid #333 !important; }\n\n.table-scrollable {\n  width: 100%;\n  height: 200px !important;\n  overflow-x: auto;\n  overflow-y: auto !important;\n  border: 1px solid #ddd; }\n\n.modal-dialog {\n  width: 1200px !important;\n  margin: 40px auto !important; }\n\n#form1 {\n  display: none; }\n\n.form-control, select {\n  font-size: 13px;\n  color: #000000;\n  background-color: #fbfbfb;\n  border: 1px solid #d5d5d5;\n  padding: 6px 12px; }\n\n.text-right {\n  text-align: right; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.ts ***!
  \********************************************************************************/
/*! exports provided: AddEstimateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddEstimateComponent", function() { return AddEstimateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _utilities_beyond__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utilities/beyond */ "./src/utilities/beyond.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var _global_global__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../global/global */ "./src/global/global.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");









var AddEstimateComponent = /** @class */ (function () {
    function AddEstimateComponent(beyond, router, activatedRoute, formBuilder, http, toastr, datePipe) {
        this.beyond = beyond;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.formBuilder = formBuilder;
        this.http = http;
        this.toastr = toastr;
        this.datePipe = datePipe;
        this.selectedPriceBook = [];
        this.selectedInventory = [];
        this.pricebookTemp = [];
        this.inventoryTemp = [];
        this.listPriceBook = 0;
        this.showTable = false;
        this.listPriceInventory = 0;
        this.servicePriceBook = [];
        this.priceBookListValue = 0;
        this.subTotalValue = 0;
        this.quant = 0;
        this.quantCM = 0;
        this.subTotalValueCM = 0;
        this.customMaterialListValue = 0;
        this.customLaborListValue = 0;
        this.priceCM = 0;
        this.priceCLM = 0;
        this.taxFinalValue = 0;
        this.paymentMethodValue = 0;
        this.reqDisc = 0;
        this.listPrice = 0;
        this.listPriceMarkUp = 0;
        this.markUpLaborValue = 0;
        this.listPriceOfLabor = 0;
        this.listPriceLaborMarkUp = 0;
        this.paymentModeValue = 0;
        this.creditCardPercentage = 0;
        this.totalValueAfterDiscounts = 0;
        this.valueBeforeDicount = 0;
        this.desiredProfitValue = 0;
        this.cmCommission = 0;
        this.channelManagerCommValue = 0;
        this.directJobCostValue = 0;
        this.cmPMValue = 0;
        this.desiredPercentage = 0;
        this.estimatedGrossProfitValue = 0;
        this.overHeadEstimateCostValue = 0;
        this.estimatedTechComm = 0;
        this.workManEstComm = 0;
        this.employeeTaxComm = 0;
        this.employeeCommTaxInc = 0;
        this.afterDiscount = 0;
        this.laborMarkUpValue = 0;
        this.materialMarkUp = 0;
        this.customLaborMarkUpListValue = 0;
        this.customMaterialMarkUpListValue = 0;
        this.filesToUpload = [];
        this.urls = [];
        this.imagePreview = "assets/img/no-image.png";
        this.imageArray = [];
        this.netProfitLabor = 0;
        this.estimatedMarkUpProfit = 0;
        this.netProfit = 0;
        this.netProfitPercent = 0;
        this.editForm = false;
        this.empCommission = 0;
        this.loginStaffCommission = 0;
        this.estTechComm = 0;
        this.netProfitValue = false;
        this.grossSaleValue = true;
    }
    AddEstimateComponent.prototype.ngOnInit = function () {
        this.beyond.beyondAdmin();
        this.loginData = JSON.parse(localStorage.getItem("login"));
        this.workOrderNum = JSON.parse(localStorage.getItem("workOrderNumber"));
        console.log(this.workOrderNum);
        this.workOrderData = localStorage.getItem('workorderdetails');
        this.customerData();
        this.getListOfStates();
        this.date = new Date();
        this.year = this.date.getFullYear();
        this.month = this.date.getMonth() + 1;
        this.currentDate = this.date.getDate();
        this.fullDate = this.currentDate + "-" + this.month + "-" + this.year;
        this.myDate = this.datePipe.transform(this.date, 'yyyy-MM-dd');
        this.addEstimate = this.formBuilder.group({
            estimateNum: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            dateCreated: [''],
            channelManager: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            splitRate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            primaryTech: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            secondaryTech: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerEmailId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerFirstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerLastName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerPhoneNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerPhoneType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerAddress: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerState: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerCity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerZipCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerSendInvoiceBy: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerInvoiceEmail: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            poNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerSince: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            crossSt1: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            crossSt2: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerSource: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerPaymentMethod: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            expectedStartDateLbl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            expectedEndDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            frequency: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            leadQuantity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            creditCardRequired: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerAdminNotes: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobEmail: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobPhoneNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobPhoneType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobAddress: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobState: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobCity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobZipCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paymentMethods: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paymentValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            newPromoCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            otherPromoCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            reqDiscount: [10, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            instructions: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobSiteNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            estimateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            privateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            setReminder: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            desiredProfitInEA: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            channelManagerCommission: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            otherCost: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            estimatedTechComm: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            employeeTaxCompany: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            worksmanCompType: ["NO", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            empTaxCompType: ["NO", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            materialGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            laborGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            requireManagerApproval: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
        this.addCustomLaborMaterial = this.formBuilder.group({
            customLaborMaterial: this.formBuilder.array([this.createLaborMaterial()])
        });
        this.addCustomMaterial = this.formBuilder.group({
            customMaterial: this.formBuilder.array([this.createCustomMaterial()])
        });
        this.editCustomLaborCost = this.formBuilder.group({
            itemNo: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            quantity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            units: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            listPrice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            priceMarkUp: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            subTotal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
        this.editCustomMaterialCost = this.formBuilder.group({
            itemNo: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            quantity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            units: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            listPrice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            priceMarkUp: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            subTotal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
    };
    // THIS IS FOR AUTO POPULATING THE DATA FROM WORK ORDER
    // THIS IS FOR AUTO POPULATING THE DATA FROM WORK ORDER
    AddEstimateComponent.prototype.customerData = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewStaffWorkOrder/' + this.workOrderData, options)
            .subscribe(function (data) {
            var woResponse = data.json();
            if (woResponse.status == 200) {
                _this.workOrderDescriptionData = woResponse.response[0];
                _this.billingAddressData = woResponse.billingAddress[0];
                _this.serviceAddressData = woResponse.serviceAddress[0];
                //console.log("serviceAddressData" + JSON.stringify(this.serviceAddressData.doNotServe))
                _this.techData = woResponse.techRespond[0];
                console.log("techData" + JSON.stringify(_this.techData));
                _this.creditCardData = woResponse.creditCard[0];
                _this.addEstimate = _this.formBuilder.group({
                    estimateNum: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    dateCreated: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    channelManager: ["None", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    splitRate: ["None", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    primaryTech: [_this.techData.addPrimaryTech, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    secondaryTech: [_this.techData.addSecondaryTech, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerName: [_this.billingAddressData.customerName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerEmailId: [_this.billingAddressData.emailId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerFirstName: [_this.billingAddressData.firstName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerLastName: [_this.billingAddressData.lastName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerPhoneNumber: [_this.billingAddressData.phoneNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerPhoneType: [_this.billingAddressData.phoneType, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerAddress: [_this.billingAddressData.address, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerState: [_this.billingAddressData.state, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerCity: [_this.billingAddressData.city, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerZipCode: [_this.billingAddressData.zipCode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerSendInvoiceBy: [_this.billingAddressData.sendInvoiceBy, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerInvoiceEmail: [_this.billingAddressData.invoiceEmail, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    poNumber: [_this.billingAddressData.poNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerSince: [_this.serviceAddressData.customerSince, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerPaymentMethod: [_this.billingAddressData.paymentMethod, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    crossSt1: [_this.serviceAddressData.crossSt1, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    crossSt2: [_this.serviceAddressData.crossSt2, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    doNotServe: [_this.serviceAddressData.doNotServe, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerSource: [_this.workOrderDescriptionData.source, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    frequency: [_this.workOrderDescriptionData.makeReoccuring, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    leadQuantity: ["None", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerAdminNotes: [_this.serviceAddressData.adminNotes, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    expectedStartDateLbl: [_this.workOrderDescriptionData.startDate + " " + _this.workOrderDescriptionData.startTime, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    expectedEndDate: [_this.workOrderDescriptionData.endDate + " " + _this.workOrderDescriptionData.endTime, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobTitle: [_this.workOrderDescriptionData.workDescription, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobEmail: [_this.serviceAddressData.emailId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobPhoneNumber: [_this.serviceAddressData.phoneNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    // jobPhoneType: ['', Validators.required],
                    jobAddress: [_this.serviceAddressData.address, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobState: [_this.serviceAddressData.state, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobCity: [_this.serviceAddressData.city, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobZipCode: [_this.serviceAddressData.zipCode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    newPromoCode: ['0', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    otherPromoCode: ['0', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    paymentMethods: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    paymentValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    reqDiscount: ['10', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    desiredProfitInEA: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    channelManagerCommission: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    otherCost: ['0', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    estimatedTechComm: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    employeeTaxCompany: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    worksmanCompType: ["NO", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    empTaxCompType: ["NO", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    instructions: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobSiteNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    estimateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    privateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    materialGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    laborGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    requireManagerApproval: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    setReminder: ["None", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                });
                _this.listGroupDetails();
                _this.getLoginStaffDetails();
                _this.getEstimateNumber();
                _this.getPriceBookServiceList();
                _this.customMaterialList();
                _this.customLaborMaterialList();
                _this.viewPriceBookService();
                // this.getInventoryList();
                _this.listPaymentMethods();
                _this.markUp();
                _this.jobRelatedcost();
                _this.overcostRelatedcost();
                _this.getRoles();
                _this.getChannelManagerList();
                _this.getEmployeeRolesDetails();
                _this.cusResponseStatus = true;
            }
            else {
                _this.cusResponseStatus = false;
            }
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    // THIS IS FOR AUTO POPULATING THE DATA FROM WORK ORDER
    //Date Conversion
    AddEstimateComponent.prototype.dateConversion = function (todayTime) {
        var month = todayTime.getMonth() + 1;
        var day = todayTime.getDate();
        var year = todayTime.getFullYear();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;
        return year + "-" + month + "-" + day;
    };
    //Date Conversion
    AddEstimateComponent.prototype.createLaborMaterial = function () {
        var val = Math.floor(100 + Math.random() * 900);
        this.randamCLMvalue = "CLM" + "-" + val;
        return this.formBuilder.group({
            item: '',
            type: '',
            staffName: '',
            quantity: '1',
            units: '',
            description: '',
            listPrice: '',
            priceMarkUp: '',
            subTotal: '0',
        });
    };
    AddEstimateComponent.prototype.createCustomMaterial = function () {
        var val = Math.floor(100 + Math.random() * 900);
        this.randamCMvalue = "CM" + "-" + val;
        return this.formBuilder.group({
            itemCM: '',
            typeCM: '',
            quantityCM: '',
            unitsCM: '',
            descriptionCM: '',
            listPriceCM: '',
            priceMarkUpCM: '',
            subTotalCM: '0',
        });
    };
    // Custom Labor Details
    AddEstimateComponent.prototype.addCustomLaborFieldValue = function () {
        this.items = this.addCustomLaborMaterial.get('customLaborMaterial');
        this.items.push(this.createLaborMaterial());
    };
    Object.defineProperty(AddEstimateComponent.prototype, "customLaborMaterialValues", {
        get: function () {
            return this.addCustomLaborMaterial.get('customLaborMaterial');
        },
        enumerable: true,
        configurable: true
    });
    AddEstimateComponent.prototype.deleteMasterServiceFieldValue = function (index) {
        this.customLaborMaterialValues.removeAt(index);
    };
    // Custom Material Details
    AddEstimateComponent.prototype.addCustomMaterialFieldValue = function () {
        this.items = this.addCustomMaterial.get('customMaterial');
        this.items.push(this.createLaborMaterial());
    };
    Object.defineProperty(AddEstimateComponent.prototype, "customMaterialValues", {
        get: function () {
            var val = Math.floor(100 + Math.random() * 900);
            this.randamCMvalue = "CM" + "-" + val;
            //console.log("randamCMvalue" + this.randamCMvalue)
            return this.addCustomMaterial.get('customMaterial');
        },
        enumerable: true,
        configurable: true
    });
    AddEstimateComponent.prototype.deleteCustomMaterialServiceFieldValue = function (index) {
        this.customMaterialValues.removeAt(index);
    };
    AddEstimateComponent.prototype.viewCustomMaterial = function (data) {
        var _this = this;
        //console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewCustomMaterialService/' + data)
            .subscribe(function (data) {
            var viewCM = data.json();
            //console.log(viewCM)
            if (viewCM.status == 200) {
                _this.viewCustomMaterialData = viewCM.response[0];
                _this.editCustomMaterialCost = _this.formBuilder.group({
                    itemNo: [_this.viewCustomMaterialData.item, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    type: [_this.viewCustomMaterialData.type, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    quantity: [_this.viewCustomMaterialData.quantity, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    units: [_this.viewCustomMaterialData.units, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    description: [_this.viewCustomMaterialData.description, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    listPrice: [_this.viewCustomMaterialData.listPrice, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    priceMarkUp: [_this.viewCustomMaterialData.priceMarkUp, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    subTotal: [_this.viewCustomMaterialData.subTotal, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                });
                //console.log(this.viewCustomMaterialData)
            }
            else {
            }
        });
    };
    AddEstimateComponent.prototype.viewCustomLabor = function (data) {
        var _this = this;
        //console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewCustomLaborService/' + data)
            .subscribe(function (data) {
            var viewCL = data.json();
            //console.log(viewCL)
            if (viewCL.status == 200) {
                _this.viewCustomLaborData = viewCL.response[0];
                _this.editCustomLaborCost = _this.formBuilder.group({
                    itemNo: [_this.viewCustomLaborData.item, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    type: [_this.viewCustomLaborData.type, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    staffName: [_this.viewCustomLaborData.staffName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    quantity: [_this.viewCustomLaborData.quantity, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    units: [_this.viewCustomLaborData.units, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    description: [_this.viewCustomLaborData.description, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    listPrice: [_this.viewCustomLaborData.listPrice, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    priceMarkUp: [_this.viewCustomLaborData.priceMarkUp, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    subTotal: [_this.viewCustomLaborData.subTotal, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                });
                //console.log(this.viewCustomLaborData)
            }
            else {
            }
        });
    };
    AddEstimateComponent.prototype.getQuantityValue = function (quantityValue) {
        //console.log(quantityValue)
        this.quant = 0;
        this.subTotalValue = 0;
        this.quant = quantityValue;
        // this.listPriceLaborMarkUp = this.priceCLM * this.listPriceOfLabor
        // this.listPriceLaborMarkUp = this.laborCostPrice * this.laborListPrice
        this.laborMarkUpValue = this.laborListPrice - this.laborCostPrice;
        this.subTotalValue = this.quant * this.laborCost;
    };
    AddEstimateComponent.prototype.getPriceValue = function (priceValue) {
        //console.log(priceValue)
        this.priceCLM = priceValue;
        this.listPriceLaborMarkUp = 0;
        // this.listPriceLaborMarkUp = this.priceCLM * this.laborListPrice
        //console.log("price value in labor" + this.listPriceLaborMarkUp)
        this.laborMarkUpValue = this.laborListPrice - this.priceCLM;
        this.subTotalValue = 0;
        this.subTotalValue = this.quant * this.laborListPrice;
        //console.log(this.subTotalValue)
    };
    AddEstimateComponent.prototype.getQuantityCMValue = function (quantityCMValue) {
        //console.log(quantityCMValue)
        this.quantCM = quantityCMValue;
        this.subTotalValueCM = this.quantCM * this.listPriceMarkUp;
    };
    AddEstimateComponent.prototype.getPriceCMValue = function (priceValueCM) {
        //console.log(priceValueCM)
        this.priceCM = priceValueCM;
        this.listPriceMarkUp = this.priceCM * this.listPrice;
        //console.log("price cm value" + this.listPriceMarkUp)
        this.materialMarkUp = this.listPriceMarkUp - this.priceCM;
        this.subTotalValueCM = 0;
        this.subTotalValueCM = this.quantCM * this.listPriceMarkUp;
        //console.log(this.subTotalValueCM)
    };
    AddEstimateComponent.prototype.getEDitQuantityCMValue = function (editQty) {
        //console.log(editQty)
        this.editQuantCM = editQty;
        //console.log(this.listPrice)
        this.listPriceMarkUp = this.editpriceCM * this.listPrice;
        //console.log("edit price cm value" + this.listPriceMarkUp)
        this.materialMarkUp = this.listPriceMarkUp - this.editpriceCM;
        this.subTotalValueCM = 0;
        this.subTotalValueCM = this.editQuantCM * this.listPriceMarkUp;
        //console.log(this.subTotalValueCM)
    };
    AddEstimateComponent.prototype.getEditPriceCMValue = function (editpriceValueCM) {
        //console.log(editpriceValueCM)
        this.editpriceCM = editpriceValueCM;
        this.listPriceMarkUp = 0;
        this.listPriceMarkUp = this.editpriceCM * this.listPrice;
        //console.log("edit price cm value" + this.listPriceMarkUp)
        this.materialMarkUp = this.listPriceMarkUp - this.editpriceCM;
        this.subTotalValueCM = 0;
        this.subTotalValueCM = this.editQuantCM * this.listPriceMarkUp;
        //console.log(this.subTotalValueCM)
    };
    AddEstimateComponent.prototype.getEditQuantityCLValue = function (quantityValue) {
        //console.log(quantityValue)
        this.quant = 0;
        this.subTotalValue = 0;
        this.quant = quantityValue;
        // this.listPriceLaborMarkUp = this.priceCLM * this.listPriceOfLabor
        this.listPriceLaborMarkUp = this.laborCostPrice * this.listPriceOfLabor;
        this.laborMarkUpValue = this.listPriceLaborMarkUp - this.laborCostPrice;
        this.subTotalValue = this.quant * this.listPriceLaborMarkUp;
    };
    AddEstimateComponent.prototype.getEditPriceCLValue = function (priceValue) {
        //console.log(priceValue)
        this.priceCLM = priceValue;
        this.listPriceLaborMarkUp = 0;
        this.listPriceLaborMarkUp = this.priceCLM * this.listPriceOfLabor;
        //console.log("price value in labor" + this.listPriceLaborMarkUp)
        this.laborMarkUpValue = this.listPriceLaborMarkUp - this.priceCLM;
        this.subTotalValue = 0;
        this.subTotalValue = this.quant * this.listPriceLaborMarkUp;
        //console.log(this.subTotalValue)
    };
    AddEstimateComponent.prototype.getPriceViewCM = function (cmPrice) {
        //console.log(cmPrice)
        this.customMaterialPriceValue = 0;
        cmPrice.subTotal = cmPrice.quantity * this.listPrice * cmPrice.listPrice;
        //console.log("price cm value" + cmPrice.priceMarkUp)
        for (var i = 0; i < this.viewCMDetails.length; i++) {
            this.customMaterialPriceValue = this.customMaterialPriceValue + parseInt(this.viewCMDetails[i].subTotal);
        }
    };
    AddEstimateComponent.prototype.submitCustomLaborMaterial = function () {
        var _this = this;
        for (var i = 0; i < this.addCustomLaborMaterial.get('customLaborMaterial').value.length; i++) {
            console.log(this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName);
            var Obj = {
                "item": this.randamCLMvalue,
                "type": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type,
                "staffName": this.staffFirstName,
                "staffId": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName,
                "quantity": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity,
                "units": this.laborHours,
                "description": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].description,
                "listPrice": this.laborCostPrice,
                "priceMarkUp": this.laborCost,
                "markUpPriceValue": 0,
                "subTotal": this.subTotalValue,
            };
            console.log("obj" + JSON.stringify(Obj));
            this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addCustomLaborMaterialService/', Obj)
                .subscribe(function (data) {
                var addCustomLaborMaterilData = data.json();
                _this.customLaborMaterialValues.reset();
                _this.customLaborMaterialList();
                _this.AddCustomLaborMaterialRecords = false;
            }, function (error) {
                //console.log('The execution is failed ' + JSON.stringify(error))
            });
        }
    };
    AddEstimateComponent.prototype.submitCustomMaterial = function () {
        var _this = this;
        for (var i = 0; i < this.addCustomMaterial.get('customMaterial').value.length; i++) {
            console.log(this.subTotalValueCM);
            var Obj = {
                "item": this.randamCMvalue,
                "type": '' + this.addCustomMaterial.get('customMaterial').value[i].typeCM,
                "quantity": '' + this.addCustomMaterial.get('customMaterial').value[i].quantityCM,
                "units": '' + this.addCustomMaterial.get('customMaterial').value[i].unitsCM,
                "description": '' + this.addCustomMaterial.get('customMaterial').value[i].descriptionCM,
                "listPrice": '' + this.addCustomMaterial.get('customMaterial').value[i].listPriceCM,
                "priceMarkUp": this.listPriceMarkUp,
                "markupMaterialValue": this.materialMarkUp,
                "subTotal": this.subTotalValueCM,
            };
            console.log("obj" + JSON.stringify(Obj));
            this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addCustomMaterialService/', Obj)
                .subscribe(function (data) {
                var addCustomMaterilData = data.json();
                _this.customMaterialValues.reset();
                _this.customMaterialList();
                _this.AddCustomLaborMaterialRecords = false;
            }, function (error) {
                //console.log('The execution is failed ' + JSON.stringify(error))
            });
        }
    };
    AddEstimateComponent.prototype.customLaborMaterialList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/estimateCLMSelectionList', options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.viewCLMDetails = response.response;
                _this.customLaborListValue = 0;
                _this.customLaborMarkUpListValue = 0;
                _this.customFieldTechValue = 0;
                _this.customLaborRateValue = 0;
                _this.customLaborFieldTechHours = 0;
                for (var i = 0; i < _this.viewCLMDetails.length; i++) {
                    if (_this.viewCLMDetails[i].staffId == _this.loginData.loginCode) {
                        _this.customFieldTechValue = _this.customFieldTechValue + parseInt(_this.viewCLMDetails[i].subTotal);
                    }
                    else {
                        _this.customLaborRateValue = _this.customLaborRateValue + parseInt(_this.viewCLMDetails[i].subTotal);
                    }
                    if (_this.viewCLMDetails[i].type == "Field Service Tech") {
                        _this.customLaborFieldTechHours = _this.customLaborFieldTechHours + parseFloat(_this.viewCLMDetails[i].quantity);
                    }
                    _this.customLaborListValue = _this.customLaborListValue + parseInt(_this.viewCLMDetails[i].subTotal);
                    _this.customLaborMarkUpListValue = _this.customLaborMarkUpListValue + parseInt(_this.viewCLMDetails[i].markUpValue);
                }
                _this.totalEstPriceBeforeDisc = _this.priceBookListValue + _this.totalMaterialCostWithTax + _this.customLaborListValue;
                _this.getPromoCode();
                _this.getOtherPromoCode();
                _this.priceBookCLMServiceResponse = true;
                _this.staffData = [];
            }
            else {
                _this.priceBookCLMServiceResponse = false;
            }
            (function (error) {
            });
        });
    };
    AddEstimateComponent.prototype.customMaterialList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/estimateCMSelectionList', options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.viewCMDetails = response.response;
                _this.customMaterialListValue = 0;
                _this.customMaterialPartValue = 0;
                _this.customMaterialMarkUpListValue = 0;
                for (var i = 0; i < _this.viewCMDetails.length; i++) {
                    if (_this.viewCMDetails[i].type == "PART") {
                        _this.customMaterialPartValue = _this.customMaterialPartValue + parseInt(_this.viewCMDetails[i].subTotal);
                        console.log("customMaterialPartValue" + _this.customMaterialPartValue);
                    }
                    _this.customMaterialListValue = _this.customMaterialListValue + parseInt(_this.viewCMDetails[i].subTotal);
                    _this.customMaterialMarkUpListValue = _this.customMaterialMarkUpListValue + parseInt(_this.viewCMDetails[i].markUpValue);
                }
                _this.taxPercentCal = (_this.customMaterialPartValue) * (_this.taxValue / 100);
                _this.totalMaterialCostWithTax = _this.customMaterialListValue + _this.taxPercentCal;
                _this.totalEstPriceBeforeDisc = _this.priceBookListValue + _this.totalMaterialCostWithTax + _this.customLaborListValue;
                // this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborRateValue
                _this.getPromoCode();
                _this.getOtherPromoCode();
                _this.priceBookCMServiceResponse = true;
            }
            else {
                _this.priceBookCMServiceResponse = false;
            }
            (function (error) {
            });
        });
    };
    AddEstimateComponent.prototype.updateCustomMaterialService = function () {
        var _this = this;
        var obj = {
            "id": this.viewCustomMaterialData.id,
            "item": this.editCustomMaterialCost.value.itemNo,
            "type": this.editCustomMaterialCost.value.type,
            "description": this.editCustomMaterialCost.value.description,
            "quantity": this.editCustomMaterialCost.value.quantity,
            "units": this.editCustomMaterialCost.value.units,
            "listPrice": this.editCustomMaterialCost.value.listPrice,
            "priceMarkUp": this.listPriceMarkUp,
            "markupMaterialValue": this.materialMarkUp,
            "subTotal": this.subTotalValueCM,
        };
        //console.log("Edit OBJ" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateCustomMaterialTemp', obj)
            .subscribe(function (data) {
            var woData = data.json();
            _this.customMaterialList();
            //console.log("woData" + JSON.stringify(woData))
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.updateCustomLaborService = function () {
        var _this = this;
        var obj = {
            "id": this.viewCustomLaborData.id,
            "item": this.editCustomLaborCost.value.itemNo,
            "type": this.editCustomLaborCost.value.type,
            "description": this.editCustomLaborCost.value.description,
            "quantity": this.editCustomLaborCost.value.quantity,
            "units": this.laborUnits,
            "listPrice": this.laborCostPrice,
            "priceMarkUp": this.listPriceLaborMarkUp,
            "markUpPriceValue": this.laborMarkUpValue,
            "subTotal": this.subTotalValue,
        };
        //console.log("Edit OBJ" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateCustomLaborTemp', obj)
            .subscribe(function (data) {
            var woData = data.json();
            _this.customLaborMaterialList();
            //console.log("woData" + JSON.stringify(woData))
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.deleteCustomMaterial = function (data) {
        var _this = this;
        //console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteCustomMaterialService/' + data.id)
            .subscribe(function (data) {
            var delCM = data.json();
            //console.log(delCM)
            if (delCM.status == 200) {
                // this.listPaymentMethods()
                _this.customMaterialList();
                _this.toastr.success("One Custom Material has deleted Successfully");
                // return false;
            }
            else {
                _this.toastr.success("Custom Material Deletion Failed");
            }
        });
    };
    AddEstimateComponent.prototype.deleteCustomLabor = function (data) {
        var _this = this;
        //console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteCustomLaborService/' + data.id)
            .subscribe(function (data) {
            var delCM = data.json();
            //console.log(delCM)
            if (delCM.status == 200) {
                _this.customLaborMaterialList();
                _this.toastr.success("One Custom Labor has deleted Successfully");
                // return false;
            }
            else {
                _this.toastr.success("Custom Labor Deletion Failed");
            }
        });
    };
    AddEstimateComponent.prototype.deletePriceBookItems = function (data) {
        var _this = this;
        //console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deletePricebookService/' + data.id)
            .subscribe(function (data) {
            var delPBI = data.json();
            //console.log(delCM)
            if (delPBI.status == 200) {
                _this.viewPriceBookService();
                _this.toastr.success("One Price Book Item has deleted Successfully");
                // return false;
            }
            else {
                _this.toastr.success("Price Book Item Deletion Failed");
            }
        });
    };
    AddEstimateComponent.prototype.getChannelManagerList = function () {
        var _this = this;
        //console.log(this.billingAddressData.proId)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffChannelManager/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.channelManagerList = response.response;
                console.log("in staff channel manager" + JSON.stringify(_this.channelManagerList));
                _this.channelManagerResponse = true;
            }
            else {
                _this.channelManagerResponse = false;
            }
            (function (error) {
                //console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimateComponent.prototype.getStaffName = function () {
        var _this = this;
        //console.log("getName" + this.addEstimate.value.channelManager)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameDetails/' + this.addEstimate.value.channelManager, options)
            .subscribe(function (data) {
            var response = data.json();
            //console.log("in staff channel manager")
            if (response.status == 200) {
                _this.channelManagerDetailsList = response.response[0];
                _this.netProfitValue = false;
                _this.grossSaleValue = true;
                _this.channelManagerId = _this.channelManagerDetailsList.employeeId;
                _this.empName = _this.channelManagerDetailsList.firstName + "-" + _this.channelManagerDetailsList.lastName;
                _this.empCommission = _this.channelManagerDetailsList.compValue;
                _this.empCommissionType = _this.channelManagerDetailsList.compType;
                _this.getChannelManagerComm();
                _this.channelManagerDetailsResponse = true;
            }
            else {
                _this.channelManagerDetailsResponse = false;
            }
            (function (error) {
                //console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimateComponent.prototype.getLoginStaffDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameDetails/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            console.log("In Login Staff" + JSON.stringify(response));
            if (response.status == 200) {
                _this.loginStaffDetailsList = response.response[0];
                _this.loginStaffCommission = _this.loginStaffDetailsList.compValue;
                _this.loginStaffCommissionType = _this.loginStaffDetailsList.compType;
                _this.loginStaffGroup = _this.loginStaffDetailsList.empgroup;
                _this.loginStaffManagerId = _this.loginStaffDetailsList.managerId;
                if (_this.loginStaffDetailsList.hourlyRate == "true") {
                    _this.commissionType = "HOURLY";
                    _this.workingType = _this.loginStaffDetailsList.hourlyRateValue;
                    console.log("working type" + _this.workingType);
                }
                else if (_this.loginStaffDetailsList.weeklyRate == "true") {
                    _this.commissionType = "WEEKLY";
                    _this.weeklyType = _this.loginStaffDetailsList.weeklyRateValue;
                    _this.workingType = _this.weeklyType / 40;
                }
                _this.loginStaffDetailsResponse = true;
                _this.listGroupDetails();
            }
            else {
                _this.loginStaffDetailsResponse = false;
            }
            (function (error) {
                //console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimateComponent.prototype.getEmployeeRolesDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getEmployeeRole/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.employeeRole = response.response;
                //console.log("employeeRole" + JSON.stringify(this.employeeRole))
                return false;
            }
            else {
                _this.toastr.warning("No Records Found");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    AddEstimateComponent.prototype.getListOfStates = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getListOfStates', options)
            .subscribe(function (data) {
            var response = data.json();
            _this.statesData = response.response;
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    AddEstimateComponent.prototype.getPriceBookServiceList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPriceBookService' + '/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.priceBookListDetails = response.response;
                console.log("pricebook details" + JSON.stringify(_this.priceBookListDetails));
                _this.viewItemData = JSON.parse(localStorage.getItem('itemValues'));
                //console.log("itemValues" + JSON.stringify(this.viewItemData))
                _this.viewPriceBookService();
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.priceBookServiceResponse = false;
            }
            (function (error) {
                //console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimateComponent.prototype.selectPricebookList = function (data) {
        var _this = this;
        //console.log("checkbox data" + JSON.stringify(data))
        if (data.selectedService === true) {
            this.selectedPriceBook.push(data);
            for (var i = 0; i < this.selectedPriceBook.length; i++) {
                this.selectedPriceBook[i].sno = i + 1;
                //console.log("checkbox" + JSON.stringify(this.selectedPriceBook[i]))
            }
        }
        else {
            this.selectedPriceBook = this.selectedPriceBook.filter(function (value) { return value.selectedService == true; });
            //console.log("selected Inventory in else" + JSON.stringify(this.selectedPriceBook))
            this.selectedPriceBook.forEach(function (e) {
                _this.pricebookTemp.push(e);
            });
            //console.log("venkat array" + JSON.stringify(this.inventoryTemp))
        }
        this.showTable = false;
    };
    AddEstimateComponent.prototype.saveselectedPriceBook = function () {
        this.showTable = true;
        this.listPriceBook = 0;
        this.listPriceBookStandard = 0;
        this.listPriceBookValue = 0;
        this.listPriceBookMember = 0;
        //console.log("selectedPriceBook" + JSON.stringify(this.selectedPriceBook))
        for (var i = 0; i < this.selectedPriceBook.length; i++) {
            this.listPriceBook = this.listPriceBook + parseInt(this.selectedPriceBook[i].totalCost);
            this.listPriceBookStandard = this.listPriceBookStandard + parseInt(this.selectedPriceBook[i].standard);
            this.listPriceBookValue = this.listPriceBookValue + parseInt(this.selectedPriceBook[i].value);
            this.listPriceBookMember = this.listPriceBookMember + parseInt(this.selectedPriceBook[i].member);
        }
    };
    AddEstimateComponent.prototype.getInventoryList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listOfInventory' + '/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.inventoryListDetails = response.response;
                //console.log("inventoryList" + JSON.stringify(this.inventoryListDetails))
                for (var i = 0; i < _this.inventoryListDetails.length; i++) {
                    _this.inventoryListDetails[i].subTotal = _this.inventoryListDetails[i].listPrice * _this.inventoryListDetails[i].quantity;
                }
                _this.inventoryListResponse = true;
            }
            else {
                _this.inventoryListResponse = false;
            }
            (function (error) {
            });
        });
    };
    AddEstimateComponent.prototype.selectServiceFromList = function (data) {
        var _this = this;
        //console.log("checkbox data" + JSON.stringify(data))
        if (data.selectedService === true) {
            this.selectedInventory.push(data);
            for (var i = 0; i < this.selectedInventory.length; i++) {
                this.selectedInventory[i].sno = i + 1;
                //  this.grandTotal += this.selectedInventory[i].subTotal
                //console.log("checkbox" + JSON.stringify(this.selectedInventory[i]))
            }
        }
        else {
            this.selectedInventory = this.selectedInventory.filter(function (value) { return value.selectedService == true; });
            //console.log("selected Inventory in else" + JSON.stringify(this.selectedInventory))
            this.selectedInventory.forEach(function (e) {
                _this.inventoryTemp.push(e);
            });
            //console.log("venkat array" + JSON.stringify(this.inventoryTemp))
        }
    };
    AddEstimateComponent.prototype.saveSelectedInventory = function () {
        this.listPriceInventory = 0;
        //console.log("selectedInventory" + JSON.stringify(this.selectedInventory))
        //console.log("inventory Array Data" + JSON.stringify(this.inventoryArrayData))
        for (var i = 0; i < this.selectedInventory.length; i++) {
            this.listPriceInventory = this.listPriceInventory + parseInt(this.selectedInventory[i].subTotal);
        }
    };
    AddEstimateComponent.prototype.cancelSelectedInventory = function () {
        this.router.navigate(['/staff/createEstimateNew']);
    };
    AddEstimateComponent.prototype.getQuantity = function (qty) {
        //console.log(qty)
        this.listPriceInventory = 0;
        qty.subTotal = qty.quantity * qty.listPrice;
        for (var i = 0; i < this.selectedInventory.length; i++) {
            this.listPriceInventory = this.listPriceInventory + parseInt(this.selectedInventory[i].subTotal);
            //console.log("listPriceInventory" + this.listPriceInventory)
        }
    };
    AddEstimateComponent.prototype.viewItem = function (serviceId) {
        localStorage.setItem("InventoryData", JSON.stringify(this.selectedInventory));
        this.router.navigate(['/staff/viewPriceBookItem', serviceId, 'ADD', 'X']);
    };
    AddEstimateComponent.prototype.getPriceBookQuantity = function (quantityData) {
        //console.log(quantityData)
        this.priceBookListValue = 0;
        this.priceBookHoursValue = 0;
        quantityData.subTotal = quantityData.quty * quantityData.listPrice;
        for (var i = 0; i < this.viewItemDetails.length; i++) {
            console.log(this.viewItemDetails[i].time);
            this.priceBookHoursValue = this.priceBookHoursValue + parseFloat(this.viewItemDetails[i].time);
            console.log("priceBookHoursValue" + this.priceBookHoursValue);
            this.priceBookListValue = this.priceBookListValue + parseInt(this.viewItemDetails[i].subTotal);
            this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue;
            // this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborRateValue
            this.getPromoCode();
            this.getOtherPromoCode();
            // this.pricebookTax = 
            // this.pricebookTax = (this.priceBookListValue) * (this.taxValue / 100)
            //     this.totalPricebookCostWithTax = this.priceBookListValue + this.pricebookTax
        }
    };
    AddEstimateComponent.prototype.viewPriceBookService = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/estimatePriceBookSelectionList', options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                //console.log("in 200")
                _this.priceBookListValue = 0;
                _this.priceBookMaterialValue = 0;
                _this.priceBookLaborValue = 0;
                _this.priceBookHoursValue = 0;
                _this.viewItemDetails = response.response;
                console.log("viewItemDetails" + JSON.stringify(_this.viewItemDetails));
                for (var i = 0; i < _this.viewItemDetails.length; i++) {
                    console.log(_this.viewItemDetails[i].time);
                    _this.priceBookHoursValue = _this.priceBookHoursValue + parseFloat(_this.viewItemDetails[i].time);
                    console.log(_this.priceBookHoursValue);
                    _this.priceBookListValue = _this.priceBookListValue + parseInt(_this.viewItemDetails[i].subTotal);
                    _this.priceBookMaterialValue = _this.priceBookMaterialValue + parseInt(_this.viewItemDetails[i].materialCost);
                    _this.priceBookLaborValue = _this.priceBookLaborValue + parseInt(_this.viewItemDetails[i].laborCost);
                }
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.priceBookServiceResponse = false;
            }
            (function (error) {
                //console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimateComponent.prototype.getPromoCode = function () {
        this.promoValue = this.addEstimate.value.newPromoCode;
        this.totalDiscount = parseInt(this.promoValue) + parseInt(this.otherPromoValue);
        this.paymentModeValue = 0;
        this.afterDiscount = Math.round((this.totalEstPriceBeforeDisc - (this.totalDiscount)) * 100) / 100;
        this.totalValueAfterDiscounts = Math.round((this.afterDiscount + this.paymentModeValue) * 100) / 100;
        this.getReqDiscount();
        this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost);
        // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborRateValue + parseInt(this.addEstimate.value.otherCost)
        console.log("directJobCostValue" + this.directJobCostValue);
        this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
        this.estimatedGrossProfitValue = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue) * 100) / 100;
        this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
        this.getEstimateCommissionValue();
    };
    AddEstimateComponent.prototype.getOtherPromoCode = function () {
        this.otherPromoValue = this.addEstimate.value.otherPromoCode;
        this.totalDiscount = parseInt(this.promoValue) + parseInt(this.otherPromoValue);
        this.paymentModeValue = 0;
        this.afterDiscount = Math.round((this.totalEstPriceBeforeDisc - (this.totalDiscount)) * 100) / 100;
        this.totalValueAfterDiscounts = Math.round((this.afterDiscount + this.paymentModeValue) * 100) / 100;
        this.getReqDiscount();
        this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost);
        // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborRateValue + parseInt(this.addEstimate.value.otherCost)
        this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
        this.estimatedGrossProfitValue = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue) * 100) / 100;
        this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
        this.getEstimateCommissionValue();
    };
    AddEstimateComponent.prototype.getPaymentValue = function () {
        this.paymentMethodValue = this.addEstimate.value.paymentValue / 100;
    };
    AddEstimateComponent.prototype.getReqDiscount = function () {
        this.reqDisc = this.addEstimate.value.reqDiscount / 100;
        this.finalValue = Math.round(this.totalValueAfterDiscounts * this.reqDisc * 100) / 100;
        if (this.finalValue > 1000) {
            this.finalValue = 1000.00;
        }
        else {
            this.finalValue = this.finalValue;
        }
    };
    AddEstimateComponent.prototype.getPaymentMode = function () {
        //console.log("Payment Method Values" + this.addEstimate.value.paymentMethods)
        if (this.addEstimate.value.paymentMethods == "Credit Card") {
            //console.log("in ccpf")
            this.creditCardPF = this.ccpf;
            this.creditCardPercentage = this.creditCardPF / 100;
            this.paymentModeValue = Math.round((this.afterDiscount) * (this.creditCardPercentage) * 100) / 100;
            //console.log(this.paymentModeValue)
            this.totalValueAfterDiscounts = Math.round((this.afterDiscount + this.paymentModeValue) * 100) / 100;
            //console.log(this.totalValueAfterDiscounts)
            this.getReqDiscount();
            this.getOtherCost();
        }
        else {
            this.creditCardPF = 0;
            this.creditCardPercentage = this.creditCardPF / 100;
            this.paymentModeValue = Math.round((this.afterDiscount) * (this.creditCardPercentage) * 100) / 100;
            //console.log(this.paymentModeValue)
            this.totalValueAfterDiscounts = Math.round((this.afterDiscount + this.paymentModeValue) * 100) / 100;
            //console.log(this.totalValueAfterDiscounts)
            this.getReqDiscount();
            this.getOtherCost();
        }
    };
    // LIST Equip Use jobrelated
    AddEstimateComponent.prototype.jobRelatedcost = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPBJobrelated/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var equipAgreement = data.json();
            if (equipAgreement.status == 200) {
                //console.log("agreementStatus Details" + JSON.stringify(equipAgreement))
                _this.jobrelated = equipAgreement.response;
                //console.log("list" + JSON.stringify(this.jobrelated))
                for (var i = 0; i < _this.jobrelated.length; i++) {
                    if (_this.jobrelated[i].settingDesc == "Credit Card Processing Fee") {
                        _this.ccpf = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Truck Operating Cost") {
                        _this.toc = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Workmans Comp Insurance") {
                        _this.workmanCompIns = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Employee Tax Company") {
                        _this.empTaxComp = _this.jobrelated[i].settingValue;
                    }
                }
                // return false;
                _this.job = true;
                //console.log("job" + this.job)
            }
            else {
                _this.job = false;
            }
        }, function (error) {
            //  this.toastr.warning('Unable to connect to server');
        });
    };
    AddEstimateComponent.prototype.listGroupDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffGroups/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                console.log("group Details" + JSON.stringify(response));
                _this.groupList = response.response;
                for (var i = 0; i < _this.groupList.length; i++) {
                    //console.log(this.serviceAddressData.state)
                    //console.log(this.groupList[i].groupName)
                    //console.log("loginStaffGroup" + this.loginStaffGroup)
                    if (_this.groupList[i].groupName == _this.loginStaffGroup) {
                        console.log("in group name Details" + _this.groupList[i].salesTax);
                        _this.taxValue = _this.groupList[i].salesTax;
                    }
                }
                _this.customMaterialList();
                //console.log("list" + JSON.stringify(this.groupList))
                // return false;
                _this.groups = true;
            }
            else {
                _this.groups = false;
            }
        });
    };
    AddEstimateComponent.prototype.listPaymentMethods = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPaymentMethods', options)
            .subscribe(function (data) {
            var listPay = data.json();
            if (listPay.status == 200) {
                //console.log("group Details" + JSON.stringify(listPay))
                _this.payMethods = listPay.response;
                //console.log("list" + JSON.stringify(this.payMethods))
                // return false;
                _this.payment = true;
            }
            else {
                _this.payment = false;
                _this.toastr.warning('Unable to connect to server');
            }
        });
    };
    AddEstimateComponent.prototype.markUp = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPBMarkup/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var equipAgreement = data.json();
            if (equipAgreement.status == 200) {
                //console.log("agreementStatus Details" + JSON.stringify(equipAgreement))
                _this.listmarkup = equipAgreement.response;
                //console.log("list id" + JSON.stringify(this.listmarkup))
                for (var i = 0; i < _this.listmarkup.length; i++) {
                    if (_this.listmarkup[i].category == "Material") {
                        _this.markUpValue = _this.listmarkup[i].markUp;
                        _this.listPrice = 1 + _this.markUpValue / 100;
                    }
                    else if (_this.listmarkup[i].category == "Labor") {
                        _this.markUpLaborValue = _this.listmarkup[i].markUp;
                        //console.log("mark up value" + this.markUpLaborValue)
                        _this.listPriceOfLabor = 1 + _this.markUpLaborValue / 100;
                        //console.log(this.listPriceOfLabor)
                    }
                }
                //return false;
                _this.mark = true;
            }
            else {
                _this.mark = false;
            }
        }, function (error) {
            //  this.toastr.warning('Unable to connect to server');
        });
    };
    AddEstimateComponent.prototype.getRoles = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffRolesData', options)
            .subscribe(function (data) {
            var roles = data.json();
            if (roles.status == 200) {
                _this.roleData = roles.response;
                //console.log("role data" + JSON.stringify(this.roleData))
                _this.dataRoles = true;
                //console.log("service category Data" + JSON.stringify(this.roleData))
            }
            else {
                _this.dataRoles = false;
            }
        });
    };
    AddEstimateComponent.prototype.changeRole = function (roleName) {
        var _this = this;
        //console.log(roleName)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameUsingRoles/' + roleName, options).subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.staffData = response.response;
                console.log("staff Data" + JSON.stringify(_this.staffData));
            }
            else {
                _this.staffData = [];
                _this.toastr.warning("No Staff For the selected Role");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    AddEstimateComponent.prototype.getDetails = function (employeeId) {
        var _this = this;
        console.log(employeeId);
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffDetailsUsingId/' + employeeId, options).subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.staffNameData = response.response[0];
                console.log("staffName Data" + JSON.stringify(_this.staffNameData));
                _this.laborHours = "Hours",
                    _this.staffFirstName = _this.staffNameData.firstName + "-" + _this.staffNameData.lastName;
                _this.laborCost = _this.staffNameData.billingRateperHr;
                //  this.staffQuantity = "1"
                _this.getQuantityValue(_this.staffQuantity);
                _this.subTotalValue = _this.staffQuantity * _this.laborCost;
            }
            else {
                _this.toastr.warning("No Staff For the selected Role");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    AddEstimateComponent.prototype.overcostRelatedcost = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPBOvercost/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var equipAgreement = data.json();
            if (equipAgreement.status == 200) {
                //console.log("over head cost Details" + JSON.stringify(equipAgreement))
                _this.overcost = equipAgreement.response;
                //console.log("overcost" + JSON.stringify(this.overcost))
                for (var i = 0; i < _this.overcost.length; i++) {
                    if (_this.overcost[i].overHeadCostName == "Estimated") {
                        _this.overHeadCostValue = _this.overcost[i].estimatedOverHeadCostFactor;
                    }
                }
                //console.log("list" + JSON.stringify(this.overcost))
                _this.over = true;
                // return false;
            }
            else {
                _this.over = false;
            }
        }, function (error) {
            //  this.toastr.warning('Unable to connect to server');
        });
    };
    // ESTIMATE ANALYSIER
    AddEstimateComponent.prototype.getDesiredProfit = function () {
        this.desiredValue = this.addEstimate.value.desiredProfitInEA;
        this.desiredProfitValue = Math.round(this.totalValueAfterDiscounts * this.desiredValue / 100 * 100) / 100;
        // this.getChannelManagerComm()
    };
    AddEstimateComponent.prototype.getChannelManagerComm = function () {
        // this.channelManagerCommValue = Math.round(this.totalValueAfterDiscounts * this.empCommission / 100 * 100) / 100
        if (this.empCommissionType == "Net Profit") {
            this.netProfitValue = true;
            this.grossSaleValue = false;
            this.channelManagerCommValue = 0;
            this.customTotal = this.customMaterialListValue + this.customLaborListValue;
            this.oCost = this.addEstimate.value.otherCost;
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost);
            this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
            this.estimatedGrossProfitValue = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue) * 100) / 100;
            this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
            this.sumOfPriceBookCustomLaborHours = this.customLaborFieldTechHours + this.priceBookHoursValue;
            this.totalHoursWithWorkingType = this.workingType * this.sumOfPriceBookCustomLaborHours;
            this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
            if (this.addEstimate.value.worksmanCompType == "YES") {
                this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.estimatedMarkUpProfit) * 100) / 100;
                if (this.netProfitLabor < 0) {
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.red = true;
                }
                else {
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.redPer = true;
                }
                else {
                    this.redPer = false;
                }
            }
            else if (this.addEstimate.value.worksmanCompType == "NO") {
                this.workManEstComm = 0;
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.estimatedMarkUpProfit) * 100) / 100;
                if (this.netProfitLabor < 0) {
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.red = true;
                }
                else {
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.redPer = true;
                }
                else {
                    this.redPer = false;
                }
            }
            if (this.addEstimate.value.empTaxCompType == "YES") {
                console.log("estimated Tech Comm Cost" + this.empTaxComp);
                // this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
                console.log(this.employeeTaxComm);
                // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                console.log(this.employeeCommTaxInc);
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.estimatedMarkUpProfit) * 100) / 100;
                console.log("netProfitLabor" + this.netProfitLabor);
                if (this.netProfitLabor < 0) {
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.red = true;
                }
                else {
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.redPer = true;
                }
                else {
                    this.redPer = false;
                }
            }
            else if (this.addEstimate.value.empTaxCompType == "NO") {
                console.log("in no type");
                this.employeeTaxComm = 0;
                // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.estimatedMarkUpProfit) * 100) / 100;
                console.log("netProfitLabor" + this.netProfitLabor);
                if (this.netProfitLabor < 0) {
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.red = true;
                }
                else {
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.redPer = true;
                }
                else {
                    this.redPer = false;
                }
                // this.netProfit = Math.round(((this.estimatedMarkUpProfit) + (this.netProfitLabor)) * 100) / 100
                // this.netProfitPercent = Math.round(((this.netProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
            }
        }
        else if (this.empCommissionType == "Gross Sales") {
            this.netProfitValue = false;
            this.grossSaleValue = true;
            this.channelManagerCommValueNetProfit = 0;
            this.channelManagerCommValue = Math.round(this.totalValueAfterDiscounts * this.empCommission / 100 * 100) / 100;
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            this.directJobCostValue = Math.round((this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)) * 100) / 100;
            this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
            this.estimatedGrossProfitValue = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue) * 100) / 100;
            this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
            this.getOtherCost();
            this.getEstimateCommissionValue();
        }
        else if (this.empCommissionType == "Gross Profit") {
            console.log("in Gross Profit" + this.estimatedGrossProfitValue);
            this.netProfitValue = false;
            this.grossSaleValue = true;
            this.channelManagerCommValueNetProfit = 0;
            this.channelManagerCommValue = Math.round(this.estimatedGrossProfitValue * this.empCommission / 100 * 100) / 100;
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            this.directJobCostValue = Math.round((this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)) * 100) / 100;
            this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
            this.estimatedGrossProfitValue = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue) * 100) / 100;
            this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
            this.getOtherCost();
            this.getEstimateCommissionValue();
        }
        // this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100
        // this.directJobCostValue = Math.round((this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborRateValue + parseInt(this.addEstimate.value.otherCost)) * 100) / 100
        // this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100
        // this.estimatedGrossProfitValue = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue) * 100) / 100
        // this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100
        // this.getOtherCost();
        // this.getEstimateCommissionValue()
    };
    // ESTIMATE ANALYSIER
    AddEstimateComponent.prototype.getWorksmanCompValue = function () {
        console.log("worksman" + this.addEstimate.value.worksmanCompType);
        if (this.addEstimate.value.worksmanCompType == "YES") {
            // this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
            this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
            this.geEmployeeTaxCompType();
        }
        else if (this.addEstimate.value.worksmanCompType == "NO") {
            this.workManEstComm = 0;
            this.geEmployeeTaxCompType();
        }
    };
    AddEstimateComponent.prototype.geEmployeeTaxCompType = function () {
        console.log("worksman" + this.addEstimate.value.empTaxCompType);
        if (this.addEstimate.value.empTaxCompType == "YES") {
            this.getEmployeeTaxCompany();
        }
        else if (this.addEstimate.value.empTaxCompType == "NO") {
            console.log("in no type");
            this.employeeTaxComm = 0;
            // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
            this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
            this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
            this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.estimatedMarkUpProfit) * 100) / 100;
            console.log("netProfitLabor" + this.netProfitLabor);
            if (this.netProfitLabor < 0) {
                this.netProfitMinusCheck = true;
            }
            else {
                this.netProfitMinusCheck = false;
            }
            if (this.loginStaffCommissionType == "Net Profit") {
                this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.redEstTechComm = true;
                }
                else {
                    this.redEstTechComm = false;
                }
            }
            else if (this.loginStaffCommissionType == "Gross Sales") {
                this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.redEstTechComm = true;
                }
                else {
                    this.redEstTechComm = false;
                }
            }
            else if (this.loginStaffCommissionType == "Gross Profit") {
                this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.redEstTechComm = true;
                }
                else {
                    this.redEstTechComm = false;
                }
            }
            this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
            console.log("totalEstTechPay" + this.totalEstTechPay);
            this.estNetProfit = Math.round((this.netProfitLabor - this.totalEstTechPay) * 100) / 100;
            if (this.estNetProfit < 0) {
                console.log("checking minus change to red color");
                this.red = true;
            }
            else {
                this.red = false;
                console.log("no minus change to green color");
            }
            this.estNetProfitPercent = Math.round(((this.estNetProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
            if (this.estNetProfitPercent < 0) {
                console.log("checking minus change to red color");
                this.redPer = true;
            }
            else {
                this.redPer = false;
                console.log("no minus change to green color");
            }
            // this.netProfit = Math.round(((this.estimatedMarkUpProfit) + (this.netProfitLabor)) * 100) / 100
            // this.netProfitPercent = Math.round(((this.netProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
        }
    };
    AddEstimateComponent.prototype.getOtherCost = function () {
        // this.customTotal = this.customMaterialListValue + this.customLaborListValue
        this.customTotal = this.customMaterialListValue + this.customLaborListValue;
        this.oCost = this.addEstimate.value.otherCost;
        this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
        // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
        this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost);
        this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
        this.estimatedGrossProfitValue = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue) * 100) / 100;
        this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
        this.getEstimateCommissionValue();
    };
    AddEstimateComponent.prototype.getEstimateCommissionValue = function () {
        this.sumOfPriceBookCustomLaborHours = this.customLaborFieldTechHours + this.priceBookHoursValue;
        this.totalHoursWithWorkingType = this.workingType * this.sumOfPriceBookCustomLaborHours;
        // this.techCommissions =  Math.round(this.estimatedGrossProfitValue * (this.loginStaffCommission / 100) * 100) / 100
        // console.log("checking net prroofit .........."+this.techCommissions)
        // this.estimatedTechComm =  this.techCommissions + this.totalHoursWithWorkingType
        // console.log("estimatedTechComm"+this.estimatedTechComm)
        // this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
        this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
        this.getWorksmanCompValue();
    };
    AddEstimateComponent.prototype.getEmployeeTaxCompany = function () {
        console.log("estimated Tech Comm Cost" + this.empTaxComp);
        // this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
        this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
        console.log(this.employeeTaxComm);
        // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
        this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
        console.log(this.employeeCommTaxInc);
        this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
        this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.estimatedMarkUpProfit) * 100) / 100;
        console.log("netProfitLabor" + this.netProfitLabor);
        if (this.netProfitLabor < 0) {
            this.netProfitMinusCheck = true;
        }
        else {
            this.netProfitMinusCheck = false;
        }
        if (this.loginStaffCommissionType == "Net Profit") {
            this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.redEstTechComm = true;
            }
            else {
                this.redEstTechComm = false;
            }
        }
        else if (this.loginStaffCommissionType == "Gross Sales") {
            this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.redEstTechComm = true;
            }
            else {
                this.redEstTechComm = false;
            }
        }
        else if (this.loginStaffCommissionType == "Gross Profit") {
            this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.redEstTechComm = true;
            }
            else {
                this.redEstTechComm = false;
            }
        }
        this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
        console.log("totalEstTechPay" + this.totalEstTechPay);
        this.estNetProfit = Math.round((this.netProfitLabor - this.totalEstTechPay) * 100) / 100;
        if (this.estNetProfit < 0) {
            console.log("checking minus change to red color");
            this.red = true;
        }
        else {
            this.red = false;
            console.log("no minus change to green color");
        }
        this.estNetProfitPercent = Math.round(((this.estNetProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
        if (this.estNetProfitPercent < 0) {
            console.log("checking minus change to red color");
            this.redPer = true;
        }
        else {
            this.redPer = false;
            console.log("no minus change to green color");
        }
        // this.netProfit = Math.round(((this.estimatedMarkUpProfit) + (this.netProfitLabor)) * 100) / 100
        // console.log("in emp tac comp" + this.netProfit)
        // this.netProfitPercent = Math.round(((this.netProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
    };
    // generate  automatic partId
    AddEstimateComponent.prototype.getEstimateNumber = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", "application/json");
        headers.append("Content-Type", "application/json");
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http
            .get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + "/generateEstimateID", options)
            .subscribe(function (data) {
            _this.estNumInfo = data.json();
            if (_this.estNumInfo.status == 200) {
                _this.estimateID = _this.estNumInfo.estId;
                _this.dataEstInfo = true;
            }
            else {
                _this.dataEstInfo = false;
                //console.log("NO Records Found");
            }
        });
    };
    // generate  automatic partId
    AddEstimateComponent.prototype.createEstimate = function () {
        var _this = this;
        var obj = {
            "proId": this.billingAddressData.proId,
            "staffId": this.loginData.loginCode,
            "estimateNum": this.estimateID,
            "workOrderNum": this.workOrderData,
            "dateCreated": this.fullDate,
            "channelManager": this.empName,
            "channelManagerId": this.channelManagerId,
            "customerId": this.billingAddressData.customerId,
            "splitRate": this.addEstimate.value.splitRate,
            "primaryTech": this.addEstimate.value.primaryTech,
            "secondaryTech": this.addEstimate.value.secondaryTech,
            "customerName": this.addEstimate.value.customerName,
            "customerEmailId": this.addEstimate.value.customerEmailId,
            "customerFirstName": this.addEstimate.value.customerFirstName,
            "customerLastName": this.addEstimate.value.customerLastName,
            "customerPhoneNumber": this.addEstimate.value.customerPhoneNumber,
            "customerPhoneType": this.addEstimate.value.customerPhoneType,
            "customerAddress": this.addEstimate.value.customerAddress,
            "customerState": this.addEstimate.value.customerState,
            "customerCity": this.addEstimate.value.customerCity,
            "customerZipCode": this.addEstimate.value.customerZipCode,
            "customerSendInvoiceBy": this.addEstimate.value.customerSendInvoiceBy,
            "customerInvoiceEmail": this.addEstimate.value.customerInvoiceEmail,
            "poNumber": this.addEstimate.value.poNumber,
            "customerSince": this.addEstimate.value.customerSince,
            // "stateName": this.addEstimate.value.stateName,
            "crossSt1": this.addEstimate.value.crossSt1,
            "crossSt2": this.addEstimate.value.crossSt2,
            "customerSource": this.addEstimate.value.customerSource,
            "customerPaymentMethod": this.addEstimate.value.customerPaymentMethod,
            "expectedStartDate": this.addEstimate.value.expectedStartDateLbl,
            "expectedEndDate": this.addEstimate.value.expectedEndDate,
            "frequency": this.addEstimate.value.frequency,
            "leadQuantity": this.addEstimate.value.leadQuantity,
            "creditCardRequired": this.addEstimate.value.creditCardRequired,
            "customerAdminNotes": this.addEstimate.value.customerAdminNotes,
            "jobTitle": this.addEstimate.value.jobTitle,
            "jobEmail": this.addEstimate.value.jobEmail,
            "jobPhoneNumber": this.addEstimate.value.jobPhoneNumber,
            "jobPhoneType": this.addEstimate.value.jobPhoneType,
            "jobAddress": this.addEstimate.value.jobAddress,
            "jobState": this.addEstimate.value.jobState,
            "jobCity": this.addEstimate.value.jobCity,
            "jobZipCode": this.addEstimate.value.jobZipCode,
            // "materialGD": this.addEstimate.value.materialGD,
            // "laborGD": this.addEstimate.value.laborGD,
            "priceBookListValue": this.priceBookListValue,
            "customMaterialListValue": this.customMaterialListValue,
            "taxPercentage": this.taxValue,
            "taxPercentValue": this.taxPercentCal,
            "customLaborListValue": this.customLaborListValue,
            "requireManagerApproval": this.addEstimate.value.requireManagerApproval,
            // "paymentMethods": this.addEstimate.value.paymentMethods,
            // "paymentValue": this.addEstimate.value.paymentValue,
            // "newPromoCode": this.addEstimate.value.newPromoCode,
            // "otherPromoCode": this.addEstimate.value.otherPromoCode,
            // "reqDiscount": this.addEstimate.value.reqDiscount,
            "instructions": this.addEstimate.value.instructions,
            "jobSiteNotice": this.addEstimate.value.jobSiteNotice,
            "estimateNotice": this.addEstimate.value.estimateNotice,
            "privateNotice": this.addEstimate.value.privateNotice,
            "setReminder": this.addEstimate.value.setReminder,
            "estimateStatus": "DRAFT",
            "images": this.imageArray
        };
        //console.log("obj" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateBasicDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                //console.log("price data" + JSON.stringify(ConsData))
                _this.estimatePriceBook();
            }
            else {
                //console.log('Failed to Add Record');
            }
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.customMaterialLaborDescription = function () {
        var obj = {
            "proId": this.billingAddressData.proId,
            "staffId": this.loginData.loginCode,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
            "materialGD": this.addEstimate.value.materialGD,
            "type": "Custom Labor And Material",
            "quantity": "1",
            "units": "EACH",
            // "listPrice": (this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue),
            // "subTotal": (this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue) * 1
            "listPrice": (this.totalMaterialCostWithTax + this.customLaborListValue),
            "subTotal": (this.totalMaterialCostWithTax + this.customLaborListValue) * 1
        };
        //console.log("obj in estimate CustomDetails" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateCustomDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                //console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                //console.log('Failed to Add Record');
            }
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.estimatePriceBook = function () {
        var _this = this;
        var obj = {
            "pricebookArray": this.viewItemDetails,
            "proId": this.billingAddressData.proId,
            "staffId": this.loginData.loginCode,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
        };
        //console.log("obj in estimate pricebook" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimatePriceBookDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.estimatedCustomMaterial();
                _this.deletePriceBookTempTable();
                //console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                //console.log('Failed to Add Record');
            }
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.estimatedCustomMaterial = function () {
        var _this = this;
        var obj = {
            "customMaterialArray": this.viewCMDetails,
            "proId": this.billingAddressData.proId,
            "staffId": this.loginData.loginCode,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
        };
        //console.log("obj in estimate Material" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateCustomMaterialDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.estimatedCustomLabor();
                _this.deleteCustomMaterialTempTable();
                //console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                //console.log('Failed to Add Record');
            }
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.estimatedCustomLabor = function () {
        var _this = this;
        var obj = {
            "customLaborArray": this.viewCLMDetails,
            "proId": this.billingAddressData.proId,
            "staffId": this.loginData.loginCode,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
        };
        //console.log("obj in estimate Material" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateCustomLaborDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.totalEstimateCost();
                _this.updateWorkOrder();
                _this.customMaterialLaborDescription();
                _this.deleteCustomLaborTempTable();
                //console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                //console.log('Failed to Add Record');
            }
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.totalEstimateCost = function () {
        var _this = this;
        var estimateCostObj = {
            "proId": this.billingAddressData.proId,
            "staffId": this.loginData.loginCode,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
            // "totalLaborCost": this.priceBookLaborValue + this.customLaborListValue,
            // "totalMaterialCost": this.priceBookMaterialValue + this.customMaterialListValue,
            "materialTaxValue": this.taxValue,
            "materialCostWithTax": this.totalMaterialCostWithTax,
            // "priceBookCost": this.priceBookListValue,
            "priceBeforeDiscount": this.totalEstPriceBeforeDisc,
            "discountPromoCode": this.addEstimate.value.newPromoCode,
            "discountPromoValue": this.promoValue,
            "otherPromoCode": this.addEstimate.value.otherPromoCode,
            "otherPromoValue": this.otherPromoValue,
            "totalDiscounts": this.totalDiscount,
            "priceAfterDiscount": this.afterDiscount,
            "paymentMethods": this.addEstimate.value.paymentMethods,
            "paymentValue": this.creditCardPF,
            "paymentMethodValue": this.paymentModeValue,
            "totalPrice": this.totalValueAfterDiscounts,
            "reqDepositValue": this.addEstimate.value.reqDiscount,
            "reqDepositCost": this.finalValue
        };
        //console.log("estimateCostObj" + JSON.stringify(estimateCostObj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateCostDetails', estimateCostObj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                //console.log("price data" + JSON.stringify(ConsData))
                _this.router.navigate(['/staff/listEstimate']);
            }
            else {
                //console.log('Failed to Add Record');
            }
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.updateWorkOrder = function () {
        var obj = {
            "workOrderNo": this.workOrderData,
            "estimateNum": this.estimateID,
        };
        //console.log("Edit OBJ" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateWorkOrderEstimateNo', obj)
            .subscribe(function (data) {
            var woData = data.json();
            //console.log("woData" + JSON.stringify(woData))
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    AddEstimateComponent.prototype.totalEstimateAnalyser = function () {
        var estimateCostObj = {
            "proId": this.billingAddressData.proId,
            "staffId": this.loginData.loginCode,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
            "estGrossSale": this.totalValueAfterDiscounts,
            "desiredProfitPercent": this.addEstimate.value.desiredProfitInEA,
            "desiredProfitValue": this.desiredProfitValue,
            "estCMCommPercent": this.empCommission,
            "estCMCommValue": this.channelManagerCommValue,
            "estCMCommValueNetProfit": this.channelManagerCommValueNetProfit,
            "ccProcessingFeePercent": this.creditCardPF,
            "ccProcessingFeeValue": this.paymentModeValue,
            "toc": this.toc,
            "estMaterialCostMarkUp": this.customMaterialListValue,
            // "estLaborCostMarkUp": this.customLaborListValue,
            "estLaborCostMarkUp": this.customLaborRateValue,
            "otherCostValue": this.addEstimate.value.otherCost,
            "otherCost": this.oCost,
            "directJobCostPercent": this.desiredPercentage,
            "directJobCostValue": this.directJobCostValue,
            "estGrossProfit": this.estimatedGrossProfitValue,
            "overHeadCostPercent": this.overHeadCostValue,
            "overHeadCostValue": this.overHeadEstimateCostValue,
            "priceBookHours": this.priceBookHoursValue,
            "fieldTechHours": this.customLaborFieldTechHours,
            "totalHours": this.sumOfPriceBookCustomLaborHours,
            "workingTypeValue": this.workingType,
            "estTechPayType": this.commissionType,
            "estTechPay": this.totalHoursWithWorkingType,
            "worksmanCompType": this.addEstimate.value.worksmanCompType,
            "employeeWorkmanCompValue": this.workmanCompIns,
            "employeeWorkmanCompPercent": this.workManEstComm,
            "empTaxCompType": this.addEstimate.value.empTaxCompType,
            "employeeTaxCompanyValue": this.empTaxComp,
            "employeeTaxCompanyPercent": this.employeeTaxComm,
            "employeeCommissions": this.employeeCommTaxInc,
            "estProfitMaterialMarkup": this.estimatedMarkUpProfit,
            "estProfitLaborMarkup": this.customLaborMarkUpListValue,
            "totalEstProfitMaterialLaborMarkup": this.estimatedMarkUpProfit,
            "estNetProfitBeforeTechCommission": this.netProfitLabor,
            "estNetTechCommissionType": this.loginStaffCommissionType,
            "estNetTechCommission": this.estTechComm,
            "estTotalTechPay": this.totalEstTechPay,
            "estNetProfit": this.estNetProfit,
            "estNetProfitPercentage": this.estNetProfitPercent,
            "estNetProfitWithCM": this.estNetProfitWithCM,
            "estNetProfitPercentageWithCM": this.estNetProfitPercentWithCM,
            "estTechCommPercent": this.loginStaffCommission,
            "estCommissionType": this.loginStaffCommissionType,
            "estTechCommValue": this.estTechComm,
            "actualNetProfitFromLabor": 0,
            "actualNetProfitValue": 0,
            "actualNetProfitPercent": 0,
        };
        console.log("estimateCostObj" + JSON.stringify(estimateCostObj));
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateAnalyserDetails', estimateCostObj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                //console.log("price data" + JSON.stringify(ConsData))
                // this.router.navigate(['/staff/listEstimate'])
            }
            else {
                //console.log('Failed to Add Record');
            }
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    // DELETING TEMP TABLES
    AddEstimateComponent.prototype.deletePriceBookTempTable = function () {
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deletePriceBookTemp')
            .subscribe(function (data) {
            var unit = data;
            if (unit.status == 200) {
            }
            else {
                //console.log('The else')
            }
        });
    };
    AddEstimateComponent.prototype.deleteCustomMaterialTempTable = function () {
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteCustomMaterialTemp')
            .subscribe(function (data) {
            var unit = data;
            if (unit.status == 200) {
            }
            else {
                //console.log('The else')
            }
        });
    };
    AddEstimateComponent.prototype.deleteCustomLaborTempTable = function () {
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteCustomLaborTemp')
            .subscribe(function (data) {
            var unit = data;
            if (unit.status == 200) {
            }
            else {
                //console.log('The else')
            }
        });
    };
    // MULTIPLE IMAGE UPLOAD START
    AddEstimateComponent.prototype.upload = function () {
        var _this = this;
        var formData = new FormData();
        var files = this.filesToUpload;
        //console.log(files);
        for (var i = 0; i < files.length; i++) {
            formData.append("fileImage", files[i]);
        }
        //console.log('form data variable :   ' + this.filesToUpload);
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/multi', formData)
            .map(function (files) { return files.json(); })
            .subscribe(function (files) {
            //console.log(files)
            //console.log(files.length)
            for (var i = 0; i < files.imagePath.length; i++) {
                _this.imageArray.push(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + files.imagePath[i]);
            }
            //console.log('imgarr' + JSON.stringify(this.imageArray))
        });
    };
    AddEstimateComponent.prototype.onSelectFile = function (fileInput) {
        var _this = this;
        if (fileInput.target.files.length == 1) {
            this.filesToUpload.push(fileInput.target.files[0]);
        }
        else {
            for (var i = 0; i < fileInput.target.files.length; i++) {
                this.filesToUpload.push(fileInput.target.files[i]);
            }
        }
        var filesAmount = fileInput.target.files.length;
        for (var i_1 = 0; i_1 < filesAmount; i_1++) {
            var reader = new FileReader();
            reader.onload = function (fileInput) {
                //console.log(fileInput.target.result);
                _this.urls.push(fileInput.target.result);
            };
            reader.readAsDataURL(fileInput.target.files[i_1]);
        }
    };
    AddEstimateComponent.prototype.removeSelectedFile = function (index) {
        this.urls.splice(index, 1);
    };
    // MULTIPLE IMAGE UPLOAD END
    AddEstimateComponent.prototype.sendEstimate = function () {
        var _this = this;
        if (this.loginStaffDetailsList.estimatesReqMgApproval == 'true') {
            //console.log("send to Manager list")
            var obj = {
                "proId": this.billingAddressData.proId,
                "staffId": this.loginData.loginCode,
                "managerId": this.loginStaffManagerId,
                "estimateNum": this.estimateID,
                "workOrderNum": this.workOrderData,
                "dateCreated": this.fullDate,
                "channelManager": this.empName,
                "channelManagerId": this.channelManagerId,
                "splitRate": this.addEstimate.value.splitRate,
                "primaryTech": this.addEstimate.value.primaryTech,
                "secondaryTech": this.addEstimate.value.secondaryTech,
                "customerName": this.addEstimate.value.customerName,
                "customerEmailId": this.addEstimate.value.customerEmailId,
                "customerFirstName": this.addEstimate.value.customerFirstName,
                "customerLastName": this.addEstimate.value.customerLastName,
                "customerPhoneNumber": this.addEstimate.value.customerPhoneNumber,
                "customerPhoneType": this.addEstimate.value.customerPhoneType,
                "customerAddress": this.addEstimate.value.customerAddress,
                "customerState": this.addEstimate.value.customerState,
                "customerCity": this.addEstimate.value.customerCity,
                "customerZipCode": this.addEstimate.value.customerZipCode,
                "customerSendInvoiceBy": this.addEstimate.value.customerSendInvoiceBy,
                "customerInvoiceEmail": this.addEstimate.value.customerInvoiceEmail,
                "poNumber": this.addEstimate.value.poNumber,
                "customerSince": this.addEstimate.value.customerSince,
                "crossSt1": this.addEstimate.value.crossSt1,
                "crossSt2": this.addEstimate.value.crossSt2,
                "customerSource": this.addEstimate.value.customerSource,
                "customerPaymentMethod": this.addEstimate.value.customerPaymentMethod,
                "expectedStartDate": this.addEstimate.value.expectedStartDateLbl,
                "expectedEndDate": this.addEstimate.value.expectedEndDate,
                "frequency": this.addEstimate.value.frequency,
                "leadQuantity": this.addEstimate.value.leadQuantity,
                "creditCardRequired": this.addEstimate.value.creditCardRequired,
                "customerAdminNotes": this.addEstimate.value.customerAdminNotes,
                "jobTitle": this.addEstimate.value.jobTitle,
                "jobEmail": this.addEstimate.value.jobEmail,
                "jobPhoneNumber": this.addEstimate.value.jobPhoneNumber,
                "jobPhoneType": this.addEstimate.value.jobPhoneType,
                "jobAddress": this.addEstimate.value.jobAddress,
                "jobState": this.addEstimate.value.jobState,
                "jobCity": this.addEstimate.value.jobCity,
                "jobZipCode": this.addEstimate.value.jobZipCode,
                "materialGD": this.addEstimate.value.materialGD,
                "laborGD": this.addEstimate.value.laborGD,
                "requireManagerApproval": this.addEstimate.value.requireManagerApproval,
                "instructions": this.addEstimate.value.instructions,
                "jobSiteNotice": this.addEstimate.value.jobSiteNotice,
                "estimateNotice": this.addEstimate.value.estimateNotice,
                "privateNotice": this.addEstimate.value.privateNotice,
                "setReminder": this.addEstimate.value.setReminder,
                "images": this.imageArray,
                "estimateStatus": "SENT TO MANAGER",
                "priceBookListValue": this.priceBookListValue,
                "customMaterialListValue": this.customMaterialListValue,
                "customLaborListValue": this.customLaborListValue,
                "taxPercentage": this.taxValue,
                "taxPercentValue": this.taxPercentCal,
            };
            console.log("obj" + JSON.stringify(obj));
            this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateBasicDetails', obj)
                .subscribe(function (data) {
                var ConsData = data.json();
                if (ConsData.status == 200) {
                    //console.log("price data" + JSON.stringify(ConsData))
                    _this.estimatePriceBook();
                }
                else {
                    //console.log('Failed to Add Record');
                }
            }, function (error) {
                //console.log(error);// Error getting the data
            });
        }
        else {
            //console.log("send to Customer list")
            var obj = {
                "proId": this.billingAddressData.proId,
                "staffId": this.loginData.loginCode,
                "estimateNum": this.estimateID,
                "workOrderNum": this.workOrderData,
                "dateCreated": this.fullDate,
                "channelManager": this.empName,
                "channelManagerId": this.channelManagerId,
                "managerId": this.loginStaffManagerId,
                "customerId": this.billingAddressData.customerId,
                "splitRate": this.addEstimate.value.splitRate,
                "primaryTech": this.addEstimate.value.primaryTech,
                "secondaryTech": this.addEstimate.value.secondaryTech,
                "customerName": this.addEstimate.value.customerName,
                "customerEmailId": this.addEstimate.value.customerEmailId,
                "customerFirstName": this.addEstimate.value.customerFirstName,
                "customerLastName": this.addEstimate.value.customerLastName,
                "customerPhoneNumber": this.addEstimate.value.customerPhoneNumber,
                "customerPhoneType": this.addEstimate.value.customerPhoneType,
                "customerAddress": this.addEstimate.value.customerAddress,
                "customerState": this.addEstimate.value.customerState,
                "customerCity": this.addEstimate.value.customerCity,
                "customerZipCode": this.addEstimate.value.customerZipCode,
                "customerSendInvoiceBy": this.addEstimate.value.customerSendInvoiceBy,
                "customerInvoiceEmail": this.addEstimate.value.customerInvoiceEmail,
                "poNumber": this.addEstimate.value.poNumber,
                "customerSince": this.addEstimate.value.customerSince,
                "crossSt1": this.addEstimate.value.crossSt1,
                "crossSt2": this.addEstimate.value.crossSt2,
                "customerSource": this.addEstimate.value.customerSource,
                "customerPaymentMethod": this.addEstimate.value.customerPaymentMethod,
                "expectedStartDate": this.addEstimate.value.expectedStartDateLbl,
                "expectedEndDate": this.addEstimate.value.expectedEndDate,
                "frequency": this.addEstimate.value.frequency,
                "leadQuantity": this.addEstimate.value.leadQuantity,
                "creditCardRequired": this.addEstimate.value.creditCardRequired,
                "customerAdminNotes": this.addEstimate.value.customerAdminNotes,
                "jobTitle": this.addEstimate.value.jobTitle,
                "jobEmail": this.addEstimate.value.jobEmail,
                "jobPhoneNumber": this.addEstimate.value.jobPhoneNumber,
                "jobPhoneType": this.addEstimate.value.jobPhoneType,
                "jobAddress": this.addEstimate.value.jobAddress,
                "jobState": this.addEstimate.value.jobState,
                "jobCity": this.addEstimate.value.jobCity,
                "jobZipCode": this.addEstimate.value.jobZipCode,
                "materialGD": this.addEstimate.value.materialGD,
                "laborGD": this.addEstimate.value.laborGD,
                "requireManagerApproval": this.addEstimate.value.requireManagerApproval,
                "instructions": this.addEstimate.value.instructions,
                "jobSiteNotice": this.addEstimate.value.jobSiteNotice,
                "estimateNotice": this.addEstimate.value.estimateNotice,
                "privateNotice": this.addEstimate.value.privateNotice,
                "setReminder": this.addEstimate.value.setReminder,
                "images": this.imageArray,
                "estimateStatus": "SENT TO CUSTOMER",
                "priceBookListValue": this.priceBookListValue,
                "customMaterialListValue": this.customMaterialListValue,
                "customLaborListValue": this.customLaborListValue,
                "taxPercentage": this.taxValue,
                "taxPercentValue": this.taxPercentCal,
            };
            //console.log("obj" + JSON.stringify(obj))
            this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateBasicDetails', obj)
                .subscribe(function (data) {
                var ConsData = data.json();
                if (ConsData.status == 200) {
                    //console.log("price data" + JSON.stringify(ConsData))
                    _this.estimatePriceBook();
                }
                else {
                    //console.log('Failed to Add Record');
                }
            }, function (error) {
                //console.log(error);// Error getting the data
            });
        }
    };
    AddEstimateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            providers: [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"]],
            selector: 'app-add-estimate',
            template: __webpack_require__(/*! ./add-estimate.component.html */ "./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.html"),
            styles: [__webpack_require__(/*! ./add-estimate.component.scss */ "./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"],
            _angular_http__WEBPACK_IMPORTED_MODULE_5__["Http"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"]])
    ], AddEstimateComponent);
    return AddEstimateComponent;
}());



/***/ }),

/***/ "./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-commonvanlynkheader></app-commonvanlynkheader>\r\n<app-prozadmin-sidemenu></app-prozadmin-sidemenu>\r\n<!-- Main Container -->\r\n<div class=\"main-container container-fluid\">\r\n  <!-- Page Container -->\r\n  <div class=\"page-container\">\r\n    <!-- Page Content -->\r\n    <div class=\"page-content\">\r\n      <!-- Page Breadcrumb -->\r\n      <div class=\"page-breadcrumbs\">\r\n        <ul class=\"breadcrumb\">\r\n          <li>\r\n            <i class=\"fa fa-home\"></i>\r\n            <a href=\"#\">Home</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Estimates</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">List of Estimates</a>\r\n          </li>\r\n          <li class=\"active\">Add Estimate</li>\r\n        </ul>\r\n      </div>\r\n      <!-- /Page Breadcrumb -->\r\n      <!-- Page Header -->\r\n      <div class=\"page-header position-relative\">\r\n        <div class=\"header-title\">\r\n          <h1>Add Estimate</h1>\r\n        </div>\r\n      </div>\r\n      <!-- /Page Header -->\r\n      <!-- Page Body -->\r\n      <div class=\"page-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-12 col-md-12 col-md-12 col-xs-12 \">\r\n                <div class=\"well with-header with-footer three-bordered \">\r\n                  <div class=\"header gray\">\r\n                    Add Estimate\r\n                  </div>\r\n                  <!-- form1 -->\r\n                  <div id=\"registration-form\">\r\n                    <form [formGroup]=\"addEstimate\">\r\n                      <!-- Add Estimate -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"estimateNumLbl\">\r\n                                  <b>Customer ID<span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"estimateNum\"\r\n                                    value=\"{{billingAddressData.customerId}}\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"dobLbl\">\r\n                                  <b>Work Order # <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control\" readonly type=\"text\" value=\"{{workOrderNum}}\"\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"estimateNumLbl\">\r\n                                  <b>Estimate # <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"estimateNum\"\r\n                                    value=\"{{estimateID}}\" readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"dobLbl\">\r\n                                  <b>Date Created <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"date\" value=\"{{myDate}}\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <!-- NOTES: This Row is visible to Pro Only not to Customer -->\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"channelManagerLbl\">\r\n                                  <b>Channel Manager <span class=\"mandatory\"></span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" id=\"channelManager\" formControlName=\"channelManager\"\r\n                                  required [(ngModel)]=\"firstName\" (change)=\"getStaffName(firstName)\">\r\n                                  <option value=\"-1\">Select</option>\r\n                                  <option *ngFor=\"let data of channelManagerList\" value={{data.employeeId}}>\r\n                                    {{data.firstName}}-{{data.lastName}}\r\n                                  </option>\r\n                                </select>\r\n                                <!-- <input type=\"text\" class=\"form-control\" formControlName=\"channelManager\" readonly\r\n                                  value=\"{{channelManagerList.firstName}}\"\r\n                                  style=\"background-color: #F2F2F2; color: black;\"> -->\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"splitRateLbl\">\r\n                                  <b>Split Rate <span class=\"mandatory\"></span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" name=\"splitRate\" formControlName=\"splitRate\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"50/50\">50/50</option>\r\n                                  <option value=\"75/25\">75/25</option>\r\n                                  <option value=\"25/75\">25/75</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <!-- /NOTES: This Row is visible to Pro Only not to Customer -->\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"primaryTechLbl\">\r\n                                  <b>Primary Tech <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"primaryTech\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"secondaryTechLbl\">\r\n                                  <b>Secondary Tech <span class=\"mandatory\"></span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <!-- <input type=\"text\" class=\"form-control\" formControlName=\"secondaryTech\"> -->\r\n                                <select class=\"form-control\" formControlName=\"secondaryTech\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option *ngFor=\"let data of employeeRole\" value={{data.firstName}}-{{data.lastName}}>\r\n                                    <b>{{data.role}}--{{data.firstName}}-{{data.lastName}}</b>\r\n                                  </option>\r\n                                </select>\r\n\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\" *ngIf=\"loginStaffDetailsResponse\">\r\n                            <div class=\"col-sm-3\" *ngIf=\"loginStaffDetailsList.estimatesReqMgApproval == ''\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" disabled=\"disabled\">\r\n                                    <span class=\"text\">Require Manager Approval</span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\" *ngIf=\"loginStaffDetailsList.estimatesReqMgApproval == 'false'\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" disabled=\"disabled\">\r\n                                    <span class=\"text\">Require Manager Approval</span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\" *ngIf=\"loginStaffDetailsList.estimatesReqMgApproval == 'true'\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" checked=\"checked\"\r\n                                      disabled=\"disabled\">\r\n                                    <span class=\"text\">Require Manager Approval </span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <!-- <label for=\"statusLbl\">\r\n                                    <b>Status <span class=\"mandatory\">*</span></b>\r\n                                  </label> -->\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <!-- <select class=\"form-control\" id=\"status\" required>\r\n                                    <option value=\"\">Select</option>\r\n                                    <option value=\"Draft\">Draft</option>\r\n                                    <option value=\"Sent\">Sent</option>\r\n                                    <option value=\"Approved\">Approved</option>\r\n                                    <option value=\"Rejected\">Rejected</option>\r\n                                    <option value=\"FollowsUp\">Follows Up</option>\r\n                                    <option value=\"Canceled\">Canceled</option>\r\n                                  </select> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <!-- Add Estimate -->\r\n\r\n\r\n                      <!-- Billing Address Details -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Billing Details\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"companyNameLbl\">\r\n                                  <b>Company/Customer Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"customerName\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\"\r\n                                    (keypress)=\"keyPress1($event)\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"emailIDLbl\">\r\n                                  <b>Email ID </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerEmailId\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"firstNameLbl\">\r\n                                  <b>First Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerFirstName\" (keypress)=\"keyPress1($event)\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"lastNameLbl\">\r\n                                  <b>Last Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerLastName\" (keypress)=\"keyPress1($event)\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"phoneNumberLbl\">\r\n                                  <b>Phone Number </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerPhoneNumber\" mask=\"000-000-0000\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"phoneType\">\r\n                                  <b>Phone Type </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" formControlName=\"customerPhoneType\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                                  <option value=\"Cell\">Cell</option>\r\n                                  <option value=\"Home\">Home</option>\r\n                                  <option value=\"Work\">Work</option>\r\n                                  <option value=\"Fax\">Fax</option>\r\n                                </select>\r\n\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"serviceAddressLbl\">\r\n                                  <b>Address </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerAddress\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"stateLbl\">\r\n                                  <b>State </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"stateRegistred\" name=\"status\"\r\n                                  data-bv-field=\"row-title\" formControlName=\"customerState\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                                <!-- <option value=\"\">Select</option>\r\n                                  <option *ngFor=\"let data of statesData\" value={{data.stateName}}>\r\n                                    {{data.stateName}}\r\n                                  </option> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"cityLbl\">\r\n                                  <b>City </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"customerCity\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"zipCodeLbl\">\r\n                                  <b>Zip Code </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" minlength=\"5\" maxlength=\"6\"\r\n                                    formControlName=\"customerZipCode\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                                <!-- <div *ngIf=\"f.customerZipCode.errors.minlength\" style=\"color:red;font-size: 11px\">Invalid Zip Code\r\n                                          (5-6 digits)\r\n                                        </div> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"sendInvoiceToLbl\">\r\n                                  <b>Send Invoice By </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                  formControlName=\"customerSendInvoiceBy\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                                <!-- <option value=\"E-Mail\">E-Mail</option>\r\n                                  <option value=\"Cell\">Cell</option>\r\n                                  <option value=\"US Mail\">US Mail</option>\r\n                                </select> -->\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"invoiceEmailLbl\">\r\n                                  <b>Invoice Email </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerInvoiceEmail\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"termsLbl\">\r\n                                  <b>PO# </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"poNumber\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"customerSinceLbl\">\r\n                                  <b>Customer Since </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"customerSince\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <!-- <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"termsLbl\">\r\n                                  <b>PO# </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"poNumber\">\r\n                                </span>\r\n                              </div>\r\n                            </div> -->\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"customerSinceLbl\">\r\n                                  <b>Payment Method</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                formControlName=\"customerPaymentMethod\" readonly\r\n                                style=\"background-color: #F2F2F2; color: black;\">\r\n                              <!-- <option value=\"Cash\">Cash</option>\r\n                                <option value=\"Check\">Check</option>\r\n                                <option value=\"Credit Card\">Credit Card</option>\r\n                                <option value=\"Direct Deposit\">Direct Deposit</option>\r\n                                <option value=\"Finance\">Finance</option>\r\n                              </select> -->\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"leadQuantityLbl\">\r\n                                  <b>Lead Quality</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"leadQuantity\" formControlName=\"leadQuantity\"\r\n                                  required readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                <!-- <option value=\"\">Select</option>\r\n                                  <option value=\"None\">None</option>\r\n                                  <option value=\"Poor\">Poor</option>\r\n                                  <option value=\"Average\">Average</option>\r\n                                  <option value=\"Good\">Good</option>\r\n                                  <option value=\"Excellent\">Excellent</option> -->\r\n                                <!-- </select> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <!-- <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"crossSt1Lbl\">\r\n                                  <b>Cross St 1</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"crossSt1\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"crossSt2Lbl\">\r\n                                  <b>Cross St 2</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"crossSt2\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div> -->\r\n                          <!-- <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"sourceLbl\">\r\n                                  <b>Source </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" formControlName=\"customerSource\">\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"Yelp\">Yelp</option>\r\n                                  <option value=\"Home Advisor\">Home Advisor</option>\r\n                                  <option value=\"Thumbtack\">Thumbtack</option>\r\n                                  <option value=\"Word of Mouth\">Word of Mouth</option>\r\n                                  <option value=\"Money Mailer\">Money Mailer</option>\r\n                                  <option value=\"HomeMag\">HomeMag</option>\r\n                                  <option value=\"Angies List\">Angies List</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"paymentMethodLbl\">\r\n                                  <b>Payment Method</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <select type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerPaymentMethod\">\r\n                                    <option value=\"Cash\">Cash</option>\r\n                                    <option value=\"Check\">Check</option>\r\n                                    <option value=\"Credit Card\">Credit Card</option>\r\n                                    <option value=\"Direct Deposit\">Direct Deposit</option>\r\n                                    <option value=\"Finance\">Finance</option>\r\n                                  </select>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"expectedStartDateLbl\">\r\n                                  <b>Expected Start Date/Time <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" placeholder=\"09-11-2019 11:00:00\"\r\n                                  formControlName=\"expectedStartDateLbl\">\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"expectedEndDateLbl\">\r\n                                  <b>Expected End Date/Time <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"text\" value=\"09-11-2019 15:00:00\"\r\n                                  formControlName=\"expectedEndDate\">\r\n                              </div>\r\n                            </div>\r\n                          </div> -->\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"frequencyLbl\">\r\n                                  <b>Frequency </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select type=\"text\" class=\"form-control\" id=\"frequency\" formControlName=\"frequency\"\r\n                                  required style=\"background-color: #F2F2F2; color: black;\">\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"None\">None</option>\r\n                                  <option value=\"Weekly\">Weekly</option>\r\n                                  <option value=\"Monthly\">Monthly</option>\r\n                                  <option value=\"Quaterly\">Quarterly</option>\r\n                                  <option value=\"Yearly\">Yearly</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"adminNotesLbl\">\r\n                                  <b>Admin Notes </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerAdminNotes\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" formControlName=\"doNotServe\"\r\n                                      readonly>\r\n                                    <span class=\"text\">Do Not Serve</span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n\r\n                              </div>\r\n                            </div>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Billing Address Details -->\r\n\r\n                      <!-- Service Location -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Service Location\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobTitleLbl\">\r\n                                  <b>Job Title </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"jobTitle\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"firstNameLbl\">\r\n                                  <b>First Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerFirstName\" (keypress)=\"keyPress1($event)\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"lastNameLbl\">\r\n                                  <b>Last Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"customerLastName\" (keypress)=\"keyPress1($event)\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobEmailLbl\">\r\n                                  <b>Contact Email </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"jobEmail\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobPhoneNumberLbl\">\r\n                                  <b>Contact Number </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"jobPhoneNumber\" mask=\"000-000-0000\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobAddressLbl\">\r\n                                  <b>Address </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"jobAddress\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobStateLbl\">\r\n                                  <b>State </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"stateRegistred\" name=\"status\"\r\n                                  data-bv-field=\"row-title\" formControlName=\"jobState\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                                <!-- <option value=\"\">Select</option>\r\n                                  <option *ngFor=\"let data of statesData\" value={{data.stateName}}>\r\n                                    {{data.stateName}}\r\n                                  </option> -->\r\n                                <!-- </select> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobCityLbl\">\r\n                                  <b>City </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"jobCity\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobZipCodeLbl\">\r\n                                  <b>Zip Code </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" minlength=\"5\" maxlength=\"6\"\r\n                                    formControlName=\"jobZipCode\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                                <!-- <div *ngIf=\"f.customerZipCode.errors.minlength\" style=\"color:red;font-size: 11px\">Invalid Zip Code\r\n                                  (5-6 digits)\r\n                                </div> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Service Location -->\r\n\r\n\r\n                      <!-- Add PriceBook Item -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Add PriceBook Items\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n                              <div class=\"flip-scroll\">\r\n                                <!-- Form 2 -->\r\n                                <!-- <form [formGroup]=\"addInventoryItem\"> -->\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <a type=\"submit\" class=\"btn btn-blue\" data-toggle=\"modal\" data-backdrop=\"false\"\r\n                                        data-target=\"#myPriceBook\"><i class=\"fa fa-plus\"></i>\r\n                                        Select PriceBook </a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div><br />\r\n                                <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                                  <thead class=\"flip-content bordered-palegreen\">\r\n                                    <tr>\r\n                                      <th width=\"10%\">\r\n                                        Item #\r\n                                      </th>\r\n                                      <th width=\"10%\">\r\n                                        Type\r\n                                      </th>\r\n                                      <th width=\"25%\">\r\n                                        Name\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        QTY\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Time &nbsp;&nbsp;( Hrs. )\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Units\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        List Price &nbsp;&nbsp;($)\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Sub Total &nbsp;&nbsp;($)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Delete\r\n                                      </th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <ng-container>\r\n                                    <tbody *ngIf=\"priceBookServiceResponse\">\r\n                                      <tr *ngFor=\"let data of viewItemDetails\">\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg:123456\"\r\n                                            value=\"{{data.serviceId}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Material/Labor\"\r\n                                            value=\"{{data.type}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"1\"\r\n                                            value=\"{{data.name}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <!-- <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" value=\"{{data.description}}\"\r\n                                              class=\"form-control input-sm\" readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                          </td> -->\r\n                                        <!-- <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" value=\"{{data.manufacturer}}\"\r\n                                              class=\"form-control input-sm\" readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                          </td> -->\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Each\"\r\n                                            value=\"{{data.quantity }}\" class=\"form-control input-sm\"\r\n                                            [dropSpecialCharacters]=\"false\" mask=\"0*.00\" [(ngModel)]=\"data.quantity\"\r\n                                            (ngModelChange)=\"getPriceBookQuantity(data)\"\r\n                                            [ngModelOptions]=\"{standalone: true}\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Each\"\r\n                                            value=\"{{data.time}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" class=\"form-control input-sm\"\r\n                                            readonly style=\"background-color: #F2F2F2; color: black;\"\r\n                                            value=\"{{data.units}}\">\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Each\"\r\n                                            value=\"{{data.priceMarkUp}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" class=\"form-control input-sm\" style=\"text-align: center;\"\r\n                                            value=\"{{data.subTotal}}\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td class=\"center\">\r\n\r\n                                          <a class=\"btn btn-xs btn-danger shiny\" (click)=\"deletePriceBookItems(data)\">\r\n                                            <i class=\"fa fa-trash-o\"></i>\r\n                                          </a>\r\n                                        </td>\r\n                                      </tr>\r\n                                    </tbody>\r\n                                    <div *ngIf=\"!priceBookServiceResponse\">\r\n                                      <!-- <div class=\"text-center\">No Records Found</div> -->\r\n                                    </div>\r\n                                  </ng-container>\r\n                                </table>\r\n\r\n                                <br />\r\n\r\n                                <!-- <div class=\"row\">\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-5\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostLbl\">\r\n                                        <h5><b>Material Cost</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostVal\">\r\n                                        <h5><b class=\"text-right\">${{priceBookMaterialValue}}.00</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div> -->\r\n                                <!-- <div class=\"row\">\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-5\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostLbl\">\r\n                                        <h5><b>Labor Cost</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostVal\">\r\n                                        <h5><b class=\"text-right\">${{priceBookLaborValue}}.00</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div> -->\r\n                                <!-- <div class=\"row\">\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-1\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <b>Tax %</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-1\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <b class=\"text-right\">{{taxValue}}%</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <b>Tax Value</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <b class=\"text-right\">${{pricebookTax}}.00</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div> -->\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-5\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostLbl\">\r\n                                        <h5><b>Pricebook Cost</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostVal\">\r\n                                        <h5><b class=\"text-right\">${{priceBookListValue}}</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <!-- </form> -->\r\n                                <!-- /Form 2 -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Add PriceBook Item -->\r\n                      <!-- Pricebook General Description -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-title\">\r\n                                PriceBook Description\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"pricebookDescription\"\r\n                                    placeholder=\"Enter PriceBook Description\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Pricebook General Description -->\r\n\r\n                      <!-- Custom Labor and Material General Description -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-title\">\r\n                                Custom Labor and Material General Description\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"materialGD\"\r\n                                    placeholder=\"Enter General Description\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Custom Labor and Material General Description -->\r\n\r\n                      <!-- Add Custom Material Item -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Add Custom Material\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n                              <div class=\"flip-scroll\">\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <a type=\"submit\" class=\"btn btn-blue\" data-toggle=\"modal\" data-backdrop=\"false\"\r\n                                        data-target=\"#customMaterial\"><i class=\"fa fa-plus\"></i>\r\n                                        Select Custom Material </a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div><br />\r\n                                <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                                  <thead class=\"flip-content bordered-palegreen\">\r\n                                    <tr>\r\n                                      <th width=\"12%\">\r\n                                        Item #\r\n                                      </th>\r\n                                      <!-- <th width=\"8%\">\r\n                                        Type\r\n                                      </th> -->\r\n                                      <th width=\"15%\">\r\n                                        Category\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        SubCategory\r\n                                      </th>\r\n                                      <th width=\"15%\" class=\"center\">\r\n                                        Name\r\n                                      </th>\r\n                                      <th width=\"8%\" class=\"center\">\r\n                                        Quantity\r\n                                      </th>\r\n                                      <th width=\"8%\" class=\"center\">\r\n                                        Units\r\n                                      </th>\r\n                                      <th width=\"8%\" class=\"center\">\r\n                                        Cost Price ($)\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        List Price($) (With Markup)\r\n                                      </th>\r\n                                      <th width=\"15%\" class=\"center\">\r\n                                        Sub Total($)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Delete\r\n                                      </th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <ng-container *ngIf=\"customMaterialResponse\">\r\n                                    <tbody>\r\n                                      <tr *ngFor=\"let data of customMaterialData1\">\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg:123456\"\r\n                                            value=\"{{data.itemId}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2;\">\r\n                                        </td>\r\n                                        <!-- <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Material/Labor\"\r\n                                            value=\"{{data.type}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; \">\r\n                                        </td> -->\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"1\"\r\n                                            value=\"{{data.category}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" value=\"{{data.subCategory}}\"\r\n                                            class=\"form-control input-sm\" readonly style=\"background-color: #F2F2F2; \">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" value=\"{{data.name}}\"\r\n                                            class=\"form-control input-sm\" readonly style=\"background-color: #F2F2F2; \">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\" \"\r\n                                            value=\"{{data.quantity}}\" class=\"form-control input-sm\"\r\n                                            [dropSpecialCharacters]=\"false\" mask=\"0*.00\" [(ngModel)]=\"data.quantity\"\r\n                                            (ngModelChange)=\"getQuantityCMValue(data)\"\r\n                                            [ngModelOptions]=\"{standalone: true}\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" class=\"form-control input-sm\"\r\n                                            readonly style=\"background-color: #F2F2F2;\" value=\"{{data.units}}\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" class=\"form-control input-sm\"\r\n                                            readonly style=\"background-color: #F2F2F2; \" value=\"{{data.costPrice}}\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                            value=\"{{data.priceMarkUp}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" class=\"form-control input-sm\" style=\"text-align: center;\"\r\n                                            value=\"{{data.materialSubTotal}}\" readonly\r\n                                            style=\"background-color: #F2F2F2; \">\r\n                                        </td>\r\n                                        <td class=\"center\">\r\n                                          <a class=\"btn btn-xs btn-danger\" (click)=\"deleteCustomMaterial(data)\">\r\n                                            <i class=\"fa fa-trash-o\"></i>\r\n                                          </a>\r\n                                        </td>\r\n                                      </tr>\r\n                                    </tbody>\r\n                                  </ng-container>\r\n                                  <ng-container *ngIf=\"!customMaterialResponse\">\r\n\r\n                                  </ng-container>\r\n                                </table>\r\n                                <br />\r\n                                <br>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <b>Custom Material</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <b class=\"text-right\">${{customMaterialListValue}}.00</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-1\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <b>Tax %</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-1\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <b class=\"text-right\">{{taxValue}}%</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <b>Tax Value</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <b class=\"text-right\">${{taxPercentCal}}</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <h5><b>Total Custom Material Cost</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <h5><b>${{totalMaterialCostWithTax}}</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <h5><b>Total MarkUp Value</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group-less\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <h5><b>${{totalMarkupValue}}</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group-less\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <br>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Add Custom Material Item -->\r\n\r\n\r\n                      <!-- Add Custom Labor -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Add Custom Labor\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n\r\n                              <div class=\"flip-scroll\">\r\n                                <form [formGroup]=\"addCustomLaborMaterial\">\r\n                                  <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                                    <thead class=\"flip-content bordered-palegreen\">\r\n                                      <tr>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Type\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Staff Name\r\n                                        </th>\r\n                                        <th width=\"20%\" class=\"center\">\r\n                                          Description\r\n                                        </th>\r\n                                        <th width=\"5%\" class=\"center\">\r\n                                          QTY\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Units\r\n                                        </th>\r\n                                        <!-- <th width=\"10%\" class=\"center\">\r\n                                          Cost Price($)\r\n                                        </th> -->\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Bill Rate($/hr)\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Sub Total($)\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Delete\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      <ng-container *ngIf=\"customLaborMaterialResponse\">\r\n                                        <tr *ngFor=\"let data of viewCLMDetails\">\r\n                                          <td class=\"center\">{{data.type}}</td>\r\n                                          <td class=\"center\">{{data.staffName}}</td>\r\n                                          <td>{{data.name}}</td>\r\n                                          <td class=\"center\">{{data.quantity}}</td>\r\n                                          <td class=\"center\">{{data.units}}</td>\r\n                                          <!-- <td class=\"text-right\">${{data.listPrice}}</td> -->\r\n                                          <td class=\"text-right\">${{data.priceMarkUp}}</td>\r\n                                          <td class=\"text-right\">${{data.subTotal}}</td>\r\n                                          <td class=\"center\">\r\n                                            <a class=\"btn btn-xs btn-info\" data-toggle=\"modal\"\r\n                                              data-target=\"#editCustomLaborCostModal\"\r\n                                              (click)=\"viewCustomLabor(data.id)\"><i class=\"fa fa-pencil\"></i>\r\n                                            </a>&nbsp; &nbsp;\r\n                                            <a class=\"btn btn-xs btn-danger\" (click)=\"deleteCustomLabor(data)\">\r\n                                              <i class=\"fa fa-trash-o\"></i>\r\n                                            </a>\r\n                                          </td>\r\n                                        </tr>\r\n                                      </ng-container>\r\n                                      <ng-container *ngIf=\"!customLaborMaterialResponse\">\r\n\r\n                                      </ng-container>\r\n                                      <ng-container formArrayName=\"customLaborMaterial\">\r\n                                        <tr\r\n                                          *ngFor=\"let item of addCustomLaborMaterial.get('customLaborMaterial').controls; let j = index;\"\r\n                                          [formGroupName]=\"j\">\r\n                                          <td>\r\n                                            <select class=\"form-control\" formControlName=\"type\" required\r\n                                              [(ngModel)]=\"roleName\" (change)=\"changeRole(roleName)\">\r\n                                              <option value=\"\">Select</option>\r\n                                              <option *ngFor=\"let data of roleData\" value={{data.roleName}}>\r\n                                                {{data.roleName}}\r\n                                              </option>\r\n                                            </select>\r\n                                            <span *ngIf=\"errormsgtype\" style=\"color: red;\">Please Select Type</span>\r\n                                          </td>\r\n                                          <td>\r\n                                            <select class=\"form-control\" formControlName=\"staffName\" required\r\n                                              [(ngModel)]=\"staffId\" (change)=\"getDetails(staffId)\">\r\n                                              <option value=\"\">Select</option>\r\n                                              <option *ngFor=\"let data of staffData\" value={{data.employeeId}}>\r\n                                                {{data.firstName}}-{{data.lastName}}\r\n                                              </option>\r\n                                            </select>\r\n                                            <span *ngIf=\"errormsg\" style=\"color: red;\">Please Select Staff</span>\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                              formControlName=\"description\" class=\"form-control input-md\">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                              class=\"form-control input-sm\" formControlName=\"quantity\"\r\n                                              [(ngModel)]=\"quantityValue\" [dropSpecialCharacters]=\"false\" mask=\"0*.00\"\r\n                                              (ngModelChange)=\"getQuantityValue(quantityValue)\">\r\n                                            <span *ngIf=\"errormsgquant\" style=\"color: red;\">Please Select\r\n                                              Quantity</span>\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" readonly style=\"text-align: center;\" placeholder=\"\"\r\n                                              formControlName=\"units\" class=\"form-control input-md\"\r\n                                              value=\"{{laborHours}}\">\r\n                                          </td>\r\n\r\n                                          <!-- <td class=\"text-right\">\r\n                                            <input type=\"text\" readonly style=\"text-align: center;\" placeholder=\"\"\r\n                                              formControlName=\"listPrice\" value=\"{{laborCostPrice}}\"\r\n                                              class=\"form-control input-sm\" [(ngModel)]=\"listPriceValue\"\r\n                                              (ngModelChange)=\"getPriceValue(listPriceValue)\">\r\n                                          </td> -->\r\n                                          <td class=\"text-right\">\r\n                                            <input type=\"text\" readonly style=\"text-align: center;\" placeholder=\"\"\r\n                                              value=\"{{laborCost}}\" class=\"form-control input-sm\">\r\n                                          </td>\r\n                                          <td class=\"text-right\">\r\n                                            <input type=\"text\" readonly style=\"text-align: center;\" placeholder=\"\"\r\n                                              formControlName=\"subTotal\" value=\"{{subTotalValue}}\"\r\n                                              class=\"form-control input-sm\">\r\n                                          </td>\r\n                                          <td class=\"center\">\r\n                                            <a class=\"btn btn-xs btn-success\" (click)=\"submitCustomLaborMaterial()\">\r\n                                              <i class=\"fa fa-check\"></i>\r\n                                            </a> &nbsp; &nbsp;\r\n                                            <a class=\"btn btn-xs btn-danger\" (click)=\"cancelCustomLAndM()\">\r\n                                              <i class=\"fa fa-times\"></i>\r\n                                            </a>\r\n                                          </td>\r\n                                        </tr>\r\n                                      </ng-container>\r\n                                    </tbody>\r\n                                  </table>\r\n                                </form>\r\n                                <br>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <h5><b>Custom Labor</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <h5><b class=\"text-right\">${{customLaborListValue}}.00</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <br>\r\n                                <!-- </form> -->\r\n                                <!-- /Form 4 -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Add Custom Labor -->\r\n\r\n\r\n                      <!-- Total Estimate Cost -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Total Estimate Cost\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n                              <table class=\"table table-bordered table-hover\" style=\"border-color: 3px solid black;\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Estimated Price Before Discount ($)</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: yellow;\">\r\n                                      <b>${{totalEstPriceBeforeDisc}}</b>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Discount</b></td>\r\n                                    <td width=\"20%\">\r\n                                      <select class=\"form-control\" id=\"paymentMethods\" formControlName=\"newPromoCode\"\r\n                                        [(ngModel)]=\"promoCode\" (ngModelChange)=\"getPromoCodeDiscount(promoCode)\">\r\n                                        <option value=\"0\">Select</option>\r\n                                        <option value=\"{{workOrderDescriptionData.promoCodeDisc}}\" *ngIf=\"!promotion\">\r\n                                          {{workOrderDescriptionData.promoCodeDisc}}</option>\r\n                                        <option *ngFor=\"let data of promotionData\" value={{data.promotionCode}}>\r\n                                          {{data.promotionCode}}\r\n                                        </option>\r\n                                      </select>\r\n                                    </td>\r\n                                    <td width=\"20%\">\r\n                                      <i class=\"fa fa-dollar\"></i>\r\n                                      {{discountAmount}}\r\n\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;  background-color: red; color: white\">-\r\n                                      ${{promoValue}}.00</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Other Promos($)</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\">\r\n                                      <span class=\"input-icon icon-left\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" formControlName=\"otherPromoCode\"\r\n                                          (change)=getOtherPromoCode() class=\"form-control input-sm\">\r\n                                        <i class=\"fa fa-dollar\"></i>\r\n                                      </span>\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: red; color: white\">-\r\n                                      ${{otherPromoValue}}.00</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Discounts ($)</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: red; color: white\">\r\n                                      <b>-${{totalDiscount}}.00</b></td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Estimated Price After Discount</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: yellow;\">\r\n                                      <b>${{afterDiscount}}</b></td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Payment Methods</b></td>\r\n                                    <td width=\"20%\">\r\n                                      <select class=\"form-control\" id=\"paymentMethods\" formControlName=\"paymentMethods\"\r\n                                        required [(ngModel)]=\"paymentMode\"\r\n                                        (ngModelChange)=\"getPaymentMode(paymentMode)\">\r\n                                        <option value=\"\">Select</option>\r\n                                        <option *ngFor=\"let data of payMethods\" value={{data.paymentMethods}}>\r\n                                          {{data.paymentMethods}}\r\n                                        </option>\r\n                                      </select>\r\n                                    </td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" readonly\r\n                                        style=\"text-align: center; background-color:  #F2F2F2; color: black\"\r\n                                        placeholder=\"Eg: 10.00%\" formControlName=\"paymentValue\"\r\n                                        (change)=getPaymentValue() class=\"form-control input-sm\"\r\n                                        value=\"{{creditCardPF}}%\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;background-color: yellow;  \">\r\n                                      <b>${{paymentModeValue}}</b></td>\r\n                                  </tr>\r\n                                  <tr style=\"background-color: green; color: black\">\r\n                                    <td width=\"40%\">\r\n                                      <h5><b>Total Estimated Price ($)</b></h5>\r\n                                    </td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right;\">\r\n                                      <h5><b>${{totalValueAfterDiscounts}}</b></h5>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Required Deposit(%)</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\">\r\n                                      <span class=\"input-icon icon-right\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg: 10.00%\"\r\n                                          formControlName=\"reqDiscount\" value=\"10%\" (change)=\"getReqDiscount()\"\r\n                                          class=\"form-control input-sm\">\r\n                                        <i class=\"fa fa-percent\"></i>\r\n                                      </span>\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;background-color: skyblue;\">\r\n                                      <b>${{finalValue}}</b></td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              <br />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Total Estimate Cost -->\r\n\r\n\r\n                      <!-- Special Instructions -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Special Instructions\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"instructions\"\r\n                                    placeholder=\"Enter Your Installation Instructions\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Special Instructions -->\r\n\r\n                      <!-- Job Site Notice -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Job Site Notice\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"jobSiteNotice\"\r\n                                    placeholder=\"Enter Job Site Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <!-- <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"addPicturesLbl\">\r\n                                  <b>Add Pictures</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type='file' (change)=\"onSelectFile($event)\" multiple>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <div *ngFor='let url of urls;let index = index'>\r\n                                  <figure class=\"icon1\">\r\n                                    <figcaption (click)=\"removeSelectedFile(index)\" style=\"margin-left:20px;color: red\">\r\n                                      <i class=\"fa fa-times\"></i>\r\n                                    </figcaption>\r\n                                    <img [src]=\"url\" height=\"100px\" width=\"120px\">\r\n\r\n                                  </figure>\r\n                                  &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                </div>\r\n\r\n                                <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"upload()\">\r\n                                  Upload\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                           -->\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"serviceIDLbl\">\r\n                                  <b>Add Pictures</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-2\">\r\n                              <div class=\"form-group\">\r\n\r\n                                <input type=\"file\" id=\"file-upload\" (change)=\"onSelectFile($event)\" class=\"uploadImage\"\r\n                                  [(ngModel)]=\"filesToUpload.length\" [ngModelOptions]=\"{standalone: true}\" multiple>\r\n\r\n                                <label for=\"file-upload\" class=\"custom-file-upload\">\r\n                                  <i class=\"fa fa-file-image-o\"></i> Choose Files\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <!-- <div  class=\"uplaodImage\" class=\"col-sm-2\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"uplaodImage\" [(ngModel)]=\"chosseTypecount\"\r\n                                  #fileName class=\"border\" value=\"{{fileName}}\"\r\n                                  [ngModelOptions]=\"{standalone: true}\">\r\n\r\n                              </div>\r\n                            </div> -->\r\n                            <div class=\"col-sm-2\">\r\n\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <div *ngFor=\"let x of arr;let i=index\">\r\n                                  <br>\r\n                                  <figure class=\"imageNamecss\" class=\"icon1\">\r\n                                    {{imageNames[i]?.image}}<i (click)=\"removeSelectedFile(i)\"\r\n                                      style=\"float:right;margin-top:0px;color: red\" class=\"fa fa-times\"></i>\r\n                                    <img src=\"{{x.name}}\" height=\"100px\" width=\"120px\" readonly>\r\n\r\n                                  </figure>\r\n                                  &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                </div>\r\n                                <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"upload()\">\r\n                                  <i class=\"fa fa-upload\"></i>\r\n                                  Upload\r\n                                </button>\r\n                                <div *ngIf=\"displyFlag == true\">\r\n                                  <p style=\"color: red; font-size: 11px\">\r\n                                    Please upload the files\r\n                                  </p>\r\n                                </div>\r\n                                <br>\r\n                                <br>\r\n                                <div *ngIf=\"progressShow1\" class=\"progress-bar1 green stripes\">\r\n                                  <span [style.width.%]=\"percentage1\">\r\n                                    <p style=\"text-align: center;color:black;font-size:18px;\">\r\n                                      {{percentage1}}%</p>\r\n                                  </span>\r\n                                </div>\r\n                                <div *ngIf=\"progressHide1\" class=\"alert alert-block alert-success\" style=\"height:4px;\">\r\n                                  <h4 class=\"alert-heading\" style=\"margin-top:-6px;text-align:center;\">\r\n                                    Images\r\n                                    Uploaded\r\n                                    Successfully</h4>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Job Site Notice -->\r\n\r\n                      <!-- Estimate Notice -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Estimate Notice\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"estimateNotice\"\r\n                                    placeholder=\"Enter Estimate Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Estimate Notice -->\r\n\r\n                      <!-- NOTES: This Section is visible to Pro Only not to Customer -->\r\n                      <!-- Private Notice -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\" style=\"color:  #FF0000; border-bottom: 1px dashed #FF0000;\">\r\n                            Private Notice\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"privateNotice\"\r\n                                    placeholder=\"Enter Private Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Private Notice -->\r\n                      <!-- /NOTES: This Section is visible to Pro Only not to Customer -->\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <hr class=\"hr-gray-thick\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n\r\n                      <!-- PRO Buttons -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <a (click)=\"sendEstimate()\" class=\"btn btn-blue\"><i class=\"fa fa-check\"></i>\r\n                              Send</a>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <a (click)=\"createEstimate()\" class=\"btn btn-gray\"><i class=\"fa fa-check\"></i>\r\n                              Save As Draft</a>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"chargeAmount()\" class=\"btn btn-success\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              Receive Deposit</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <a id=\"formButton\" class=\"btn btn-purple\"><i class=\"fa fa-check\"></i>\r\n                              Estimate Analyzer</a>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <button type=\"submit\" (click)=\"generatePDF()\" class=\"btn btn-warning\"><i\r\n                                class=\"fa fa-check\"></i>\r\n                              View Customer PDF</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /PRO Buttons -->\r\n\r\n                      <!-- Set Reminder -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label for=\"setReminderLbl\">\r\n                              <b>Set Automatic Reminder to Follow up with Customer </b>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                          <div class=\"form-group\">\r\n                            <select class=\"form-control\" id=\"setReminder\" formControlName=\"setReminder\" required>\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"None\">None</option>\r\n                              <option value=\"in 1 Day\">in 1 Day</option>\r\n                              <option value=\"3 Days\">3 Days</option>\r\n                              <option value=\"1 Week\">1 Week</option>\r\n                              <option value=\"2 Weeks\">2 Weeks</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Set Reminder -->\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <hr class=\"hr-gray-thick\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- Estimate Analyzer -->\r\n                      <div id=\"form1\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                            <div class=\"form-title\">\r\n                              Estimate Analyzer\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-xs-12 col-md-12\">\r\n                                <table class=\"table table-bordered table-hover\" style=\"border-color: 3px solid black;\">\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Gross Sale (A) = Direct Cost(B) + Overhead Cost(C) +\r\n                                        Tech\r\n                                        Commssions (E) + Desired Profit (F)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{totalValueAfterDiscounts}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Desired Profit(%)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"20%\"\r\n                                          formControlName=\"desiredProfitInEA\" class=\"form-control input-sm\"\r\n                                          (change)=\"getDesiredProfit()\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\"> ${{desiredProfitValue}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Direct Cost</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                      </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                      <td width=\"40%\">Credit Card Processing Fees</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          placeholder=\"2.6%\" value=\"{{creditCardPF}}%\" class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{paymentModeValue}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Truck Operating Cost(TOC)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{toc}}.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Material Cost With Markup</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        ${{customMaterialListValue}}.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Labor Cost With Markup</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <!-- <td style=\"width:20%; text-align: right; \">${{customLaborListValue}}.00</td> -->\r\n                                      <td style=\"width:20%; text-align: right; \">${{customLaborListValue}}.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Other Cost(%)</td>\r\n                                      <td width=\"20%\">Describe</td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                          formControlName=\"otherCost\" (change)=\"getOtherCost()\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        ${{oCost}}.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Total Direct Job Cost(B)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"> <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          placeholder=\"61.46%\" value=\"{{desiredPercentage}}%\"\r\n                                          class=\"form-control input-sm\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{directJobCostValue}}</b>\r\n                                      </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Gross Profit = Bid Price (A) - Direct Cost (B)</b>\r\n                                      </td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\"><b>\r\n                                          ${{estimatedGrossProfitValue}}</b></td>\r\n                                    </tr>\r\n                                    <tr style=\"border-top-color: 2px solid black\" *ngIf=\"grossSaleValue\">\r\n                                      <td width=\"40%\">Estimated Channel Manager Commissions</td>\r\n                                      <td width=\"20%\"><b>{{empCommissionType}}</b></td>\r\n                                      <td width=\"20%\"> <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          value=\"{{empCommission}}%\" class=\"form-control input-sm\"\r\n                                          formControlName=\"channelManagerCommission\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{channelManagerCommValue}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Overhead Cost Estimate (C) = Set % *A\r\n                                        </b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          value=\"{{overHeadCostValue}}%\" class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\"><b>\r\n                                          ${{overHeadEstimateCostValue}}</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Employee Commission and Taxes</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\"><b>\r\n                                        </b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">PriceBook Hours (In Hours)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        {{priceBookHoursValue}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Custom Field Tech Hours (In Hours)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        {{customLaborFieldTechHours}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Total Hours (In Hours)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        {{sumOfPriceBookCustomLaborHours}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Working Value</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        ${{workingType}}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Tech Pay</td>\r\n                                      <td width=\"20%\"><b>{{commissionType}}</b></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        ${{totalHoursWithWorkingType}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Employee Worksman Comp Ins</td>\r\n                                      <td width=\"20%\">\r\n                                        <select class=\"form-control\" id=\"paymentMethods\"\r\n                                          formControlName=\"worksmanCompType\" (change)=\"getWorksmanCompValue()\">\r\n                                          <option value=\"YES\">YES</option>\r\n                                          <option value=\"NO\">NO</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2;\"\r\n                                          placeholder=\"7%\" class=\"form-control input-sm\" value=\"{{workmanCompIns}}%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        ${{workManEstComm}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Employee Tax Company</td>\r\n                                      <td width=\"20%\">\r\n                                        <select class=\"form-control\" id=\"paymentMethods\" required\r\n                                          formControlName=\"empTaxCompType\" (change)=\"geEmployeeTaxCompType()\">\r\n                                          <option value=\"YES\">YES</option>\r\n                                          <option value=\"NO\">NO</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2;\"\r\n                                          value=\"{{empTaxComp}}%\" class=\"form-control input-sm\"\r\n                                          (change)=\"getEmployeeTaxCompany()\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        ${{employeeTaxComm}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">\r\n                                        <b>Employee Commissions, Taxes and Ins (E) </b>\r\n                                      </td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{employeeCommTaxInc}}</b>\r\n                                      </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Profit from Material Mark ups</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{totalMarkupValue}}.00</b></td>\r\n                                    </tr>\r\n                                    <!-- <tr>\r\n                                      <td width=\"40%\"><b>Estimated Profit from Labor Mark ups</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{customLaborMarkUpListValue}}.00</b></td>\r\n                                    </tr> -->\r\n                                    <!-- <tr>\r\n                                      <td width=\"40%\"><b>Total Estimated Profit from Material Mark ups</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{estimatedMarkUpProfit}}.00</b></td>\r\n                                    </tr> -->\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Net Profit Before tech commission</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td *ngIf=\"!netProfitMinusCheck\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color:green;\">\r\n                                        <b>{{netProfitLaborWithCurrency}}</b></td>\r\n                                      <td *ngIf=\"netProfitMinusCheck\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color:red;\">\r\n                                        <b>{{netProfitLaborWithCurrency}}</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Tech Commissions</b></td>\r\n                                      <td width=\"20%\"><b>{{loginStaffCommissionType}}</b></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          value={{loginStaffCommission}}% class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!redEstTechComm\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green   \">\r\n                                        {{estTechCommWithCurrency}}</td>\r\n                                      <td *ngIf=\"redEstTechComm\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red \">\r\n                                        {{estTechCommWithCurrency}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Total Tech Pay</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        ${{totalEstTechPay}}</td>\r\n                                    </tr>\r\n                                    <tr style=\"border-top-color: 2px solid black\" *ngIf=\"netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Channel Manager Commissions</b></td>\r\n                                      <td width=\"20%\"><b>{{empCommissionType}}</b></td>\r\n                                      <td width=\"20%\"> <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          value=\"{{empCommission}}%\" class=\"form-control input-sm\"\r\n                                          formControlName=\"channelManagerCommission\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{channelManagerCommValueNetProfit}}\r\n                                      </td>\r\n                                    </tr>\r\n\r\n                                    <tr *ngIf=\"!netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Net Profit</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!red\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green;\">\r\n                                        <b>{{estNetProfitWithCurrency}}</b></td>\r\n                                      <td *ngIf=\"red\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                        <b>{{estNetProfitWithCurrency}}</b></td>\r\n                                    </tr>\r\n                                    <tr *ngIf=\"!netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Net Profit (%)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!redPer\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green;\">\r\n                                        <b>{{estNetProfitPercentWithCurrency}}%</b></td>\r\n                                      <td *ngIf=\"redPer\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                        <b>{{estNetProfitPercentWithCurrency}}</b></td>\r\n                                    </tr>\r\n                                    <tr *ngIf=\"netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Net Profit</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!red\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green;\">\r\n                                        <b>{{estNetProfitWithCMWithCurrency}}</b></td>\r\n                                      <td *ngIf=\"red\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                        <b>{{estNetProfitWithCMWithCurrency}}</b></td>\r\n\r\n                                    </tr>\r\n                                    <tr *ngIf=\"netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Net Profit (%)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!redPer\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green;\">\r\n                                        <b>{{estNetProfitPercentWithCMWithCurrency}}%</b></td>\r\n                                      <td *ngIf=\"redPer\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                        <b>{{estNetProfitPercentWithCMWithCurrency}}%</b></td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                                </table>\r\n                                <br />\r\n                                <br />\r\n                                <div class=\"col-sm-12\">\r\n                                  <div class=\"col-sm-3 \">\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 \">\r\n                                    <div class=\"form-group\">\r\n                                      <!-- <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-success\"><i\r\n                                        class=\"fa fa-check\"></i>\r\n                                      Save Item</button> -->\r\n                                      <a id=\"formButton2\" class=\"btn btn-success\"><i class=\"fa fa-check\"></i>\r\n                                        Save Item</a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <a id=\"formButton1\" class=\"btn btn-purple\"><i class=\"fa fa-check\"></i>\r\n                                        Back to Estimate </a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 \">\r\n                                  </div>\r\n                                </div>\r\n                                <br />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <!-- /Estimate Analyzer -->\r\n                    </form>\r\n                    <!-- /form1 -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <!-- Select Custom Material Popup -->\r\n        <div id=\"customMaterial\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Select Custom Material from Inventory:</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <br />\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-6\">\r\n                          <div class=\"form-group\">\r\n                            <span class=\"input-icon icon-right\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Eg: Search Custom Material\">\r\n                              <i class=\"fa fa-search\"></i>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                          <thead class=\"flip-content bordered-palegreen\">\r\n                            <tr>\r\n                              <th>\r\n                                Select\r\n                              </th>\r\n                              <th>\r\n                                Item ID\r\n                              </th>\r\n                              <th>\r\n                                Type\r\n                              </th>\r\n                              <th>\r\n                                Category\r\n                              </th>\r\n                              <th>\r\n                                Sub-Category\r\n                              </th>\r\n                              <th>\r\n                                Name\r\n                              </th>\r\n                              <th>\r\n                                Total Quantity\r\n                              </th>\r\n                              <th>\r\n                                List Price ($) (With MarkUp)\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n\r\n                          <tbody>\r\n                            <tr *ngFor=\"let data of customMaterialListDetails\">\r\n                              <!-- <tr> -->\r\n                              <td class=\"center\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" [(ngModel)]=\"data.selectedService\"\r\n                                      [ngModelOptions]=\"{standalone: true}\" value=\"1\">\r\n                                    <span class=\"text\"></span>\r\n                                  </label>\r\n                                </div>\r\n                              </td>\r\n                              <td>\r\n                                {{data.itemId}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.type}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.itemCategoryCode}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.itemSubCategoryCode}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.name}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.totalQuantity}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.listPrice}}\r\n                              </td>\r\n\r\n                            </tr>\r\n                          </tbody>\r\n\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\" (click)=\"saveCustomMaterial()\"><i\r\n                          class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i>\r\n                        Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /Select Custom Material Popup -->\r\n\r\n        <!-- Select PriceBook Popup -->\r\n        <div id=\"myPriceBook\" data-backdrop=\"false\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\"\r\n          aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Select Standard/Member/Value from View PriceBook</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <!-- <div class=\"row\">\r\n                        <div class=\"col-lg-6\">\r\n                          <div class=\"form-group\">\r\n                            <span class=\"input-icon icon-right\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Eg: Search PriceBook\">\r\n                              <i class=\"fa fa-search\"></i>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div> -->\r\n                      <br />\r\n\r\n                      <form [formGroup]=\"priceBookSearch\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <span class=\"text\">Category </span>\r\n                              <select class=\"form-control\" formControlName=\"category\">\r\n                                <option>--Select--</option>\r\n                                <option *ngFor='let data of priceBookData' value={{data.category}}>\r\n                                  {{data.category}}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <span class=\"text\">Sub-Category </span>\r\n                                <select class=\"form-control\" formControlName=\"subCategory\">\r\n                                  <option>--Select--</option>\r\n                                  <option *ngFor='let data of subcategoryData' value={{data.subCategory}}>\r\n                                    {{data.subCategory}}</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <span class=\"text\">Title </span>\r\n                                <input class=\"form-control\" type=\"text\" formControlName=\"description\">\r\n\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <input type=\"button\" value=\"Search\" class=\"btn btn-blue\"\r\n                                  style=\"width:10em;margin-top:1em;\" (click)=\"priceBookSearchDetails()\">\r\n\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n\r\n                      <br />\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                          <thead class=\"flip-content bordered-palegreen\">\r\n                            <tr>\r\n                              <th>\r\n                                Preview\r\n                              </th>\r\n                              <th>\r\n                                Service ID\r\n                              </th>\r\n                              <th>\r\n                                Main Category\r\n                              </th>\r\n                              <th>\r\n                                Sub-Category\r\n                              </th>\r\n                              <th>\r\n                                Title\r\n                              </th>\r\n                              <!-- <th>\r\n                                Material retail price\r\n                              </th>\r\n                              <th>\r\n                                Truck Operating Cost\r\n                              </th>\r\n                              <th>\r\n                                Lead Cost\r\n                              </th>\r\n                              <th>\r\n                                Total Cost\r\n                              </th>\r\n                              <th>\r\n                                Time\r\n                              </th>\r\n                              <th>\r\n                                Labor Rate $/HR\r\n                              </th>\r\n                              <th>\r\n                                Labor Cost\r\n                              </th> -->\r\n                              <th>\r\n                                Standard\r\n                              </th>\r\n                              <th>\r\n                                Value\r\n                              </th>\r\n                              <th>\r\n                                Member\r\n                              </th>\r\n                              <!-- <th>\r\n                                Active\r\n                              </th>\r\n                              <th>\r\n                                Last Modified By\r\n                              </th> -->\r\n                            </tr>\r\n                          </thead>\r\n\r\n                          <tbody>\r\n\r\n                            <!-- <span *ngIf=\"priceBookServiceResponse\">  -->\r\n                            <tr *ngFor=\"let data of priceBookListDetails\">\r\n                              <!-- <tr> -->\r\n                              <td class=\"center\">\r\n                                <!-- <a class=\"btn btn-xs btn-success  \" (click)=\"viewItem(data.serviceId)\">\r\n                                    <i class=\"fa fa-eye\"></i> -->\r\n                                <!-- <a class=\"btn btn-xs btn-success  \" (click)=\"viewItem(data.serviceId)\">\r\n                                  <i class=\"fa fa-eye\"></i>\r\n                                </a> -->\r\n\r\n                                <a type=\"submit\" class=\"btn btn-blue\" data-toggle=\"modal\" data-backdrop=\"false\"\r\n                                  data-target=\"#viewPriceBook\" (click)=\"viewServicePriceBookService(data)\"><i\r\n                                    class=\"fa fa-eye\"></i>\r\n                                </a>\r\n                              </td>\r\n                              <td>\r\n                                {{data.serviceId}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.category}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.subCategory}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.description}}\r\n                              </td>\r\n                              <!-- <td>\r\n                                  ${{data.materialCost}}\r\n                                </td>\r\n                                <td>\r\n                                  ${{data.truckOperatingCost}}\r\n                                </td>\r\n                                <td>\r\n                                  ${{data.leadCost}}\r\n                                </td>\r\n                                <td>\r\n                                  ${{data.totalCost}}\r\n                                </td>\r\n                                <td>\r\n                                  {{data.labourHours}}\r\n                                </td>\r\n                                <td>\r\n                                  ${{data.laborRate}}\r\n                                </td>\r\n                                <td>\r\n                                  ${{data.laborCost}}\r\n                                </td> -->\r\n                              <td>\r\n                                {{data.standard}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.value}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.member}}\r\n                              </td>\r\n                              <!-- <td class=\"item\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" checked=\"checked\">\r\n                                    <span class=\"text\"></span>\r\n                                  </label>\r\n                                </td>\r\n                                <td>\r\n                                  {{data.createdOn}}\r\n                                </td> -->\r\n                            </tr>\r\n                            <!-- </span> -->\r\n\r\n                          </tbody>\r\n\r\n                        </table>\r\n                        <div *ngIf=\"!priceBookSearchData\">\r\n                          <span\r\n                            style=\"text-align:center;color:red;margin-right:30em;margin-left: 30em;font-size: larger;margin-top:4em;\">NO\r\n                            RECORDS FOUND </span>\r\n                        </div>\r\n                        <div *ngIf=\"priceBookSearchData\">\r\n                          <span\r\n                            style=\"text-align:center;color:red;margin-right:30em;margin-left: 30em;font-size: larger;margin-top:4em;\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <br />\r\n                      <div *ngIf=\"priceBookSearchData\">\r\n                        Total Count of priceBook Records : {{totalPb}}\r\n                      </div>\r\n                      <div *ngIf=\"!priceBookSearchData\">\r\n                        Total Count of priceBook Records : {{totalPb}}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <!-- <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\"\r\n                        (click)=\"saveSelectedInventory()\"><i class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div> -->\r\n                  <div class=\"col-lg-4 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"\r\n                        (click)=\"cancelSelectedInventory()\"><i class=\"fa fa-arrow-left\"></i>\r\n                        Back to Add Item List</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /Select Inventory Popup -->\r\n\r\n        <!-- View Price Book Popup  Popup -->\r\n        <div id=\"viewPriceBook\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>View Pricebook Item</b></span>\r\n                </div>\r\n                <div class=\"modal-body\" *ngIf=\"viewPriceBookServiceResponse\">\r\n                  <br />\r\n                  <form class=\"form-horizontal\" role=\"form\">\r\n\r\n                    <!-- <div class=\"row\">\r\n                            <div class=\"col-sm-12\"> -->\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"col-sm-5\">\r\n                          <div class=\"form-group\">\r\n                            <div class=\"widget-body text-center\">\r\n                              <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\r\n\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n                        <div class=\"col-sm-1\"></div>\r\n                        <div class=\"col-sm-3\">\r\n                          <div class=\"form-group\">\r\n                            <!-- <h3><b>{{priceBookListDetailsService.title}}</b></h3> -->\r\n                            <p>{{priceBookListDetailsService.category}}/{{priceBookListDetailsService.subCategory}}</p>\r\n                            <!-- <p>PERFORMANCE, WATER, CONSERVATION, QUALITY</p> -->\r\n                            <!-- <p>Pressure-Assested Technology offersthe only true high-performance, low\r\n                            consumer expectations.</p> -->\r\n                            <p>{{priceBookListDetailsService.serviceDescription}}\r\n                            </p><br />\r\n                            <h5><b>Installation Instructions</b></h5>\r\n                            <p>{{priceBookListDetailsService.instructions}}</p>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"col-sm-12 button-center\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <input name=\"apply\" type=\"radio\" class=\"colored-success\">\r\n                                <button type=\"submit\" (click)=\"standardButton(priceBookListDetailsService.serviceId)\"\r\n                                  class=\"btn btn-warning btn-lg btn-block\">\r\n                                  Standard<br />\r\n                                  <h4><b>${{priceBookListDetailsService.standard}}</b></h4>\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-12 button-center\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <input name=\"apply\" type=\"radio\" class=\"colored-success\">\r\n                                <button type=\"submit\" (click)=\"valueButton(priceBookListDetailsService.serviceId)\"\r\n                                  class=\"btn btn-primary btn-lg btn-block\">\r\n                                  Value<br />\r\n                                  <h4><b>${{priceBookListDetailsService.value}}</b></h4>\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-12 button-center\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <input name=\"apply\" type=\"radio\" class=\"colored-success\">\r\n                                <button type=\"submit\" (click)=\"memberButton(priceBookListDetailsService.serviceId)\"\r\n                                  class=\"btn btn-magenta btn-lg btn-block\">\r\n                                  Member<br />\r\n                                  <h4><b>${{priceBookListDetailsService.member}}</b></h4>\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <br><br>\r\n\r\n\r\n\r\n\r\n                    <br />\r\n                    <!-- <div class=\"row\">\r\n                      <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                          <button type=\"submit\" (click)=\"addToEstimateButton()\" class=\"btn btn-lg btn-block btn-gray\"><i\r\n                              class=\"fa fa-file-o\"></i>\r\n                            Add to Estimate\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3 button-center\">\r\n                        <div class=\"form-group\">\r\n                          <button type=\"submit\" (click)=\"addToInvoiceButton()\" class=\"btn btn-lg btn-block btn-gray\"><i\r\n                              class=\"fa fa-dollar\"></i>\r\n                            Add to Invoice\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                    </div> -->\r\n\r\n                    <!-- <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter the Tech Notes\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div> -->\r\n\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3 button-center\">\r\n                        <div class=\"form-group\">\r\n                          <button type=\"submit\" (click)=\"backToPriceBook()\" class=\"btn btn-blue\"><i\r\n                              class=\"fa fa-arrow-left\"></i>\r\n                            Back to PriceBook\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3 button-center\">\r\n                        <div class=\"form-group\">\r\n                          <button type=\"submit\" data-toggle=\"modal\" data-target=\"#myModal\" (click)=\"viewDocument()\"\r\n                            class=\"btn btn-gray\"><i class=\"fa fa-file\"></i>\r\n                            View Documents\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <!-- </div>\r\n                          </div> -->\r\n                    <!-- Modal- STARTS HERE -->\r\n                    <div class=\"backdrop\" [ngStyle]=\"{'display':displayFileModal}\"></div>\r\n                    <div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{'display':displayFileModal}\">\r\n                      <!-- .modal-dialog - Starts Here -->\r\n                      <div class=\"modal-dialog\"\r\n                        style=\"overflow-y: scroll; max-height:85%; width: 840px; margin-top: 50px; margin-bottom:50px;\">\r\n                        <!-- .modal-content - Starts Here -->\r\n                        <div class=\"modal-content\">\r\n                          <!-- .modal-header - Starts Here -->\r\n                          <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"onCloseHandled()\">\r\n                              <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                          </div>\r\n                          <!-- .modal-header - Ends Here -->\r\n                          <!-- .modal-body - Starts Here -->\r\n                          <!-- <modal class=\"custom-modal-2\"> -->\r\n                          <div class=\"modal-body\">\r\n                            <pdf-viewer [src]=\"imagePreview\" [render-text]=\"true\" style=\"display: block;\"></pdf-viewer>\r\n                            <!-- <object [data]=\"imagePreview\" type=\"application/pdf\">\r\n<embed [src]=\"imagePreview\" type=\"application/pdf\" />\r\n</object> -->\r\n                            <!-- <iframe [src]=\"imagePreview | safe\"></iframe> -->\r\n                          </div>\r\n                          <!-- </modal> -->\r\n                          <!-- .modal-body - Ends Here -->\r\n                          <!-- .modal-footer - Starts Here -->\r\n                          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                          <!-- .modal-footer - Ends Here -->\r\n                        </div>\r\n                        <!-- .modal-content - Ends Here -->\r\n                      </div>\r\n                      <!-- .modal-dialog - Starts Here -->\r\n                    </div>\r\n\r\n\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\" (click)=\"saveCustomMaterial()\"><i\r\n                          class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i>\r\n                        Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /View Price Book Popup -->\r\n        <!-- Edit Custom Labor Popup -->\r\n        <div id=\"editCustomLaborCostModal\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-md\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Edit Custom Labor </b></span>\r\n                </div>\r\n                <form [formGroup]=\"editCustomLaborCost\">\r\n                  <div class=\"modal-body\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"itemLbl\">\r\n                            <b>Item</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" readonly class=\"form-control\" placeholder=\"\" formControlName=\"item\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"typeLbl\">\r\n                            <b>Type</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <select class=\"form-control\" formControlName=\"type\" required [(ngModel)]=\"roleName\"\r\n                            (change)=\"changeRole(roleName)\">\r\n                            <option value=\"\">Select</option>\r\n                            <option *ngFor=\"let data of roleData\" value={{data.roleName}}>\r\n                              {{data.roleName}}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"descriptionLbl\">\r\n                            <b>Staff Name</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <select class=\"form-control\" formControlName=\"staffId\" required [(ngModel)]=\"staffId\"\r\n                              (change)=\"getDetails(staffId)\">\r\n                              <option value=\"\">Select</option>\r\n                              <option *ngFor=\"let data of staffData\" value={{data.employeeId}}>\r\n                                {{data.firstName}}-{{data.lastName}}\r\n                              </option>\r\n                            </select>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"descriptionLbl\">\r\n                            <b>Name</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"name\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"quantityLbl\">\r\n                            <b>Quantity</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" placeholder=\"\" class=\"form-control input-sm\" formControlName=\"quantity\"\r\n                              [dropSpecialCharacters]=\"false\" mask=\"0*.00\" [(ngModel)]=\"quantityValue\"\r\n                              (ngModelChange)=\"getQuantityValue(quantityValue)\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"quantityLbl\">\r\n                            <b>Units</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" class=\"form-control\" readonly placeholder=\"\" formControlName=\"units\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"quantityLbl\">\r\n                            <b>Bill Rate($/hr)</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" readonly placeholder=\"\" formControlName=\"priceMarkUp\"\r\n                              value=\"{{laborCost}}\" class=\"form-control \">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"quantityLbl\">\r\n                            <b>Sub Total</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" readonly placeholder=\"\" formControlName=\"subTotal\"\r\n                              value=\"{{subTotalValue}}\" class=\"form-control \">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </form>\r\n                <!-- </div> -->\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"col-lg-3\">\r\n                </div>\r\n                <div class=\"col-lg-3 button-center\">\r\n                  <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\"\r\n                    (click)=\"updateCustomLaborMaterial()\"><i class=\"fa fa-check\"></i>\r\n                    Update</button>\r\n                </div>\r\n                <div class=\"col-lg-3 button-center\">\r\n                  <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i>\r\n                    Cancel</button>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- /Edit Custom Labor Popup -->\r\n        <!-- Custom Labor & Material Popup -->\r\n        <div id=\"customLaborAndMaterial\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Custom Labor & Material</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <br />\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                          <button type=\"submit\" class=\"btn btn-gray\" (click)=\"addCustomLaborOrMaterial()\">\r\n                            <i class=\"fa fa-user-plus\"></i>Add Custom Labor/Material</button>\r\n                        </div>\r\n                      </div><br />\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-bordered table-striped table-condensed \">\r\n                          <thead class=\" bordered-purple\">\r\n                            <tr>\r\n                              <th>\r\n                                Item #\r\n                              </th>\r\n                              <th>\r\n                                Type\r\n                              </th>\r\n                              <th>\r\n                                Qty\r\n                              </th>\r\n                              <th>\r\n                                Units\r\n                              </th>\r\n                              <th>\r\n                                Description\r\n                              </th>\r\n                              <th>\r\n                                Vendor\r\n                              </th>\r\n                              <th>\r\n                                Unit Cost\r\n                              </th>\r\n                              <th>\r\n                                Rate (Cost Plus Mark Up)\r\n                              </th>\r\n                              <th>\r\n                                Extended Cost With Mark Up\r\n                              </th>\r\n                            </tr>\r\n                            <!-- <tr>\r\n                                    <th width=\"10%\">\r\n                                      Item #\r\n                                    </th>                                      \r\n                                    <th width=\"19%\">\r\n                                      Type\r\n                                    </th>\r\n                                    <th width=\"10%\">\r\n                                      QTY\r\n                                    </th>\r\n                                    <th width=\"13%\">\r\n                                      Units\r\n                                    </th>\r\n                                    <th width=\"20%\"  >\r\n                                      Description\r\n                                    </th>\r\n                                    <th width=\"18%\">\r\n                                      Vendor\r\n                                    </th>\r\n                                    <th width=\"5%\">\r\n                                    Unit Cost\r\n                                    </th>\r\n                                    <th width=\"5%\">\r\n                                      Rate <br/>\r\n                                     (Cost+MarkUp)\r\n                                    </th>\r\n                                    <th width=\"5%\">\r\n                                             Extended Cost With Mark Up\r\n                                    </th>                                    \r\n                           \r\n                                    <!-- <th>\r\n                                                  Delete\r\n                                                </th> \r\n                                  </tr> -->\r\n                          </thead>\r\n                          <tbody>\r\n                            <!-- Row 1 -->\r\n                            <tr>\r\n                              <td>1</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"6\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"6 Inch PVC Connector\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$50.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$65.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$390.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 1 -->\r\n                            <!-- Row 2 -->\r\n                            <tr>\r\n                              <td>2</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"3\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"6 Inch Elbow\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$25.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$35.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$105.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 2 -->\r\n                            <!-- Row 3 -->\r\n                            <tr>\r\n                              <td>3</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Sand and Concrete\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$225.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$225.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 3 -->\r\n                            <!-- Row 4 -->\r\n                            <tr>\r\n                              <td>4</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"16\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Master Tech\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$165.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$165.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$2640.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 4 -->\r\n                            <!-- Row 5 -->\r\n                            <tr>\r\n                              <td>5</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"Raul dgging 3x4' ft hole\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 5 -->\r\n                            <!-- Row 6 -->\r\n                            <tr>\r\n                              <td>6</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                  value=\"Jose G, dgging tunnel to kitchen\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 6 -->\r\n                            <!-- Row 7 -->\r\n                            <tr>\r\n                              <td>7</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Permit\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$100.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 7 -->\r\n                            <!-- Row 8 -->\r\n                            <tr>\r\n                              <td>8</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"70ft, 6 Inch trenchless pull\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$450.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$675.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$675.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 8 -->\r\n                            <!-- Row 9 -->\r\n                            <tr>\r\n                              <td>9</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"Subcontracted Service\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 9 -->\r\n                            <!-- Row 10 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Material Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $720\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 10 -->\r\n                            <!-- Row 11 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Material Tax</b>\r\n                              </td>\r\n                              <td>\r\n                                $0.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 11 -->\r\n                            <!-- Row 12 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n\r\n                                <b>Labor Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $3,480.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 12 -->\r\n                            <!-- Row 13 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Misc Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $1,125.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 13 -->\r\n                            <!-- Row 13 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Total Project Direct Cost</b>\r\n                              </td>\r\n                              <td>\r\n                                $5,325.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 13 -->\r\n\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\" (click)=\"saveSelectedLabor()\"><i\r\n                          class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\" (click)=\"cancelSelectedLabor()\"><i\r\n                          class=\"fa fa-times\"></i>\r\n                        Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div> <!-- / .modal-content -->\r\n            </div>\r\n          </div>\r\n          <!-- /Custom Labor & Material Popup -->\r\n\r\n\r\n\r\n        </div>\r\n        <!-- /Page Body -->\r\n      </div>\r\n      <!-- /Page Content -->\r\n    </div>\r\n    <!-- /Page Container -->\r\n  </div>\r\n  <!-- /Main Container -->"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.scss":
/*!************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.scss ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-title {\n  color: #5db2ff;\n  border-bottom: 1px dashed #5db2ff;\n  /*display: block;\r\n     padding: 8px 0;*/\n  font-size: 15px;\n  font-weight: bold;\n  /*  color: #5DB2FF;\r\n    margin-bottom: 15px;*/ }\n\n.mandatory {\n  font-weight: bold;\n  color: #FF0000;\n  font-size: 16px; }\n\n.hr-gray-thick {\n  border-top: 3px solid #333 !important; }\n\n.hr-gray {\n  border-top: 1px solid #333 !important; }\n\ninput {\n  color: black; }\n\n.mock {\n  color: red;\n  text-align: center; }\n\n.mock-conf {\n  color: green;\n  text-align: center; }\n\n.inprogress {\n  color: orangered;\n  text-align: center; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.checkbox, .radio {\n  position: relative;\n  display: block;\n  margin-top: 0px !important;\n  margin-bottom: 0px !important; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.button-center {\n  text-align: center; }\n\n.button-left {\n  text-align: left; }\n\n.button-right {\n  text-align: right; }\n\n.accordion.panel-group .panel-heading .accordion-toggle.collapsed {\n  color: #5db2ff !important;\n  background-color: #333 !important;\n  border-bottom: 1px solid #5db2ff !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:hover:after {\n  color: #FFF !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle {\n  color: #5db2ff !important;\n  background-color: #333 !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:after {\n  color: #5db2ff !important; }\n\n.center {\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.item {\n  text-align: center; }\n\n.body {\n  background-color: white; }\n\n.header-title {\n  font-size: 18px !important; }\n\n.form-heading {\n  font-size: 18px !important; }\n\n/* Buttons */\n\n.btn {\n  font-size: 14px !important;\n  font-weight: bold !important; }\n\n/* /Buttons */\n\n/* Line */\n\n.hr-blue {\n  border-top: 1px solid #869eb4 !important; }\n\n/* /Line */\n\n/* Textbox */\n\n.formcontrol, select {\n  padding-left: 0px !important;\n  padding-right: 0px !important;\n  border-left-width: 1px !important;\n  border-right-width: 1px !important; }\n\n/* /Textbox */\n\n/* Atkore logo */\n\n.text {\n  text-align: center; }\n\n.text img {\n  width: 70px;\n  height: 80px; }\n\n/* /Atkore logo */\n\n/* Labels */\n\n.label {\n  padding: 5px !important; }\n\nlabel .mandatory {\n  color: red;\n  font-size: 16px !important;\n  font-weight: bold !important; }\n\n/* /Labels */\n\n/* Tables    */\n\n.table > tbody > tr > td {\n  padding: 2px !important;\n  line-height: 1.257143 !important;\n  vertical-align: middle; }\n\n/* /Tables    */\n\n/* Vertical Text */\n\n.testrotate p {\n  line-height: 145px !important;\n  font-size: 15px; }\n\n.testrotate .testq {\n  line-height: 483px !important;\n  font-size: 15px; }\n\n.testrotate .testr {\n  line-height: 100px !important;\n  font-size: 15px; }\n\n.testrotate .testp {\n  line-height: 170px !important;\n  font-size: 15px; }\n\n/* /Vertical Text */\n\n/* Textbox input */\n\n/* /Textbox input */\n\n.table-scrollable > .table > thead > tr > th {\n  white-space: wrap !important; }\n\n.form-control[_ngcontent-c3] {\n  padding: 4px 3px !important; }\n\n/* Pin Gap Diagram */\n\n.row .pin img {\n  width: 230px;\n  height: 240px;\n  margin-left: 30px !important;\n  margin-right: auto !important; }\n\n/* /Pin Gap Diagram */\n\n.gap {\n  text-align: center; }\n\n/* Bolt torque specifications */\n\n.adjust {\n  margin-left: 10px !important;\n  margin-bottom: 1040px !important; }\n\n/* /Bolt torque specifications */\n\n/* Imageupload    */\n\ntd .img-adjust {\n  margin-left: auto !important;\n  margin-right: auto !important; }\n\n/* /Imageupload    */\n\n.alert-heading {\n  font-size: 12px; }\n\n.align-text-top {\n  vertical-align: top !important; }\n\n.text-big {\n  font-size: 16px !important;\n  font-weight: bold !important; }\n\n.form-title {\n  color: #5db2ff;\n  border-bottom: 1px dashed #5db2ff;\n  /*display: block;\r\n     padding: 8px 0;\r\n     border-bottom: 1px dashed #7e3794;*/\n  font-size: 15px;\n  font-weight: bold;\n  /*  color: #5DB2FF;\r\n    margin-bottom: 15px;*/ }\n\n.mandatory {\n  font-weight: bold;\n  color: #FF0000;\n  font-size: 16px; }\n\n.hr-gray-thick {\n  border-top: 3px solid #333 !important; }\n\n.hr-gray {\n  border-top: 1px solid #333 !important; }\n\ninput {\n  color: black; }\n\n.mock {\n  color: red;\n  text-align: center; }\n\n.mock-conf {\n  color: green;\n  text-align: center; }\n\n.inprogress {\n  color: orangered;\n  text-align: center; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.text-center {\n  text-align: center; }\n\n.checkbox-center {\n  position: relative;\n  display: block;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.blue {\n  background-color: #5db2ff !important;\n  color: #333 !important;\n  font-weight: bold; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.accordion.panel-group .panel-body {\n  background-color: #fff !important;\n  border-top: none !important;\n  border-left: 2px solid #eee;\n  color: #262626 !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:hover:after {\n  color: #FFF !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle {\n  color: #5db2ff !important;\n  background-color: #333 !important;\n  border-bottom: 1px solid #5db2ff !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:after {\n  color: #5db2ff !important; }\n\n.icon1 {\n  height: auto;\n  width: 120px;\n  width: -moz-fit-content;\n  width: -webkit-fit-content;\n  width: fit-content;\n  font: 400 16px/1.4 \"Source Code Pro\";\n  font-variant: small-caps;\n  padding: 10px;\n  border: 1px solid #103683;\n  border-radius: 10px; }\n\n.text-blue {\n  color: #5db2ff; }\n\n.btn-xs-two {\n  padding: 2px 7px !important;\n  margin: 2px 0px !important; }\n\n.modal-header {\n  padding: 0px 0px 0px 0px !important; }\n\n.well.with-footer {\n  padding-bottom: 10px !important; }\n\n.modal-footer {\n  border-top: 3px solid #333 !important; }\n\n.table-scrollable {\n  width: 100%;\n  height: 200px !important;\n  overflow-x: auto;\n  overflow-y: auto !important;\n  border: 1px solid #ddd; }\n\n.modal-dialog {\n  width: 1200px !important;\n  margin: 40px auto !important; }\n\n#form1 {\n  display: none; }\n\n.form-control, select {\n  font-size: 13px;\n  color: #000000;\n  background-color: #fbfbfb;\n  border: 1px solid #d5d5d5;\n  padding: 6px 12px; }\n\n.text-right {\n  text-align: right; }\n\ninput[type=\"file\"] {\n  display: none; }\n\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer; }\n\n.uploadImage {\n  margin-left: 3em; }\n\n.imageNamecss {\n  height: 140px;\n  width: 220px; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.ts ***!
  \**********************************************************************************/
/*! exports provided: AddEstimate1Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddEstimate1Component", function() { return AddEstimate1Component; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _utilities_beyond__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utilities/beyond */ "./src/utilities/beyond.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var _global_global__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../global/global */ "./src/global/global.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm5/ngx-spinner.js");
/* harmony import */ var ng2_completer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ng2-completer */ "./node_modules/ng2-completer/esm5/ng2-completer.js");
/* harmony import */ var ng4_auto_complete__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ng4-auto-complete */ "./node_modules/ng4-auto-complete/index.js");
/* harmony import */ var ngx_gallery__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-gallery */ "./node_modules/ngx-gallery/bundles/ngx-gallery.umd.js");
/* harmony import */ var ngx_gallery__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(ngx_gallery__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _utilities_pdfmake_script_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../utilities/pdfmake.script.service */ "./src/utilities/pdfmake.script.service.ts");
/* harmony import */ var _global_config__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../global/config */ "./src/global/config.ts");
















var AddEstimate1Component = /** @class */ (function () {
    // priceBookListDetails: any;
    //priceBookServiceResponse: boolean;
    //urls: any = []
    function AddEstimate1Component(beyond, router, activatedRoute, formBuilder, http, toastr, datePipe, spinner, completerService, autoCompleteService, el, ngZone, pdfMakeService) {
        this.beyond = beyond;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.formBuilder = formBuilder;
        this.http = http;
        this.toastr = toastr;
        this.datePipe = datePipe;
        this.spinner = spinner;
        this.completerService = completerService;
        this.autoCompleteService = autoCompleteService;
        this.el = el;
        this.ngZone = ngZone;
        this.pdfMakeService = pdfMakeService;
        this.regex = new RegExp(/^\d*\.?\d{0,2}$/g);
        this.priceBookListDetails = [];
        this.priceBookServiceResponse = true;
        this.selectedPriceBook = [];
        this.selectedInventory = [];
        this.customSelectedInventory = [];
        this.pricebookTemp = [];
        this.inventoryTemp = [];
        this.listPriceBook = 0;
        this.showTable = false;
        this.listPriceInventory = 0;
        this.servicePriceBook = [];
        this.priceBookListValue = 0;
        this.viewCLMDetails = [];
        this.subTotalValue = 0;
        this.quant = 0;
        this.quantCM = 0;
        this.customMaterialListValue = 0;
        this.customLaborListValue = 0;
        this.priceCM = 0;
        this.priceCLM = 0;
        this.taxValue = 0;
        this.taxFinalValue = 0;
        this.promoValue = 0;
        this.otherPromoValue = 0;
        this.totalDiscount = 0;
        this.paymentMethodValue = 0;
        this.reqDisc = 0;
        this.listPrice = 0;
        this.markUpLaborValue = 0;
        this.listPriceOfLabor = 0;
        this.listPriceLaborMarkUp = 0;
        this.paymentModeValue = 0;
        this.creditCardPercentage = 0;
        this.totalValueAfterDiscounts = 0;
        this.valueBeforeDicount = 0;
        this.desiredProfitValue = 0;
        this.cmCommission = 0;
        this.channelManagerCommValue = 0;
        this.directJobCostValue = 0;
        this.cmPMValue = 0;
        this.desiredPercentage = 0;
        this.estimatedGrossProfitValue = 0;
        this.overHeadEstimateCostValue = 0;
        this.estimatedTechComm = 0;
        this.workManEstComm = 0;
        this.employeeTaxComm = 0;
        this.employeeCommTaxInc = 0;
        this.afterDiscount = 0;
        this.laborMarkUpValue = 0;
        this.materialMarkUp = 0;
        this.customLaborMarkUpListValue = 0;
        this.customMaterialMarkUpListValue = 0;
        this.filesToUpload = [];
        this.urls = [];
        this.imagePreview = "assets/img/no-image.png";
        this.imageArray = [];
        this.netProfitLabor = 0;
        this.estimatedMarkUpProfit = 0;
        this.netProfit = 0;
        this.netProfitPercent = 0;
        this.editForm = false;
        this.empCommission = 0;
        this.loginStaffCommission = 0;
        this.editListPriceMarkUp = 0;
        this.editSubTotalCM = 0;
        this.taxPercentCal = 0;
        this.totalMaterialCostWithTax = 0;
        this.totalEstPriceBeforeDisc = 0;
        this.empCommissionType = "NA";
        this.laborCost = 0;
        // customLaborListValue: any;
        this.priceBookHoursValue = 0;
        this.customLaborFieldTechHours = 0;
        this.sumOfPriceBookCustomLaborHours = 0;
        this.workingType = 0;
        this.totalHoursWithWorkingType = 0;
        this.estTechComm = 0;
        this.totalEstTechPay = 0;
        this.estNetProfit = 0;
        this.estNetProfitPercent = 0;
        this.netProfitValue = false;
        this.grossSaleValue = true;
        this.channelManagerCommValueNetProfit = 0;
        this.estNetProfitWithCM = 0;
        this.estNetProfitPercentWithCM = 0;
        this.netProfitMinusCheck = false;
        this.toolNameValue = [];
        this.partNameValue = [];
        this.categoryName = [];
        this.quantityValue = 0;
        this.promotionData = [];
        this.priceBookData = [];
        this.subcategoryData = [];
        this.invantoryCat = [];
        this.invantorysubCat = [];
        this.customMaterialListDetails = [];
        this.customMaterialData = [];
        this.customMaterialData1 = [];
        this.inventoryData = [];
        this.discountAmount = 0;
        this.totalMarkupValue = 0;
        this.dataGallery = false;
        this.galleryImages = [];
        this.bellerImage1 = "assets/img/toi.jpg";
        this.bellerImage2 = "assets/img/slideimg1.png";
        this.bellerImage3 = "assets/img/plumbing/pipe1.png";
        this.bellerImage4 = "assets/img/plumbing/plumbing1.png";
        this.arr = [];
        this.result = [];
        this.imageNameData = [];
        this.newArray = [];
        this.orginalArray = [];
        this.imageName = [];
        this.imageNames = [];
        this.imageValue = [];
        // filesToUpload: any = [];
        this.progressShow1 = false;
        this.uploadFlag = false;
        this.progressHide1 = false;
        this.displyFlag = false;
        this.img1 = false;
        this.percentage1 = 0;
        this.pdfMakeService.load('pdfMake', 'vfsFonts');
    }
    ;
    AddEstimate1Component.prototype.ngOnInit = function () {
        this.beyond.beyondAdmin();
        this.loginData = JSON.parse(localStorage.getItem("login"));
        // this.workOrderData = localStorage.getItem('workorderdetails')
        this.workOrderNum = this.activatedRoute.snapshot.params['workOrderNumber'];
        this.customerData();
        this.getListOfStates();
        this.date = new Date();
        this.year = this.date.getFullYear();
        this.month = this.date.getMonth() + 1;
        this.currentDate = this.date.getDate();
        this.fullDate = this.currentDate + "-" + this.month + "-" + this.year;
        this.myDate = this.datePipe.transform(this.date, 'yyyy-MM-dd');
        // this.typeData = this.activatedRoute.snapshot.params['type']
        //this.estimateNumber = this.route.snapshot.params['estNo']
        //  //console.log("typeData" + this.typeData)
        // //console.log("estimateNumber"+this.estimateNumber)
        //this.getImagesGallery()
        this.galleryOptions = [
            {
                width: '400px',
                height: '400px',
                thumbnailsColumns: 4,
                imageAnimation: ngx_gallery__WEBPACK_IMPORTED_MODULE_12__["NgxGalleryAnimation"].Slide,
                previewZoom: true,
                previewRotate: true
            },
            {
                breakpoint: 800,
                width: '70%',
                height: '600px',
                imagePercent: 80,
                thumbnailsPercent: 20,
                thumbnailsMargin: 20,
                thumbnailMargin: 20
            },
            {
                breakpoint: 400,
                preview: false
            }
        ];
        this.addEstimate = this.formBuilder.group({
            estimateNum: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            dateCreated: [''],
            modifiedOn: [''],
            channelManager: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            splitRate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            primaryTech: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            secondaryTech: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerEmailId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerFirstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerLastName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerPhoneNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerPhoneType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerAddress: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerState: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerCity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerZipCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerSendInvoiceBy: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerInvoiceEmail: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            poNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerSince: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            crossSt1: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            crossSt2: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerSource: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerPaymentMethod: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            expectedStartDateLbl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            expectedEndDate: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            frequency: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            leadQuantity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            creditCardRequired: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerAdminNotes: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobEmail: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobPhoneNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobPhoneType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobAddress: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobState: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobCity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobZipCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paymentMethods: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paymentValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            newPromoCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            otherPromoCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            reqDiscount: [10, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            instructions: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobSiteNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            estimateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            privateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            setReminder: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            desiredProfitInEA: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            channelManagerCommission: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            otherCost: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            estimatedTechComm: ['0', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            employeeTaxCompany: ['0', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            worksmanCompType: ["NO", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            empTaxCompType: ["NO", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            pricebookDescription: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            materialGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            laborGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            requireManagerApproval: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
        this.priceBookSearch = this.formBuilder.group({
            category: [''],
            subCategory: [''],
            description: [''],
        });
        this.addCustomLaborMaterial = this.formBuilder.group({
            customLaborMaterial: this.formBuilder.array([this.createLaborMaterial()])
        });
        this.editCustomLaborCost = this.formBuilder.group({
            item: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            staffId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            staffName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            quantity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            units: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            priceMarkUp: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            subTotal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
    };
    // THIS IS FOR AUTO POPULATING THE DATA FROM WORK ORDER
    AddEstimate1Component.prototype.customerData = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewStaffWorkOrder/' + this.workOrderNum, options)
            .subscribe(function (data) {
            var woResponse = data.json();
            if (woResponse.status == 200) {
                _this.workOrderDescriptionData = woResponse.response[0];
                _this.billingAddressData = woResponse.billingAddress[0];
                _this.serviceAddressData = woResponse.serviceAddress[0];
                ////console.log("serviceAddressData" + JSON.stringify(this.serviceAddressData.doNotServe))
                _this.techData = woResponse.techRespond[0];
                console.log("pmcode" + _this.workOrderDescriptionData.promoCodeDisc);
                //console.log("Discount" + this.workOrderDescriptionData.promoCodeDisc)
                if (_this.workOrderDescriptionData.promoCodeDisc == null) {
                    _this.promoCode = "NA";
                }
                else {
                    _this.promoCode = _this.workOrderDescriptionData.promoCodeDisc.split("--")[0];
                }
                //console.log("promo" + this.promoCode)
                _this.addEstimate = _this.formBuilder.group({
                    estimateNum: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    dateCreated: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    channelManager: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    splitRate: ["None", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    taxPercentage: [],
                    taxPercentageValue: [],
                    channelManagerId: [],
                    managerId: [],
                    primaryTech: [_this.techData.addPrimaryTech, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    secondaryTech: [_this.techData.secondaryTech, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerName: [_this.billingAddressData.customerName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerEmailId: [_this.billingAddressData.emailId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerFirstName: [_this.billingAddressData.firstName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerLastName: [_this.billingAddressData.lastName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerPhoneNumber: [_this.billingAddressData.phoneNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerPhoneType: [_this.billingAddressData.phoneType, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerAddress: [_this.billingAddressData.address, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerState: [_this.billingAddressData.state, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerCity: [_this.billingAddressData.city, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerZipCode: [_this.billingAddressData.zipCode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerSendInvoiceBy: [_this.billingAddressData.sendInvoiceBy, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerInvoiceEmail: [_this.billingAddressData.invoiceEmail, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    poNumber: [_this.billingAddressData.poNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerSince: [_this.serviceAddressData.customerSince, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerPaymentMethod: [_this.billingAddressData.paymentMethod, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    crossSt1: [_this.serviceAddressData.crossSt1, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    crossSt2: [_this.serviceAddressData.crossSt2, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    doNotServe: [_this.serviceAddressData.doNotServe, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerSource: [_this.workOrderDescriptionData.source, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    frequency: [_this.workOrderDescriptionData.makeReoccuring, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    leadQuantity: ["None", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerAdminNotes: [_this.serviceAddressData.adminNotes, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    expectedStartDateLbl: [_this.workOrderDescriptionData.startDate + " " + _this.workOrderDescriptionData.startTime, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    expectedEndDate: [_this.workOrderDescriptionData.endDate + " " + _this.workOrderDescriptionData.endTime, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobTitle: [_this.workOrderDescriptionData.jobTitle, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobEmail: [_this.serviceAddressData.emailId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobPhoneNumber: [_this.serviceAddressData.phoneNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    // jobPhoneType: ['', Validators.required],
                    jobAddress: [_this.serviceAddressData.address, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobState: [_this.serviceAddressData.state, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobCity: [_this.serviceAddressData.city, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobZipCode: [_this.serviceAddressData.zipCode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    newPromoCode: [_this.promoCode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    otherPromoCode: ['0', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    paymentMethods: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    paymentValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    reqDiscount: ['10', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    desiredProfitInEA: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    channelManagerCommission: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    otherCost: ['0', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    estimatedTechComm: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    employeeTaxCompany: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    worksmanCompType: ["NO", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    empTaxCompType: ["NO", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    instructions: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobSiteNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    estimateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    privateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    materialGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    pricebookDescription: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    laborGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    requireManagerApproval: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    setReminder: ["None", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                });
                _this.viewPriceBookService();
                _this.getLoginStaffDetails();
                _this.listGroupDetails();
                _this.getCustomMaterialList();
                _this.getEstimateNumber();
                _this.getPriceBookServiceList();
                _this.customMaterialList();
                _this.customLaborMaterialList();
                _this.getInvantoryCategory();
                _this.listPaymentMethods();
                _this.markUp();
                _this.jobRelatedcost();
                _this.overcostRelatedcost();
                _this.getImagesGallery();
                _this.getEmployeeRolesDetails();
                _this.getChannelManagerList();
                _this.getPromoDiscounts();
                _this.viewProzDetails();
                _this.cusResponseStatus = true;
            }
            else {
                _this.cusResponseStatus = false;
            }
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    // THIS IS FOR AUTO POPULATING THE DATA FROM WORK ORDER
    //Date Conversion
    AddEstimate1Component.prototype.dateConversion = function (todayTime) {
        var month = todayTime.getMonth() + 1;
        var day = todayTime.getDate();
        var year = todayTime.getFullYear();
        if (month < 10)
            month = "0" + month;
        if (day < 10)
            day = "0" + day;
        return year + "-" + month + "-" + day;
    };
    //Date Conversion
    AddEstimate1Component.prototype.createLaborMaterial = function () {
        var val = Math.floor(100 + Math.random() * 900);
        this.randamCLMvalue = "CLM" + "-" + val;
        return this.formBuilder.group({
            item: '',
            type: '',
            staffName: '',
            quantity: 0,
            units: '',
            description: '',
            listPrice: '',
            priceMarkUp: '',
            subTotal: 0,
        });
    };
    // Custom Labor Details
    AddEstimate1Component.prototype.addCustomLaborFieldValue = function () {
        this.items = this.addCustomLaborMaterial.get('customLaborMaterial');
        this.items.push(this.createLaborMaterial());
    };
    Object.defineProperty(AddEstimate1Component.prototype, "customLaborMaterialValues", {
        get: function () {
            return this.addCustomLaborMaterial.get('customLaborMaterial');
        },
        enumerable: true,
        configurable: true
    });
    AddEstimate1Component.prototype.deleteMasterServiceFieldValue = function (index) {
        this.customLaborMaterialValues.removeAt(index);
    };
    // Custom Material Details
    AddEstimate1Component.prototype.viewCustomMaterial = function (data) {
        var _this = this;
        ////console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewCustomMaterialService/' + data)
            .subscribe(function (data) {
            var viewCM = data.json();
            ////console.log(viewCM)
            if (viewCM.status == 200) {
                _this.viewCustomMaterialData = viewCM.response[0];
                _this.editCustomMaterialCost = _this.formBuilder.group({
                    itemId: [_this.viewCustomMaterialData.itemId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    category: [_this.viewCustomMaterialData.category, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    subCategory: [_this.viewCustomMaterialData.subCategory, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    type: [_this.viewCustomMaterialData.type, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    quantity: [_this.viewCustomMaterialData.quantity, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    units: [_this.viewCustomMaterialData.units, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    name: [_this.viewCustomMaterialData.name, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    costPrice: [_this.viewCustomMaterialData.costPrice, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    priceMarkUp: [_this.viewCustomMaterialData.priceMarkUp, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    subTotal: [_this.viewCustomMaterialData.subTotal, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                });
                ////console.log(this.viewCustomMaterialData)
            }
            else {
            }
        });
    };
    AddEstimate1Component.prototype.viewCustomLabor = function (data) {
        var _this = this;
        ////console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewCustomLaborService/' + data)
            .subscribe(function (data) {
            var viewCL = data.json();
            ////console.log(viewCL)
            if (viewCL.status == 200) {
                _this.viewCustomLaborData = viewCL.response[0];
                _this.editCustomLaborCost = _this.formBuilder.group({
                    item: [_this.viewCustomLaborData.item, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    type: [_this.viewCustomLaborData.type, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    staffId: [_this.viewCustomLaborData.staffId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    staffName: [_this.viewCustomLaborData.staffName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    quantity: [_this.viewCustomLaborData.quantity, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    units: [_this.viewCustomLaborData.units, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    name: [_this.viewCustomLaborData.name, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    priceMarkUp: [_this.viewCustomLaborData.priceMarkUp, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    subTotal: [_this.viewCustomLaborData.subTotal, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                });
                _this.changeRole(_this.viewCustomLaborData.type);
                _this.getDetails(_this.viewCustomLaborData.staffId);
                console.log(_this.viewCustomLaborData.staffId);
            }
            else {
            }
        });
    };
    AddEstimate1Component.prototype.getQuantityValue = function (quantityValue) {
        console.log(quantityValue);
        console.log(this.laborCost);
        //this.quant = 0
        this.subTotalValue = 0;
        this.quant = quantityValue;
        // this.listPriceLaborMarkUp = this.priceCLM * this.listPriceOfLabor
        // this.listPriceLaborMarkUp = this.laborCostPrice * this.laborListPrice
        //this.laborMarkUpValue = this.laborListPrice - this.laborCostPrice
        this.subTotalValue = this.quant * this.laborCost;
        this.editCustomLaborCost.get("subTotal").setValue(this.subTotalValue);
    };
    AddEstimate1Component.prototype.getPriceValue = function (priceValue) {
        ////console.log(priceValue)
        this.priceCLM = priceValue;
        this.listPriceLaborMarkUp = 0;
        // this.listPriceLaborMarkUp = this.priceCLM * this.laborListPrice
        ////console.log("price value in labor" + this.listPriceLaborMarkUp)
        this.laborMarkUpValue = this.laborListPrice - this.priceCLM;
        this.subTotalValue = 0;
        this.subTotalValue = this.quant * this.laborListPrice;
        ////console.log(this.subTotalValue)
    };
    AddEstimate1Component.prototype.getQuantityCMValue = function (data) {
        // if (data.quantity == "" || data.quantiy == undefined) {
        //   return false
        // }
        this.subTotalValueCM = 0;
        this.quantCM = data.quantity;
        //console.log("costPrice", data.price)
        this.subTotalValueCM = this.quantCM * data.priceMarkUp;
        data.materialSubTotal = this.quantCM * data.priceMarkUp;
        //console.log("subTotal", this.quantCM * data.priceMarkUp)
        //this.subTotalCM = this.quantCM * this.listPrice
        //this.subTotalValueCM = this.subTotalCM.toFixed(2)
        this.customMaterialListValue = 0;
        this.totalMarkupValue = 0;
        for (var i = 0; i < this.customMaterialData1.length; i++) {
            //console.log(this.customMaterialData1)
            this.customMaterialListValue = this.customMaterialListValue + parseInt(this.customMaterialData1[i].materialSubTotal);
            this.totalMarkupValue = this.totalMarkupValue + parseInt(this.customMaterialData1[i].materialSubTotal) - (parseInt(this.customMaterialData1[i].costPrice) * parseInt(this.customMaterialData1[i].quantity));
            //console.log("list Mark up value" + this.totalMarkupValue)
        }
        this.taxPercentCal = Math.round((this.customMaterialListValue) * (this.taxValue / 100) * 100) / 100;
        this.totalMaterialCostWithTax = this.customMaterialListValue + this.taxPercentCal;
        this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue;
    };
    AddEstimate1Component.prototype.getEditQuantityCLValue = function (quantityValue) {
        ////console.log(quantityValue)
        this.quant = 0;
        this.subTotalValue = 0;
        this.quant = quantityValue;
        // this.listPriceLaborMarkUp = this.priceCLM * this.listPriceOfLabor
        this.listPriceLaborMarkUp = this.laborCostPrice * this.listPriceOfLabor;
        this.laborMarkUpValue = this.listPriceLaborMarkUp - this.laborCostPrice;
        this.subTotalValue = this.quant * this.listPriceLaborMarkUp;
    };
    AddEstimate1Component.prototype.getEditPriceCLValue = function (priceValue) {
        ////console.log(priceValue)
        this.priceCLM = priceValue;
        this.listPriceLaborMarkUp = 0;
        this.listPriceLaborMarkUp = this.priceCLM * this.listPriceOfLabor;
        ////console.log("price value in labor" + this.listPriceLaborMarkUp)
        this.laborMarkUpValue = this.listPriceLaborMarkUp - this.priceCLM;
        this.subTotalValue = 0;
        this.subTotalValue = this.quant * this.listPriceLaborMarkUp;
        this.subTotalValue = parseFloat(this.subTotalValue.toFixed(2)); //this.subTotalValue
        ////console.log(this.subTotalValue 
    };
    AddEstimate1Component.prototype.getPriceViewCM = function (cmPrice) {
        ////console.log(cmPrice)
        this.customMaterialPriceValue = 0;
        cmPrice.subTotal = cmPrice.quantity * this.listPrice * cmPrice.listPrice;
        ////console.log("price cm value" + cmPrice.priceMarkUp)
        for (var i = 0; i < this.viewCMDetails.length; i++) {
            this.customMaterialPriceValue = this.customMaterialPriceValue + parseInt(this.viewCMDetails[i].subTotal);
        }
    };
    AddEstimate1Component.prototype.submitCustomLaborMaterial = function () {
        var _this = this;
        for (var i = 0; i < this.addCustomLaborMaterial.get('customLaborMaterial').value.length; i++) {
            for (var j = 0; j < this.viewCLMDetails.length; j++) {
                console.log("st" + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName);
                console.log("estStaff" + this.viewCLMDetails[j].staffId);
                // if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == undefined || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == null && this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == undefined && this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == undefined) {
                //   this.errormsgtype = true
                //   this.errormsg = true
                //   this.errormsgquant = true
                // }
                if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == this.viewCLMDetails[j].staffId && this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == this.viewCLMDetails[j].type) {
                    alert('Staff Already Added');
                    return false;
                }
            }
            if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == undefined || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == null) {
                this.errormsgtype = true;
                this.errormsg = false;
                this.errormsgquant = false;
            }
            else if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == undefined) {
                this.errormsgtype = false;
                this.errormsg = true;
                this.errormsgquant = false;
            }
            else if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == undefined) {
                this.errormsgquant = true;
                this.errormsgtype = false;
                this.errormsg = false;
            }
            else {
                this.errormsgquant = false;
                this.errormsgtype = false;
                this.errormsg = false;
                var Obj = {
                    "proId": this.billingAddressData.proId,
                    "customerId": this.billingAddressData.customerId,
                    "item": this.randamCLMvalue,
                    "type": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type,
                    "staffName": this.staffFirstName,
                    "staffId": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName,
                    "quantity": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity,
                    "units": this.laborHours,
                    "description": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].description,
                    "listPrice": this.laborCostPrice,
                    "priceMarkUp": this.laborCost,
                    "markUpPriceValue": 0,
                    "subTotal": this.subTotalValue.toFixed(2) //this.subTotalValue,
                };
                //console.log("obj" + JSON.stringify(Obj))
                this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addCustomLaborMaterialService/', Obj)
                    .subscribe(function (data) {
                    var addCustomLaborMaterilData = data.json();
                    _this.customLaborMaterialValues.reset();
                    _this.customLaborMaterialList();
                    _this.customLaborMaterialResponse = true;
                    _this.AddCustomLaborMaterialRecords = false;
                }, function (error) {
                    _this.customLaborMaterialResponse = false;
                    ////console.log('The execution is failed ' + JSON.stringify(error))
                });
            }
        }
    };
    AddEstimate1Component.prototype.updateCustomLaborMaterial = function () {
        var _this = this;
        var obj = {
            "id": this.viewCustomLaborData.id,
            "proId": this.billingAddressData.proId,
            "customerId": this.billingAddressData.customerId,
            "item": '' + this.editCustomLaborCost.value.item,
            "type": '' + this.editCustomLaborCost.value.type,
            "staffId": '' + this.editCustomLaborCost.value.staffId,
            "staffName": '' + this.staffFirstName,
            "name": '' + this.editCustomLaborCost.value.name,
            "quantity": '' + this.editCustomLaborCost.value.quantity,
            "units": this.laborHours,
            "priceMarkUp": this.laborCost,
            "subTotal": this.subTotalValue.toFixed(2),
        };
        console.log("Edit OBJ" + JSON.stringify(obj));
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/editCustomLaborMaterialService', obj)
            .subscribe(function (data) {
            var woData = data.json();
            _this.customLaborMaterialValues.reset();
            _this.customLaborMaterialList();
            console.log("woData" + JSON.stringify(woData));
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    AddEstimate1Component.prototype.cancelCustomLAndM = function () {
        this.customLaborMaterialValues.reset();
        this.errormsgquant = false;
        this.errormsgtype = false;
        this.errormsg = false;
        this.laborCost = 0;
    };
    AddEstimate1Component.prototype.getCustomMaterialList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listCustomMaterial/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.customMaterialListDetails = response.response;
                _this.listPriceCM = response.response[0].listPrice;
                //console.log("test" + JSON.stringify(this.listPriceCM))
                _this.customMaterialListDetails.forEach(function (e) {
                    e.selectedService = false;
                    e.materialSubTotal = 0;
                });
                _this.calculatediscount();
                //this.getChannelManagerComm()
                //console.log("Custom Material details" + JSON.stringify(this.customMaterialListDetails))
                //this.viewItemData = JSON.parse(localStorage.getItem('itemValues'))
                ////console.log("itemValues" + JSON.stringify(this.viewItemData))
                //this.viewPriceBookService()
                // this.customMaterialServiceResponse = true;
                //this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue
            }
            else {
                //  this.customMaterialServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.submitCustomMaterial = function () {
        var _this = this;
        var Obj = {
            "customMaterialArray": this.customMaterialData1,
            "proId": this.billingAddressData.proId,
            "customerId": this.billingAddressData.customerId,
            "staffId": this.billingAddressData.employeeId,
        };
        //console.log("obj" + JSON.stringify(Obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addCustomMaterialService', Obj)
            .subscribe(function (data) {
            var addCustomMaterial = data.json();
            _this.addCustomMaterialDetails = addCustomMaterial.response;
            //this.customMaterialValues.reset()
            _this.addCustomMaterialDetails = [];
            //console.log("submit Custom Material", this.addCustomMaterialDetails)
            _this.customMaterialList();
            _this.getChannelManagerComm();
            _this.customMaterialResponse = true;
            _this.AddCustomLaborMaterialRecords = false;
        }, function (error) {
            _this.customMaterialResponse = false;
            ////console.log('The execution is failed ' + JSON.stringify(error))
        });
        // }
    };
    AddEstimate1Component.prototype.calculateCustomlabor = function () {
        this.customLaborListValue = 0;
        this.customLaborMarkUpListValue = 0;
        this.customFieldTechValue = 0;
        this.customLaborFieldTechHours = 0;
        for (var i = 0; i < this.viewCLMDetails.length; i++) {
            if (this.viewCLMDetails[i].staffId == this.loginData.loginCode) {
                this.customFieldTechValue = this.customFieldTechValue + parseInt(this.viewCLMDetails[i].subTotal);
            }
            else {
                this.customLaborListValue = this.customLaborListValue + parseInt(this.viewCLMDetails[i].subTotal);
            }
            if (this.viewCLMDetails[i].type == "Field Service Tech") {
                this.customLaborFieldTechHours = this.customLaborFieldTechHours + parseFloat(this.viewCLMDetails[i].quantity);
            }
            // this.customLaborListValue = this.customLaborListValue + parseInt(this.viewCLMDetails[i].subTotal)
            this.customLaborMarkUpListValue = this.customLaborMarkUpListValue + parseInt(this.viewCLMDetails[i].markUpValue);
        }
        this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue;
        this.getPromoDiscounts();
        this.getOtherPromoCode();
        this.staffData = [];
    };
    AddEstimate1Component.prototype.customLaborMaterialList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/estimateCLMSelectionList/' + this.billingAddressData.proId + '/' + this.billingAddressData.customerId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.viewCLMDetails = response.response;
                _this.calculateCustomlabor();
                _this.customLaborMaterialResponse = true;
            }
            else {
                _this.customLaborMaterialResponse = false;
            }
            (function (error) {
            });
        });
    };
    AddEstimate1Component.prototype.calculateCustomMaterial = function () {
        this.customMaterialListValue = 0;
        this.customMaterialResponse = true;
        //console.log("Custom Material Data 1" + JSON.stringify(this.customMaterialData1))
        for (var i = 0; i < this.customMaterialData1.length; i++) {
            //console.log(this.customMaterialData1)
            this.customMaterialListValue = this.customMaterialListValue + parseInt(this.customMaterialData1[i].materialSubTotal);
            this.totalMarkupValue = this.totalMarkupValue + parseInt(this.customMaterialData1[i].materialSubTotal) - (parseInt(this.customMaterialData1[i].costPrice) * parseInt(this.customMaterialData1[i].quantity));
            //console.log("list Mark up value" + this.totalMarkupValue)
        }
        this.taxPercentCal = Math.round((this.customMaterialListValue) * (this.taxValue / 100) * 100) / 100;
        this.totalMaterialCostWithTax = this.customMaterialListValue + this.taxPercentCal;
        this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue;
        this.getOtherPromoCode();
        //this.getChannelManagerComm()
    };
    AddEstimate1Component.prototype.customMaterialList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/estimateCMSelectionList/' + this.billingAddressData.proId + '/' + this.billingAddressData.employeeId + '/' + this.billingAddressData.customerId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.customMaterialData1 = response.response;
                _this.customMaterialListValue = 0;
                _this.totalMaterialCostWithTax = 0;
                _this.customMaterialData1.forEach(function (e) {
                    e.quantity = 1;
                    e.materialSubTotal = e.quantity * e.priceMarkUp;
                    _this.customMaterialListValue = _this.customMaterialListValue + e.materialSubTotal;
                });
                //console.log(this.customMaterialListValue)
                //console.log(this.taxValue)
                _this.taxPercentCal = Math.round((_this.customMaterialListValue) * (_this.taxValue / 100) * 100) / 100;
                _this.totalMaterialCostWithTax = _this.customMaterialListValue + _this.taxPercentCal;
                _this.calculatediscount();
                _this.customMaterialResponse = true;
                // this.calculateCustomMaterial()
            }
            else {
                _this.customMaterialResponse = false;
            }
            (function (error) {
            });
        });
    };
    // updateCustomLaborService() {
    //   let obj = {
    //     "id": this.viewCustomLaborData.id,
    //     "item": this.editCustomLaborCost.value.itemNo,
    //     "type": this.editCustomLaborCost.value.type,
    //     "name": this.editCustomLaborCost.value.name,
    //     "quantity": this.editCustomLaborCost.value.quantity,
    //     "units": this.laborUnits,
    //     "listPrice": this.laborCost,
    //     "priceMarkUp": this.listPriceLaborMarkUp,
    //     "subTotal": this.subTotalValue.toFixed(2),//this.subTotalValue,
    //   }
    //   ////console.log("Edit OBJ" + JSON.stringify(obj))
    //   this.http.post(Global.url + '/updateCustomLaborTemp', obj)
    //     .subscribe(data => {
    //       var woData = data.json();
    //       this.customLaborMaterialList();
    //       ////console.log("woData" + JSON.stringify(woData))
    //     }, error => {
    //       ////console.log(error);// Error getting the data
    //     });
    // }
    AddEstimate1Component.prototype.deleteCustomMaterial = function (data) {
        var _this = this;
        //console.log(data)
        this.customMaterialData1 = this.customMaterialData1.filter(function (val) { return val.id !== data.id; });
        //console.log(this.customMaterialData1)
        data.selectedService = false;
        for (var i = 0; i < this.customMaterialListDetails.length; i++) {
            if (data.itemId === this.customMaterialListDetails[i].itemId) {
                this.customMaterialListDetails[i].selectedService = false;
                // this.customMaterialListDetails = this.customMaterialListDetails.filter(val => val.selectedService == false);
            }
        }
        //console.log(this.customMaterialListDetails.filter(val => val.selectedService == false))
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteCustomMaterialService/' + data.id)
            .subscribe(function (data) {
            var delCM = data.json();
            ////console.log(delCM)
            if (delCM.status == 200) {
                // this.listPaymentMethods()
                // this.customMaterialList()     
                _this.customMaterialListValue = 0;
                _this.totalMarkupValue = 0;
                for (var i = 0; i < _this.customMaterialData1.length; i++) {
                    _this.customMaterialListValue = _this.customMaterialListValue + parseInt(_this.customMaterialData1[i].materialSubTotal);
                    ////console.log("listPriceInventory" + this.listPriceInventory)
                    _this.totalMarkupValue = _this.totalMarkupValue + parseInt(_this.customMaterialData1[i].materialSubTotal) - (parseInt(_this.customMaterialData1[i].costPrice) * parseInt(_this.customMaterialData1[i].quantity));
                }
                _this.taxPercentCal = Math.round((_this.customMaterialListValue) * (_this.taxValue / 100) * 100) / 100;
                _this.totalMaterialCostWithTax = _this.customMaterialListValue + _this.taxPercentCal;
                _this.calculatediscount();
                _this.toastr.success("One Custom Material has deleted Successfully");
                // return false;
                //this.customMaterialResponse = true;
            }
            else {
                //this.customMaterialResponse = false;
                _this.toastr.success("Custom Material Deletion Failed");
            }
        });
    };
    AddEstimate1Component.prototype.deleteCustomLabor = function (data) {
        var _this = this;
        //console.log(data)
        this.customLaborListValue = 0;
        this.customLaborMarkUpListValue = 0;
        this.customFieldTechValue = 0;
        // this.customLaborListValue = 0;
        this.customLaborFieldTechHours = 0;
        this.viewCLMDetails = this.viewCLMDetails.filter(function (val) { return val.id !== data.id; });
        for (var i = 0; i < this.viewCLMDetails.length; i++) {
            if (this.viewCLMDetails[i].staffId == this.billingAddressData.employeeId) {
                this.customFieldTechValue = this.customFieldTechValue + parseInt(this.viewCLMDetails[i].subTotal);
            }
            else {
                this.customLaborListValue = this.customLaborListValue + parseInt(this.viewCLMDetails[i].subTotal);
            }
            if (this.viewCLMDetails[i].type == "Field Service Tech") {
                this.customLaborFieldTechHours = this.customLaborFieldTechHours + parseFloat(this.viewCLMDetails[i].quantity);
            }
            // this.customLaborListValue = this.customLaborListValue + parseInt(this.viewCLMDetails[i].subTotal)
            this.customLaborMarkUpListValue = this.customLaborMarkUpListValue + parseInt(this.viewCLMDetails[i].markUpValue);
        }
        this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue;
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteCustomLaborService/' + data.id)
            .subscribe(function (data) {
            var delCM = data.json();
            //console.log(delCM)
            if (delCM.status == 200) {
                _this.totalEstPriceBeforeDisc = _this.priceBookListValue + _this.totalMaterialCostWithTax + _this.customLaborListValue;
                _this.toastr.success("One Custom Labor has deleted Successfully");
                _this.calculatediscount();
                // this.customLaborListValue = 0;
                // this.customLaborMaterialResponse = true;
                // for (var i = 0; i < this.viewCLMDetails.length; i++) {
                //   this.customLaborListValue = this.customLaborListValue + parseInt(this.viewCLMDetails[i].subTotal)
                //   this.customLaborMarkUpListValue = this.customLaborMarkUpListValue + parseInt(this.viewCLMDetails[i].markUpValue)
                //   // return false;
                // }
                //this.customLaborMaterialList();
            }
            else {
                _this.toastr.success("Custom Labor Deletion Failed");
                // this.customLaborMaterialResponse = false;
            }
        });
    };
    AddEstimate1Component.prototype.deletePriceBookItems = function (data) {
        var _this = this;
        ////console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deletePricebookService/' + data.id)
            .subscribe(function (data) {
            var delPBI = data.json();
            ////console.log(delCM)
            if (delPBI.status == 200) {
                _this.priceBookListValue = 0;
                _this.viewPriceBookService();
                _this.calculatediscount();
                // for (var i = 0; i < this.viewItemDetails.length; i++) {
                //   //console.log("viewItemDetailsTime" + this.viewItemDetails[i].time)
                //   this.priceBookHoursValue = this.priceBookHoursValue + parseFloat(this.viewItemDetails[i].time);
                //   //console.log(this.priceBookHoursValue)
                //   this.priceBookListValue = this.priceBookListValue + parseFloat(this.viewItemDetails[i].subTotal)
                //   this.priceBookMaterialValue = this.priceBookMaterialValue + parseFloat(this.viewItemDetails[i].materialCost)
                //   this.priceBookLaborValue = this.priceBookLaborValue + parseFloat(this.viewItemDetails[i].laborCost)
                // }
                // this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue
                _this.toastr.success("One Price Book Item has deleted Successfully");
                // return false;
            }
            else {
                _this.toastr.success("Price Book Item Deletion Failed");
            }
        });
    };
    AddEstimate1Component.prototype.getChannelManagerList = function () {
        var _this = this;
        ////console.log(this.billingAddressData.proId)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffChannelManager/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.channelManagerList = response.response;
                //console.log("in staff channel manager" + JSON.stringify(this.channelManagerList))
                _this.channelManagerResponse = true;
            }
            else {
                _this.channelManagerResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.getStaffName = function () {
        var _this = this;
        if (this.addEstimate.value.channelManager == "-1") {
            this.empCommission = 0;
            this.channelManagerCommValue = 0;
            return;
        }
        else {
            //console.log("getName" + this.addEstimate.value.channelManager)
            var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
            headers.append("Accept", 'application/json');
            headers.append('Content-Type', 'application/json');
            var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
            this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameDetails/' + this.addEstimate.value.channelManager, options)
                .subscribe(function (data) {
                var response = data.json();
                ////console.log("in staff channel manager")
                if (response.status == 200) {
                    _this.channelManagerDetailsList = response.response[0];
                    //console.log("channelManagerID" + JSON.stringify(this.channelManagerDetailsList))
                    _this.netProfitValue = false;
                    _this.grossSaleValue = true;
                    _this.channelManagerId = _this.channelManagerDetailsList.employeeId;
                    _this.channelManagerEmail = _this.channelManagerDetailsList.email;
                    _this.empName = _this.channelManagerDetailsList.firstName + "-" + _this.channelManagerDetailsList.lastName;
                    _this.empCommission = _this.channelManagerDetailsList.compValue;
                    //console.log("comp value" + JSON.stringify(this.empCommission))
                    _this.empCommissionType = _this.channelManagerDetailsList.compType;
                    _this.getChannelManagerComm();
                    _this.channelManagerDetailsResponse = true;
                }
                else {
                    _this.channelManagerDetailsResponse = false;
                }
                (function (error) {
                    ////console.log('The execution is failed ' + JSON.stringify(error))
                });
            });
        }
    };
    AddEstimate1Component.prototype.getLoginStaffDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameDetails/' + this.billingAddressData.employeeId, options)
            .subscribe(function (data) {
            var response = data.json();
            ////console.log("in staff channel manager")
            if (response.status == 200) {
                _this.loginStaffDetailsList = response.response[0];
                _this.loginStaffCommission = _this.loginStaffDetailsList.compValue;
                //console.log("staffCommission" + this.loginStaffCommission)
                _this.loginStaffCommissionType = _this.loginStaffDetailsList.compType;
                _this.loginStaffGroup = _this.loginStaffDetailsList.empgroup;
                _this.loginStaffManagerId = _this.loginStaffDetailsList.managerId;
                if (_this.loginStaffDetailsList.hourlyRate == "true") {
                    _this.commissionType = "HOURLY";
                    _this.workingType = _this.loginStaffDetailsList.hourlyRateValue;
                    //console.log("working type" + this.workingType)
                }
                else if (_this.loginStaffDetailsList.weeklyRate == "true") {
                    _this.commissionType = "WEEKLY";
                    _this.weeklyType = _this.loginStaffDetailsList.weeklyRateValue;
                    _this.workingType = _this.weeklyType / 40;
                }
                _this.loginStaffDetailsResponse = true;
                // this.listGroupDetails();
            }
            else {
                _this.loginStaffDetailsResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.getEmployeeRolesDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getEmployeeRole/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.employeeRole = response.response;
                ////console.log("employeeRole" + JSON.stringify(this.employeeRole))
                return false;
            }
            else {
                _this.toastr.warning("No Records Found");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    AddEstimate1Component.prototype.getListOfStates = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getListOfStates', options)
            .subscribe(function (data) {
            var response = data.json();
            _this.statesData = response.response;
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    AddEstimate1Component.prototype.getPriceBookServiceList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPriceBookService' + '/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.priceBookListDetails = response.response;
                _this.pricebooklist = response.response[0];
                _this.getCategory();
                _this.getSubCategory();
                _this.priceBookListDetails = Array.from(new Set(_this.priceBookListDetails));
                //console.log("pricebook details" + JSON.stringify(this.priceBookListDetails))
                _this.totalPb = _this.priceBookListDetails.length;
                _this.viewItemData = JSON.parse(localStorage.getItem('itemValues'));
                ////console.log("itemValues" + JSON.stringify(this.viewItemData))        
                _this.viewPriceBookService();
                _this.calculatediscount();
                //console.log("if -->")
                _this.priceBookSearchData = true;
            }
            else {
                //console.log("else -->")
                _this.priceBookSearchData = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.getCategory = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPriceBookCategory' + '/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.priceBookData = response.response;
                //console.log("pricebook category" + JSON.stringify(this.priceBookData))
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.priceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.getSubCategory = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPriceBookSubCategory' + '/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.subcategoryData = response.response;
                //console.log("subcategoryData details" + JSON.stringify(this.subcategoryData))
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.priceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    /* serch Price Book Value */
    AddEstimate1Component.prototype.priceBookSearchDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        //let options = new RequestOptions({ headers: headers });
        var obj = {
            "category": this.priceBookSearch.value.category,
            "subCategory": this.priceBookSearch.value.subCategory,
            "description": this.priceBookSearch.value.description,
        };
        ////console.log('this is search obj' + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/priceBookSearchwithproID', [
            { id: 'category', value: obj.category },
            { id: 'subCategory', value: obj.subCategory },
            { id: 'description', value: obj.description },
            { id: 'proId', value: this.billingAddressData.proId },
        ]).subscribe(function (data) {
            _this.priceBook = data.json();
            //console.log("priceBookListDetails" + JSON.stringify(this.priceBook))
            if (_this.priceBook.status == 200) {
                _this.priceBookListDetails = _this.priceBook.response;
                _this.totalPb = _this.priceBookListDetails.length;
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.totalPb = 0;
                _this.priceBookServiceResponse = false;
            }
        });
    };
    /* serch Price Book Value */
    AddEstimate1Component.prototype.selectPricebookList = function (data) {
        var _this = this;
        ////console.log("checkbox data" + JSON.stringify(data))
        if (data.selectedService === true) {
            this.selectedPriceBook.push(data);
            for (var i = 0; i < this.selectedPriceBook.length; i++) {
                this.selectedPriceBook[i].sno = i + 1;
                ////console.log("checkbox" + JSON.stringify(this.selectedPriceBook[i]))
            }
        }
        else {
            this.selectedPriceBook = this.selectedPriceBook.filter(function (value) { return value.selectedService == true; });
            ////console.log("selected Inventory in else" + JSON.stringify(this.selectedPriceBook))
            this.selectedPriceBook.forEach(function (e) {
                _this.pricebookTemp.push(e);
            });
            ////console.log("venkat array" + JSON.stringify(this.inventoryTemp))
        }
        this.showTable = false;
    };
    AddEstimate1Component.prototype.saveselectedPriceBook = function () {
        this.showTable = true;
        this.listPriceBook = 0;
        this.listPriceBookStandard = 0;
        this.listPriceBookValue = 0;
        this.listPriceBookMember = 0;
        ////console.log("selectedPriceBook" + JSON.stringify(this.selectedPriceBook))
        for (var i = 0; i < this.selectedPriceBook.length; i++) {
            this.listPriceBook = this.listPriceBook + parseInt(this.selectedPriceBook[i].totalCost);
            this.listPriceBookStandard = this.listPriceBookStandard + parseInt(this.selectedPriceBook[i].standard);
            this.listPriceBookValue = this.listPriceBookValue + parseInt(this.selectedPriceBook[i].value);
            this.listPriceBookMember = this.listPriceBookMember + parseInt(this.selectedPriceBook[i].member);
        }
    };
    // getInventoryList() {
    //   var headers = new Headers();
    //   headers.append("Accept", 'application/json');
    //   headers.append('Content-Type', 'application/json');
    //   let options = new RequestOptions({ headers: headers });
    //   this.http.get(Global.url + '/listOfInventory' + '/' + this.billingAddressData.proId, options)
    //     .subscribe(data => {
    //       var response = data.json();
    //       if (response.status == 200) {
    //         this.inventoryListDetails = response.response;
    //         ////console.log("inventoryList" + JSON.stringify(this.inventoryListDetails))
    //         for (var i = 0; i < this.inventoryListDetails.length; i++) {
    //           this.inventoryListDetails[i].subTotal = this.inventoryListDetails[i].listPrice * this.inventoryListDetails[i].quantity
    //         }
    //         this.inventoryListResponse = true;
    //       }
    //       else {
    //         this.inventoryListResponse = false;
    //       }
    //       error => {
    //       }
    //     })
    // }
    // getQuantity(qty) {
    ////console.log(qty)
    // this.listPriceInventory = 0
    // qty.subTotal = qty.quantity * qty.listPrice
    // for (var i = 0; i < this.selectedInventory.length; i++) {
    //   this.listPriceInventory = this.listPriceInventory + parseInt(this.selectedInventory[i].subTotal)
    ////console.log("listPriceInventory" + this.listPriceInventory)
    //   }
    // }
    AddEstimate1Component.prototype.getPriceBookQuantity = function (quantityData) {
        //console.log("quantitypricebook" + (quantityData.quantity))
        this.qty = (quantityData.quantity);
        //console.log("qty value" + this.qty)
        this.priceBookListValue = 0;
        this.priceBookHoursValue = 0;
        quantityData.subTotal = this.qty * quantityData.priceMarkUp;
        //console.log(" subTotal" + quantityData.subTotal)
        for (var i = 0; i < this.viewItemDetails.length; i++) {
            //console.log(this.viewItemDetails[i].time)
            this.priceBookHoursValue = this.priceBookHoursValue + parseFloat(this.viewItemDetails[i].time);
            //console.log("priceBookHoursValue" + this.priceBookHoursValue)
            this.priceBookListValue = this.priceBookListValue + parseFloat(this.viewItemDetails[i].subTotal);
            // this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue
            this.getOtherPromoCode();
            //this.getChannelManagerComm()
            // this.pricebookTax = 
            // this.pricebookTax = (this.priceBookListValue) * (this.taxValue / 100)
            //     this.totalPricebookCostWithTax = this.priceBookListValue + this.pricebookTax
        }
        this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue;
    };
    AddEstimate1Component.prototype.viewPriceBookService = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/estimatePriceBookSelectionList/' + this.loginData.loginCode + '/' + this.billingAddressData.employeeId + '/' + this.billingAddressData.customerId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                ////console.log("in 200")
                _this.priceBookListValue = 0;
                _this.priceBookMaterialValue = 0;
                _this.priceBookLaborValue = 0;
                _this.priceBookHoursValue = 0;
                _this.viewItemDetails = response.response;
                //console.log("viewItemDetails1" + JSON.stringify(this.viewItemDetails))
                //console.log("viewItemDetails" + JSON.stringify(this.viewItemDetails[0].proId))
                _this.getRoles();
                _this.listPromotionCodeValue();
                // this.getPromoCodeDiscount()
                for (var i = 0; i < _this.viewItemDetails.length; i++) {
                    //console.log("viewItemDetailsTime" + this.viewItemDetails[i].time)
                    _this.priceBookHoursValue = _this.priceBookHoursValue + parseFloat(_this.viewItemDetails[i].time);
                    //console.log(this.priceBookHoursValue)
                    _this.priceBookListValue = _this.priceBookListValue + parseFloat(_this.viewItemDetails[i].subTotal);
                    //this.priceBookMaterialValue = this.priceBookMaterialValue + parseFloat(this.viewItemDetails[i].materialCost)
                    _this.priceBookLaborValue = _this.priceBookLaborValue + parseFloat(_this.viewItemDetails[i].laborCost);
                }
                //   this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.priceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.getPromoDiscounts = function () {
        var _this = this;
        if (this.promoCode == "NA") {
            return;
        }
        else {
            var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
            headers.append("Accept", 'application/json');
            headers.append('Content-Type', 'application/json');
            var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
            this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getPromoDiscount' + '/' + this.billingAddressData.proId + '/' + this.promoCode, options)
                .subscribe(function (data) {
                var response = data.json();
                if (response.status == 200) {
                    _this.promoDiscountListDetails = response.response;
                    _this.promoDiscountValue = response.response[0];
                    _this.calculatediscount();
                    //console.log("promoDiscountListDetails" + JSON.stringify(this.promoDiscountListDetails))
                    //console.log("promoDiscountList" + JSON.stringify(this.promoDiscountValue))
                }
                if (_this.promoDiscountValue.type == "$") {
                    _this.discountAmount = _this.promoDiscountValue.promotionValues;
                    _this.promoValue = _this.discountAmount;
                    //console.log("type=$" + JSON.stringify(this.discountAmount))
                }
                if (_this.promoDiscountValue.type == "%") {
                    _this.discountAmount = (_this.promoDiscountValue.promotionValues * _this.promoDiscountValue.totalTicket) / 100;
                    _this.promoValue = _this.discountAmount;
                    //console.log("type=%" + JSON.stringify(this.discountAmount))
                }
                else {
                }
                (function (error) {
                });
            });
        }
    };
    AddEstimate1Component.prototype.getPromoCodeDiscount = function (promoCode) {
        var _this = this;
        if (parseInt(promoCode) == 0) {
            this.discountAmount = 0, this.promoValue = 0;
            this.calculatediscount();
            return;
        }
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getPromoDiscount' + '/' + this.loginData.loginCode + '/' + promoCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.promoDiscountListDetails1 = response.response;
                _this.promoDiscountValue1 = response.response[0];
                //console.log("promoDiscountListDetails" + JSON.stringify(this.promoDiscountListDetails1))
                //console.log("promoDiscountList" + JSON.stringify(this.promoDiscountValue1))
                if (_this.promoDiscountValue1.type == "$") {
                    _this.discountAmount = _this.promoDiscountValue1.promotionValues;
                    _this.promoValue = _this.discountAmount;
                    //console.log("type=$" + JSON.stringify(this.discountAmount))
                }
                if (_this.promoDiscountValue1.type == "%") {
                    _this.discountAmount = (_this.promoDiscountValue1.promotionValues * _this.promoDiscountValue1.totalTicket) / 100;
                    _this.promoValue = _this.discountAmount;
                    //console.log("type=%" + JSON.stringify(this.discountAmount))
                }
                _this.calculatediscount();
            }
            else {
            }
            (function (error) {
            });
        });
    };
    AddEstimate1Component.prototype.calculatediscount = function () {
        this.totalEstPriceBeforeDisc = this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue;
        if (this.promoValue == 0) {
            this.totalDiscount = parseInt(this.otherPromoValue);
            // this.paymentModeValue = 0
            // this.getPaymentMode()
            console.log("pay" + this.paymentModeValue);
            this.afterDiscount = Math.round((this.totalEstPriceBeforeDisc - (this.totalDiscount)) * 100) / 100;
            this.totalValueAfterDiscounts = Math.round((this.afterDiscount + this.paymentModeValue) * 100) / 100;
            this.getReqDiscount();
            // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
            this.directJobCostValue = parseFloat((this.paymentModeValue) + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost));
            this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
            // this.estimatedGrossProfitValue = parseFloat(this.totalValueAfterDiscounts) - parseFloat(this.directJobCostValue)
            this.estimatedGrossProfitValue = Math.round(((this.totalValueAfterDiscounts) - (this.directJobCostValue)) * 100) / 100;
            this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
            this.getEstimateCommissionValue();
            this.getChannelManagerComm();
        }
        else {
            this.totalDiscount = parseInt(this.promoValue) + parseInt(this.otherPromoValue);
            console.log("pay" + this.paymentModeValue);
            //this.paymentModeValue = 0
            // this.getPaymentMode()
            this.afterDiscount = Math.round((this.totalEstPriceBeforeDisc - (this.totalDiscount)) * 100) / 100;
            this.totalValueAfterDiscounts = Math.round((this.afterDiscount + this.paymentModeValue) * 100) / 100;
            this.getReqDiscount();
            // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
            this.directJobCostValue = parseFloat((this.paymentModeValue) + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost));
            this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
            // this.estimatedGrossProfitValue = parseFloat(this.totalValueAfterDiscounts) - parseFloat(this.directJobCostValue)
            this.estimatedGrossProfitValue = Math.round(((this.totalValueAfterDiscounts) - (this.directJobCostValue)) * 100) / 100;
            this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
            this.getEstimateCommissionValue();
            this.getChannelManagerComm();
        }
    };
    AddEstimate1Component.prototype.getOtherPromoCode = function () {
        this.otherPromoValue = this.addEstimate.value.otherPromoCode;
        this.calculatediscount();
        if (this.addEstimate.value.paymentMethods == "Credit Card") {
            ////console.log("in ccpf")
            this.creditCardPF = this.ccpf;
            this.creditCardPercentage = this.creditCardPF / 100;
            console.log("ccpertange1" + this.creditCardPercentage);
            console.log("afterDiscount" + this.afterDiscount);
            this.paymentModeValue = Math.round((this.afterDiscount) * (this.creditCardPercentage) * 100) / 100;
            console.log("payment" + this.paymentModeValue);
            // this.getReqDiscount()
            // this.getOtherCost()
        }
        else {
            this.creditCardPF = 0;
            this.creditCardPercentage = this.creditCardPF / 100;
            this.paymentModeValue = Math.round((this.afterDiscount) * (this.creditCardPercentage) * 100) / 100;
            console.log("ccpertange" + this.creditCardPercentage);
            ////console.log(this.paymentModeValue)   
            ////console.log(this.totalValueAfterDiscounts)
            this.getReqDiscount();
            this.getOtherCost();
        }
        this.calculatediscount();
    };
    AddEstimate1Component.prototype.getPaymentValue = function () {
        this.paymentMethodValue = this.addEstimate.value.paymentValue / 100;
    };
    AddEstimate1Component.prototype.getReqDiscount = function () {
        this.reqDisc = this.addEstimate.value.reqDiscount / 100;
        this.finalValue = Math.round(this.totalValueAfterDiscounts * this.reqDisc * 100) / 100;
        if (this.finalValue > 1000) {
            this.finalValue = 1000.00;
        }
        else {
            this.finalValue = this.finalValue;
        }
    };
    AddEstimate1Component.prototype.getPaymentMode = function () {
        ////console.log("Payment Method Values" + this.addEstimate.value.paymentMethods)
        if (this.addEstimate.value.paymentMethods == "Credit Card") {
            ////console.log("in ccpf")
            this.creditCardPF = this.ccpf;
            this.creditCardPercentage = this.creditCardPF / 100;
            this.paymentModeValue = Math.round((this.afterDiscount) * (this.creditCardPercentage) * 100) / 100;
            ////console.log(this.paymentModeValue)
            this.totalValueAfterDiscounts = Math.round((this.afterDiscount + this.paymentModeValue) * 100) / 100;
            ////console.log(this.totalValueAfterDiscounts)
            this.getReqDiscount();
            this.getOtherCost();
        }
        else {
            this.creditCardPF = 0;
            this.creditCardPercentage = this.creditCardPF / 100;
            this.paymentModeValue = Math.round((this.afterDiscount) * (this.creditCardPercentage) * 100) / 100;
            ////console.log(this.paymentModeValue)
            this.totalValueAfterDiscounts = Math.round((this.afterDiscount + this.paymentModeValue) * 100) / 100;
            ////console.log(this.totalValueAfterDiscounts)
            this.getReqDiscount();
            this.getOtherCost();
        }
    };
    // LIST Equip Use jobrelated
    AddEstimate1Component.prototype.jobRelatedcost = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPBJobrelated/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var equipAgreement = data.json();
            if (equipAgreement.status == 200) {
                ////console.log("agreementStatus Details" + JSON.stringify(equipAgreement))
                _this.jobrelated = equipAgreement.response;
                ////console.log("list" + JSON.stringify(this.jobrelated))
                for (var i = 0; i < _this.jobrelated.length; i++) {
                    if (_this.jobrelated[i].settingDesc == "Credit Card Processing Fee") {
                        _this.ccpf = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Truck Operating Cost") {
                        _this.toc = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Workmans Comp Insurance") {
                        _this.workmanCompIns = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Employee Tax Company") {
                        _this.empTaxComp = _this.jobrelated[i].settingValue;
                    }
                }
                // return false;
                _this.job = true;
                ////console.log("job" + this.job)
            }
            else {
                _this.job = false;
            }
        }, function (error) {
            //  this.toastr.warning('Unable to connect to server');
        });
    };
    AddEstimate1Component.prototype.listGroupDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffGroups/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                //console.log("group Details" + JSON.stringify(response))
                _this.groupList = response.response;
                for (var i = 0; i < _this.groupList.length; i++) {
                    ////console.log(this.serviceAddressData.state)
                    ////console.log(this.groupList[i].groupName)
                    ////console.log("loginStaffGroup" + this.loginStaffGroup)
                    if (_this.groupList[i].groupName == _this.loginStaffGroup) {
                        //console.log("in group name Details" + this.groupList[i].salesTax)
                        _this.taxValue = _this.groupList[i].salesTax;
                    }
                }
                //this.customMaterialList();
                ////console.log("list" + JSON.stringify(this.groupList))
                // return false;
                _this.groups = true;
            }
            else {
                _this.groups = false;
            }
        });
    };
    AddEstimate1Component.prototype.listPaymentMethods = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPaymentMethods', options)
            .subscribe(function (data) {
            var listPay = data.json();
            if (listPay.status == 200) {
                ////console.log("group Details" + JSON.stringify(listPay))
                _this.payMethods = listPay.response;
                ////console.log("list" + JSON.stringify(this.payMethods))
                // return false;
                _this.payment = true;
            }
            else {
                _this.payment = false;
                _this.toastr.warning('Unable to connect to server');
            }
        });
    };
    AddEstimate1Component.prototype.markUp = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPBMarkup/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var equipAgreement = data.json();
            if (equipAgreement.status == 200) {
                ////console.log("agreementStatus Details" + JSON.stringify(equipAgreement))
                _this.listmarkup = equipAgreement.response;
                ////console.log("list id" + JSON.stringify(this.listmarkup))
                for (var i = 0; i < _this.listmarkup.length; i++) {
                    if (_this.listmarkup[i].category == "Material") {
                        _this.markUpValue = _this.listmarkup[i].markUp;
                        _this.listPrice = 1 + _this.markUpValue / 100;
                    }
                    else if (_this.listmarkup[i].category == "Labor") {
                        _this.markUpLaborValue = _this.listmarkup[i].markUp;
                        ////console.log("mark up value" + this.markUpLaborValue)
                        _this.listPriceOfLabor = 1 + _this.markUpLaborValue / 100;
                        ////console.log(this.listPriceOfLabor)
                    }
                }
                //return false;
                _this.mark = true;
            }
            else {
                _this.mark = false;
            }
        }, function (error) {
            //  this.toastr.warning('Unable to connect to server');
        });
    };
    AddEstimate1Component.prototype.getRoles = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffRoleProSpe' + "/" + this.viewItemDetails[0].proId, options)
            .subscribe(function (data) {
            var roles = data.json();
            if (roles.status == 200) {
                _this.roleData = roles.response;
                ////console.log("role data" + JSON.stringify(this.roleData))
                _this.dataRoles = true;
                ////console.log("service category Data" + JSON.stringify(this.roleData))
            }
            else {
                _this.dataRoles = false;
            }
        });
    };
    AddEstimate1Component.prototype.changeRole = function (roleName) {
        var _this = this;
        ////console.log(roleName)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameUsingRolesProSpe/' + roleName + "/" + this.viewItemDetails[0].proId, options).subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.staffData = response.response;
                // this.editCustomLaborCost.get("staffName").setValue(this.viewCustomLaborData.staffName)
                //console.log("staff Data" + JSON.stringify(this.staffData))
            }
            else {
                _this.staffData = [];
                _this.toastr.warning("No Staff For the selected Role");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    AddEstimate1Component.prototype.getDetails = function (employeeId) {
        var _this = this;
        //console.log(employeeId)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffDetailsUsingId/' + employeeId, options).subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.staffNameData = response.response[0];
                //console.log("staffName Data" + JSON.stringify(this.staffNameData))
                _this.laborHours = "Hours",
                    _this.staffFirstName = _this.staffNameData.firstName + "-" + _this.staffNameData.lastName;
                _this.laborCost = _this.staffNameData.billingRateperHr;
                //  this.staffQuantity = "1"
                //  this.getQuantityValue(this.staffQuantity) 
                //  this.subTotalValue = this.staffQuantity * this.laborCost
            }
            else {
                _this.toastr.warning("No Staff For the selected Role");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    AddEstimate1Component.prototype.overcostRelatedcost = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPBOvercost/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var equipAgreement = data.json();
            if (equipAgreement.status == 200) {
                ////console.log("over head cost Details" + JSON.stringify(equipAgreement))
                _this.overcost = equipAgreement.response;
                ////console.log("overcost" + JSON.stringify(this.overcost))
                for (var i = 0; i < _this.overcost.length; i++) {
                    if (_this.overcost[i].overHeadCostName == "Estimated") {
                        _this.overHeadCostValue = _this.overcost[i].estimatedOverHeadCostFactor;
                    }
                }
                ////console.log("list" + JSON.stringify(this.overcost))
                _this.over = true;
                // return false;
            }
            else {
                _this.over = false;
            }
        }, function (error) {
            //  this.toastr.warning('Unable to connect to server');
        });
    };
    // ESTIMATE ANALYSIER
    AddEstimate1Component.prototype.getDesiredProfit = function () {
        this.desiredValue = this.addEstimate.value.desiredProfitInEA;
        this.desiredProfitValue = Math.round(this.totalValueAfterDiscounts * this.desiredValue / 100 * 100) / 100;
        // this.getChannelManagerComm()
    };
    AddEstimate1Component.prototype.getChannelManagerComm = function () {
        console.log("Coming from pricebook", this.empCommissionType);
        console.log("Markup", this.totalMarkupValue);
        console.log("Net Profit", this.netProfitLabor);
        // this.channelManagerCommValue = Math.round(this.totalValueAfterDiscounts * this.empCommission / 100 * 100) / 100
        if (this.empCommissionType == "Net Profit") {
            this.netProfitValue = true;
            this.grossSaleValue = false;
            this.channelManagerCommValue = 0;
            this.customTotal = this.customMaterialListValue + this.customLaborListValue;
            this.oCost = this.addEstimate.value.otherCost;
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
            this.directJobCostValue = (this.paymentModeValue) + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost);
            this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
            this.estimatedGrossProfitValue = Math.round(((this.totalValueAfterDiscounts) - (this.directJobCostValue)) * 100) / 100;
            this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
            this.sumOfPriceBookCustomLaborHours = this.customLaborFieldTechHours + this.priceBookHoursValue;
            this.totalHoursWithWorkingType = this.workingType * this.sumOfPriceBookCustomLaborHours;
            // this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100
            this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
            if (this.addEstimate.value.worksmanCompType == "YES") {
                this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
                //console.log("channelmanagercommissionvalue" + this.channelManagerCommValue)
                //console.log("custom labor" + this.customLaborListValue)
                //console.log("total working" + this.totalHoursWithWorkingType)
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
                if (this.netProfitLabor < 0) {
                    this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                    console.log(this.netProfitLaborWithCurrency);
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                    console.log(this.netProfitLaborWithCurrency);
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.estNetProfitWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.red = true;
                }
                else {
                    this.estNetProfitWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.estNetProfitPercentWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitPercentWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.redPer = true;
                }
                else {
                    this.estNetProfitPercentWithCMWithCurrency = "$" + Math.abs(this.estNetProfitPercentWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.redPer = false;
                }
            }
            else if (this.addEstimate.value.worksmanCompType == "NO") {
                this.workManEstComm = 0;
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
                if (this.netProfitLabor < 0) {
                    this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                    console.log(this.netProfitLaborWithCurrency);
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                    console.log(this.netProfitLaborWithCurrency);
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.red = true;
                    this.estNetProfitWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                }
                else {
                    this.estNetProfitWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.estNetProfitPercentWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitPercentWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.redPer = true;
                }
                else {
                    this.estNetProfitPercentWithCMWithCurrency = "$" + Math.abs(this.estNetProfitPercentWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.redPer = false;
                }
            }
            if (this.addEstimate.value.empTaxCompType == "YES") {
                //console.log("estimated Tech Comm Cost" + this.empTaxComp)
                // this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
                //console.log(this.employeeTaxComm)
                // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                //console.log(this.employeeCommTaxInc)
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
                //console.log("netProfitLabor" + this.netProfitLabor)
                if (this.netProfitLabor < 0) {
                    this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                    console.log(this.netProfitLaborWithCurrency);
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                    console.log(this.netProfitLaborWithCurrency);
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.estNetProfitWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.red = true;
                }
                else {
                    this.estNetProfitWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.estNetProfitPercentWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitPercentWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.redPer = true;
                }
                else {
                    this.estNetProfitPercentWithCMWithCurrency = "$" + Math.abs(this.estNetProfitPercentWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.redPer = false;
                }
            }
            else if (this.addEstimate.value.empTaxCompType == "NO") {
                //console.log("in no type");
                this.employeeTaxComm = 0;
                // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
                //console.log("netProfitLabor" + this.netProfitLabor)
                if (this.netProfitLabor < 0) {
                    this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                    console.log(this.netProfitLaborWithCurrency);
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                    console.log(this.netProfitLaborWithCurrency);
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        console.log(this.estTechCommWithCurrency);
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.estNetProfitWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.red = true;
                }
                else {
                    this.estNetProfitWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitWithCMWithCurrency);
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.estNetProfitPercentWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitPercentWithCMWithCurrency);
                    this.redPer = true;
                }
                else {
                    this.estNetProfitPercentWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    console.log(this.estNetProfitPercentWithCMWithCurrency);
                    this.redPer = false;
                }
                // this.netProfit = Math.round(((this.estimatedMarkUpProfit) + (this.netProfitLabor)) * 100) / 100
                // this.netProfitPercent = Math.round(((this.netProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
            }
        }
        else if (this.empCommissionType == "Gross Sales") {
            this.netProfitValue = false;
            this.grossSaleValue = true;
            this.channelManagerCommValueNetProfit = 0;
            this.channelManagerCommValue = Math.round(this.totalValueAfterDiscounts * this.empCommission / 100 * 100) / 100;
            console.log("channelManagerCommValue", this.channelManagerCommValue);
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            // this.directJobCostValue = Math.round((this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)) * 100) / 100
            this.directJobCostValue = Math.round((this.paymentModeValue) + (parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)) * 100) / 100;
            this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
            this.estimatedGrossProfitValue = Math.round(((this.totalValueAfterDiscounts) - (this.directJobCostValue)) * 100) / 100;
            this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
            this.getOtherCost();
            this.getEstimateCommissionValue();
        }
        else if (this.empCommissionType == "Gross Profit") {
            console.log("in Gross Profit" + this.estimatedGrossProfitValue);
            this.netProfitValue = false;
            this.grossSaleValue = true;
            this.channelManagerCommValueNetProfit = 0;
            this.channelManagerCommValue = Math.round((this.estimatedGrossProfitValue * this.empCommission / 100) * 100) / 100;
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            // this.directJobCostValue = Math.round((this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)) * 100) / 100
            this.directJobCostValue = Math.round((this.paymentModeValue) + (parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)) * 100) / 100;
            this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
            this.estimatedGrossProfitValue = Math.round(((this.totalValueAfterDiscounts) - (this.directJobCostValue)) * 100) / 100;
            this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
            this.getOtherCost();
            this.getEstimateCommissionValue();
        }
        // this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100
        // this.directJobCostValue = Math.round((this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)) * 100) / 100
        // this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100
        // this.estimatedGrossProfitValue = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue) * 100) / 100
        // this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100
        // this.getOtherCost();
        // this.getEstimateCommissionValue()
    };
    // ESTIMATE ANALYSIER
    AddEstimate1Component.prototype.getWorksmanCompValue = function () {
        //console.log("worksman" + this.addEstimate.value.worksmanCompType)
        if (this.addEstimate.value.worksmanCompType == "YES") {
            // this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
            this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
            this.geEmployeeTaxCompType();
        }
        else if (this.addEstimate.value.worksmanCompType == "NO") {
            this.workManEstComm = 0;
            this.geEmployeeTaxCompType();
        }
    };
    AddEstimate1Component.prototype.geEmployeeTaxCompType = function () {
        //console.log("worksman" + this.addEstimate.value.empTaxCompType)
        if (this.addEstimate.value.empTaxCompType == "YES") {
            this.getEmployeeTaxCompany();
        }
        else if (this.addEstimate.value.empTaxCompType == "NO") {
            //console.log("in no type");
            this.employeeTaxComm = 0;
            // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
            this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
            this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
            this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
            //console.log("netProfitLabor" + this.netProfitLabor)
            if (this.netProfitLabor < 0) {
                this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                console.log(this.netProfitLaborWithCurrency);
                this.netProfitMinusCheck = true;
            }
            else {
                this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                console.log(this.netProfitLaborWithCurrency);
                this.netProfitMinusCheck = false;
            }
            if (this.loginStaffCommissionType == "Net Profit") {
                this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = true;
                }
                else {
                    this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = false;
                }
            }
            else if (this.loginStaffCommissionType == "Gross Sales") {
                this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = true;
                }
                else {
                    this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = false;
                }
            }
            else if (this.loginStaffCommissionType == "Gross Profit") {
                this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = true;
                }
                else {
                    this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = false;
                }
            }
            this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
            //console.log("totalEstTechPay" + this.totalEstTechPay)
            this.estNetProfit = Math.round((this.netProfitLabor - this.totalEstTechPay) * 100) / 100;
            if (this.estNetProfit < 0) {
                //console.log("checking minus change to red color")
                this.estNetProfitWithCurrency = "-$" + Math.abs(this.estNetProfit);
                console.log(this.estNetProfitWithCurrency);
                this.red = true;
            }
            else {
                this.red = false;
                this.estNetProfitWithCurrency = "$" + Math.abs(this.estNetProfit);
                console.log(this.estNetProfitWithCurrency);
                //console.log("no minus change to green color")
            }
            this.estNetProfitPercent = Math.round(((this.estNetProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
            if (this.estNetProfitPercent < 0) {
                this.estNetProfitPercentWithCurrency = "-$" + Math.abs(this.estNetProfitPercent);
                console.log(this.estNetProfitPercentWithCurrency);
                //console.log("checking minus change to red color")
                this.redPer = true;
            }
            else {
                this.estNetProfitPercentWithCurrency = "$" + Math.abs(this.estNetProfitPercent);
                console.log(this.estNetProfitPercentWithCurrency);
                this.redPer = false;
                //console.log("no minus change to green color")
            }
            // this.netProfit = Math.round(((this.estimatedMarkUpProfit) + (this.netProfitLabor)) * 100) / 100
            // this.netProfitPercent = Math.round(((this.netProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
        }
    };
    AddEstimate1Component.prototype.getOtherCost = function () {
        // this.customTotal = this.customMaterialListValue + this.customLaborListValue
        this.customTotal = this.customMaterialListValue + this.customLaborListValue;
        this.oCost = this.addEstimate.value.otherCost;
        this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
        // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
        this.directJobCostValue = (this.paymentModeValue) + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost);
        this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
        this.estimatedGrossProfitValue = Math.round(((this.totalValueAfterDiscounts) - (this.directJobCostValue)) * 100) / 100;
        this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
        this.getEstimateCommissionValue();
    };
    AddEstimate1Component.prototype.getEstimateCommissionValue = function () {
        this.sumOfPriceBookCustomLaborHours = this.customLaborFieldTechHours + this.priceBookHoursValue;
        this.totalHoursWithWorkingType = this.workingType * this.sumOfPriceBookCustomLaborHours;
        // this.techCommissions =  Math.round(this.estimatedGrossProfitValue * (this.loginStaffCommission / 100) * 100) / 100
        // //console.log("checking net prroofit .........."+this.techCommissions)
        // this.estimatedTechComm =  this.techCommissions + this.totalHoursWithWorkingType
        // //console.log("estimatedTechComm"+this.estimatedTechComm)
        // this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
        this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
        this.getWorksmanCompValue();
    };
    AddEstimate1Component.prototype.getEmployeeTaxCompany = function () {
        //console.log("estimated Tech Comm Cost" + this.empTaxComp)
        // this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
        this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100;
        //console.log(this.employeeTaxComm)
        //console.log("channelmanagercommissionvalue" + this.channelManagerCommValue)
        //console.log("custom labor" + this.customLaborListValue)
        //console.log("total working" + this.totalHoursWithWorkingType)
        // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
        this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
        //console.log(this.employeeCommTaxInc)
        this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
        this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.estimatedMarkUpProfit) * 100) / 100;
        //console.log("netProfitLabor" + this.netProfitLabor)
        if (this.netProfitLabor < 0) {
            this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
            console.log(this.netProfitLaborWithCurrency);
            this.netProfitMinusCheck = true;
        }
        else {
            this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
            console.log(this.netProfitLaborWithCurrency);
            this.netProfitMinusCheck = false;
        }
        if (this.loginStaffCommissionType == "Net Profit") {
            this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                console.log(this.estTechCommWithCurrency);
                this.redEstTechComm = true;
            }
            else {
                this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                console.log(this.estTechCommWithCurrency);
                this.redEstTechComm = false;
            }
        }
        else if (this.loginStaffCommissionType == "Gross Sales") {
            this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                console.log(this.estTechCommWithCurrency);
                this.redEstTechComm = true;
            }
            else {
                this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                console.log(this.estTechCommWithCurrency);
                this.redEstTechComm = false;
            }
        }
        else if (this.loginStaffCommissionType == "Gross Profit") {
            this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                console.log(this.estTechCommWithCurrency);
                this.redEstTechComm = true;
            }
            else {
                this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                console.log(this.estTechCommWithCurrency);
                this.redEstTechComm = false;
            }
        }
        this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
        //console.log("totalEstTechPay" + this.totalEstTechPay)
        this.estNetProfit = Math.round((this.netProfitLabor - this.totalEstTechPay) * 100) / 100;
        if (this.estNetProfit < 0) {
            //console.log("checking minus change to red color")
            this.estNetProfitWithCurrency = "-$" + Math.abs(this.estNetProfit);
            console.log(this.estNetProfitWithCurrency);
            this.red = true;
        }
        else {
            this.estNetProfitWithCurrency = "$" + Math.abs(this.estNetProfit);
            console.log(this.estNetProfitWithCurrency);
            this.red = false;
            //console.log("no minus change to green color")
        }
        this.estNetProfitPercent = Math.round(((this.estNetProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
        if (this.estNetProfitPercent < 0) {
            this.estNetProfitPercentWithCurrency = "-$" + Math.abs(this.estNetProfitPercent);
            console.log(this.estNetProfitPercentWithCurrency);
            //console.log("checking minus change to red color")
            this.redPer = true;
        }
        else {
            this.estNetProfitPercentWithCurrency = "$" + Math.abs(this.estNetProfitPercent);
            console.log(this.estNetProfitPercentWithCurrency);
            this.redPer = false;
            //console.log("no minus change to green color")
        }
        // this.netProfit = Math.round(((this.estimatedMarkUpProfit) + (this.netProfitLabor)) * 100) / 100
        // //console.log("in emp tac comp" + this.netProfit)
        // this.netProfitPercent = Math.round(((this.netProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
    };
    // generate  automatic partId
    AddEstimate1Component.prototype.getEstimateNumber = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", "application/json");
        headers.append("Content-Type", "application/json");
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http
            .get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + "/generateEstimateID", options)
            .subscribe(function (data) {
            _this.estNumInfo = data.json();
            if (_this.estNumInfo.status == 200) {
                _this.estimateID = _this.estNumInfo.estId;
                _this.dataEstInfo = true;
            }
            else {
                _this.dataEstInfo = false;
                ////console.log("NO Records Found");
            }
        });
    };
    // generate  automatic partId
    AddEstimate1Component.prototype.customMaterialLaborDescription = function () {
        var obj = {
            "proId": this.billingAddressData.proId,
            "staffId": this.billingAddressData.employeeId,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
            "materialGD": this.addEstimate.value.materialGD,
            "type": "Custom Labor And Material",
            "quantity": "1",
            "units": "EACH",
            // "listPrice": (this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue),
            // "subTotal": (this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue) * 1
            "listPrice": (this.totalMaterialCostWithTax + this.customLaborListValue),
            "subTotal": (this.totalMaterialCostWithTax + this.customLaborListValue) * 1
        };
        ////console.log("obj in estimate CustomDetails" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateCustomDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                ////console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                ////console.log('Failed to Add Record');
            }
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    AddEstimate1Component.prototype.estimatePriceBook = function () {
        var _this = this;
        var obj = {
            "pricebookArray": this.viewItemDetails,
            "proId": this.billingAddressData.proId,
            "staffId": this.billingAddressData.employeeId,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
        };
        ////console.log("obj in estimate pricebook" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimatePriceBookDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.estimatedCustomMaterial();
                _this.deletePriceBookTempTable();
                ////console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                ////console.log('Failed to Add Record');
            }
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    AddEstimate1Component.prototype.estimatedCustomMaterial = function () {
        var _this = this;
        var obj = {
            "customMaterialArray": this.customMaterialData1,
            "proId": this.billingAddressData.proId,
            "staffId": this.billingAddressData.employeeId,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
        };
        ////console.log("obj in estimate Material" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateCustomMaterialDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.estimatedCustomLabor();
                _this.deleteCustomMaterialTempTable();
                ////console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                ////console.log('Failed to Add Record');
            }
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    AddEstimate1Component.prototype.estimatedCustomLabor = function () {
        var _this = this;
        var obj = {
            "customLaborArray": this.viewCLMDetails,
            "proId": this.billingAddressData.proId,
            "staffId": this.billingAddressData.employeeId,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
        };
        ////console.log("obj in estimate Material" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateCustomLaborDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.totalEstimateCost();
                _this.updateWorkOrder();
                _this.customMaterialLaborDescription();
                _this.deleteCustomLaborTempTable();
                ////console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                ////console.log('Failed to Add Record');
            }
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    AddEstimate1Component.prototype.totalEstimateCost = function () {
        var _this = this;
        var estimateCostObj = {
            "proId": this.billingAddressData.proId,
            "staffId": this.billingAddressData.employeeId,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
            // "totalLaborCost": this.priceBookLaborValue + this.customLaborListValue,
            // "totalMaterialCost": this.priceBookMaterialValue + this.customMaterialListValue,
            "materialTaxValue": this.taxValue,
            "materialCostWithTax": this.totalMaterialCostWithTax,
            // "priceBookCost": this.priceBookListValue,
            "priceBeforeDiscount": this.totalEstPriceBeforeDisc,
            "discountPromoCode": this.addEstimate.value.newPromoCode,
            "discountPromoValue": this.promoValue,
            "otherPromoCode": this.addEstimate.value.otherPromoCode,
            "otherPromoValue": this.otherPromoValue,
            "totalDiscounts": this.totalDiscount,
            "priceAfterDiscount": this.afterDiscount,
            "paymentMethods": this.addEstimate.value.paymentMethods,
            "paymentValue": this.creditCardPF,
            "paymentMethodValue": this.paymentModeValue,
            "totalPrice": this.totalValueAfterDiscounts,
            "reqDepositValue": this.addEstimate.value.reqDiscount,
            "reqDepositCost": this.finalValue
        };
        ////console.log("estimateCostObj" + JSON.stringify(estimateCostObj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateCostDetails', estimateCostObj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                ////console.log("price data" + JSON.stringify(ConsData))
                _this.totalEstimateAnalyser();
            }
            else {
                ////console.log('Failed to Add Record');
            }
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    AddEstimate1Component.prototype.updateWorkOrder = function () {
        var obj = {
            "workOrderNo": this.workOrderData,
            "estimateNum": this.estimateID,
        };
        ////console.log("Edit OBJ" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateWorkOrderEstimateNo', obj)
            .subscribe(function (data) {
            var woData = data.json();
            ////console.log("woData" + JSON.stringify(woData))
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    AddEstimate1Component.prototype.totalEstimateAnalyser = function () {
        var _this = this;
        var estimateCostObj = {
            "proId": this.billingAddressData.proId,
            "staffId": this.billingAddressData.employeeId,
            "estimateNum": this.estimateID,
            "customerId": this.billingAddressData.customerId,
            "estGrossSale": this.totalValueAfterDiscounts,
            "desiredProfitPercent": this.addEstimate.value.desiredProfitInEA,
            "desiredProfitValue": this.desiredProfitValue,
            "estCMCommValue": this.channelManagerCommValue,
            "estCMCommPercent": this.empCommission,
            "estCMCommValueNetProfit": this.channelManagerCommValueNetProfit,
            "ccProcessingFeePercent": this.creditCardPF,
            "ccProcessingFeeValue": this.paymentModeValue,
            "toc": this.toc,
            "estMaterialCostMarkUp": this.customMaterialListValue,
            // "estLaborCostMarkUp": this.customLaborListValue,
            "estLaborCostMarkUp": this.customLaborListValue,
            "otherCostValue": this.addEstimate.value.otherCost,
            "otherCost": this.oCost,
            "directJobCostPercent": this.desiredPercentage,
            "directJobCostValue": this.directJobCostValue,
            "estGrossProfit": this.estimatedGrossProfitValue,
            "overHeadCostPercent": this.overHeadCostValue,
            "overHeadCostValue": this.overHeadEstimateCostValue,
            "priceBookHours": this.priceBookHoursValue,
            "fieldTechHours": this.customLaborFieldTechHours,
            "totalHours": this.sumOfPriceBookCustomLaborHours,
            "workingTypeValue": this.workingType,
            "estTechPayType": this.commissionType,
            "estTechPay": this.totalHoursWithWorkingType,
            "worksmanCompType": this.addEstimate.value.worksmanCompType,
            "employeeWorkmanCompValue": this.workmanCompIns,
            "employeeWorkmanCompPercent": this.workManEstComm,
            "empTaxCompType": this.addEstimate.value.empTaxCompType,
            "employeeTaxCompanyValue": this.empTaxComp,
            "employeeTaxCompanyPercent": this.employeeTaxComm,
            "employeeCommissions": this.employeeCommTaxInc,
            "estProfitMaterialMarkup": this.totalMarkupValue,
            "estProfitLaborMarkup": this.customLaborMarkUpListValue,
            "totalEstProfitMaterialLaborMarkup": this.estimatedMarkUpProfit,
            "estNetProfitBeforeTechCommission": this.netProfitLabor,
            "estNetTechCommissionType": this.loginStaffCommissionType,
            "estNetTechCommission": this.estTechComm,
            "estTotalTechPay": this.totalEstTechPay,
            "estNetProfit": this.estNetProfit,
            "estNetProfitPercentage": this.estNetProfitPercent,
            "estNetProfitWithCM": this.estNetProfitWithCM,
            "estNetProfitPercentageWithCM": this.estNetProfitPercentWithCM,
            "estTechCommPercent": this.loginStaffCommission,
            "estCommissionType": this.empCommissionType,
            "estTechCommValue": this.estTechComm,
            "actualNetProfitFromLabor": 0,
            "actualNetProfitValue": 0,
            "actualNetProfitPercent": 0,
        };
        //console.log("estimateCostObj" + JSON.stringify(estimateCostObj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateAnalyserDetails', estimateCostObj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                ////console.log("price data" + JSON.stringify(ConsData))
                _this.router.navigate(['/estimate/listEstimates']);
                // this.router.navigate(['/staff/listEstimate'])
            }
            else {
                ////console.log('Failed to Add Record');
            }
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    // DELETING TEMP TABLES
    AddEstimate1Component.prototype.deletePriceBookTempTable = function () {
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deletePriceBookTemp/' + this.billingAddressData.employeeId)
            .subscribe(function (data) {
            var unit = data;
            if (unit.status == 200) {
            }
            else {
                ////console.log('The else')
            }
        });
    };
    AddEstimate1Component.prototype.deleteCustomMaterialTempTable = function () {
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteCustomMaterialTemp/' + this.billingAddressData.employeeId)
            .subscribe(function (data) {
            var unit = data;
            if (unit.status == 200) {
            }
            else {
                ////console.log('The else')
            }
        });
    };
    AddEstimate1Component.prototype.deleteCustomLaborTempTable = function () {
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteCustomLaborTemp/' + this.billingAddressData.customerId)
            .subscribe(function (data) {
            var unit = data;
            if (unit.status == 200) {
            }
            else {
                ////console.log('The else')
            }
        });
    };
    // MULTIPLE IMAGE UPLOAD START
    AddEstimate1Component.prototype.onSelectFile = function (fileInput) {
        var _this = this;
        // this.arr = []
        this.imageArray = [];
        this.progressHide1 = false;
        // console.log("fileInput.target.files" + fileInput.target.files)
        // console.log("Array checking" + fileInput.target.files.length)
        if (fileInput.target.files.length == 1) {
            this.filesToUpload.push(fileInput.target.files[0]);
            this.chosseTypecount = this.filesToUpload.length;
        }
        else {
            for (var i = 0; i < fileInput.target.files.length; i++) {
                this.filesToUpload.push(fileInput.target.files[i]);
                console.log("this.filesTOUPLOAD" + JSON.stringify(this.filesToUpload.length));
                this.chosseTypecount = this.filesToUpload.length;
                this.fileName = "files";
                console.log("this.chosseTypecount" + this.fileName);
            }
        }
        var filesAmount = fileInput.target.files.length;
        for (var i_1 = 0; i_1 < filesAmount; i_1++) {
            var reader = new FileReader();
            reader.onload = function (fileInput) {
                _this.urls.push(fileInput.target.result);
                _this.arr.push({ name: fileInput.target.result });
                _this.imageuploadstatus = true;
            };
            reader.readAsDataURL(fileInput.target.files[i_1]);
        }
        // this.uploadData()
    };
    AddEstimate1Component.prototype.uploadData = function () {
        var _this = this;
        var files = this.filesToUpload;
        this.formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            this.formData.append("fileImage", files[i]);
        }
        console.log("ddd" + this.formData);
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/multiData', this.formData)
            .map(function (files) { return files.json(); })
            .subscribe(function (files) {
            for (var i = 0; i < files.imagePath.length; i++) {
                _this.newArray.push(files.imagePath[i]);
            }
            var uniqueArray = Array.from(new Set(_this.newArray));
            _this.imageNames = Object.keys(uniqueArray).map(function (key) { return ({ type: key, image: uniqueArray[key] }); });
            _this.arr = Object.keys(uniqueArray).map(function (key) { return ({ type: key, name: _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + "/" + uniqueArray[key] }); });
        });
    };
    AddEstimate1Component.prototype.removeSelectedFile = function (i) {
        this.arr.splice(i, 1);
        this.imageArray.splice(i, 1);
        this.filesToUpload.splice(i, 1);
    };
    AddEstimate1Component.prototype.upload = function () {
        var _this = this;
        console.log("upload is calling");
        var files = this.filesToUpload;
        console.log("files.lenght" + files);
        this.formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            this.formData.append("fileImage", files[i]);
        }
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/multiData', this.formData)
            .map(function (files) { return files.json(); })
            .subscribe(function (files) {
            _this.imageArray = [];
            for (var i = 0; i < files.imagePath.length; i++) {
                _this.imageArray.push(files.imagePath[i]);
            }
            _this.uploadFlag = true;
            _this.displyFlag = false;
            _this.progressHide1 = true;
            _this.progressShow1 = false;
            if (_this.percentage1 === 100) {
                _this.progressHide1 = false;
                _this.progressShow1 = true;
                _this.img1 = false;
            }
        });
    };
    // MULTIPLE IMAGE UPLOAD END
    //CHARGE AMOUNT
    AddEstimate1Component.prototype.chargeAmount = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var estimatePayment;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.spinner.show();
                        return [4 /*yield*/, this.estimatePayment('/estimatesStripePayment', {
                                amount: this.totalMaterialCostWithTax,
                            })];
                    case 1:
                        estimatePayment = _a.sent();
                        if (estimatePayment['succeeded'] == true) {
                            this.spinner.hide();
                            this.toastr.success('Estimates Payment Done Successfully');
                        }
                        else {
                            this.spinner.hide();
                            this.toastr.error('Estimates Payment Not successful');
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    //CHARGE AMOUNT
    //STRIPE ESTIMATES PAYMENT
    AddEstimate1Component.prototype.estimatePayment = function (apiUrl, object) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + apiUrl, object)
                .subscribe(function (data) {
                resolve(data.json());
            }, function (error) {
                resolve(error);
            });
        });
    };
    //STRIPE ESTIMATES PAYMENT
    /* -- Add Customer Material Auto pappulated Name --*/
    // getExistingQty(getTypeName) {
    //   var headers = new Headers();
    //   headers.append("Accept", 'application/json');
    //   headers.append('Content-Type', 'application/json');
    //   let options = new RequestOptions({ headers: headers });
    //   this.http.get(Global.url + '/getExistingQty/' + getTypeName + '/' + this.locationValue + '/' + this.viewItemDetails[0].proId, options)
    //     .subscribe(data => {
    //       var partsExistingQtyDetails = data.json();
    //       ////console.log("partsListInfo" + JSON.stringify(partsExistingQtyDetails))
    //       if (partsExistingQtyDetails.status == 200) {
    //         this.partsExistingQtyDetailsValue = partsExistingQtyDetails.existingQty;
    //         this.exQuantityValue = this.partsExistingQtyDetailsValue.existingQty
    //         ////console.log("existing part details" + JSON.stringify(this.partsExistingQtyDetailsValue.existingQty))   
    //       } else {
    //         this.partsExistingQtyDetailsValue = partsExistingQtyDetails.existingQty;
    //         this.exQuantityValue = this.partsExistingQtyDetailsValue
    //         ////console.log("existing part details in else" + JSON.stringify(this.partsExistingQtyDetailsValue))
    //       }
    //     })
    // }
    /* -- /Add Customer Material Auto pappulated Name --*/
    /* --- Promotion code getting here */
    AddEstimate1Component.prototype.listPromotionCodeValue = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listOfActivePromotions/' + this.viewItemDetails[0].proId, options)
            .subscribe(function (data) {
            var promotion = data.json();
            if (promotion.status == 200) {
                //console.log("promotion Details" + JSON.stringify(promotion))
                _this.promotionData = promotion.response;
                _this.promotionData1 = promotion.response[0];
                _this.calculatediscount();
                //console.log("promotionData" + JSON.stringify(this.promotionData))
                _this.addEstimate.get('newPromoCode').setValue(_this.promoCode);
                _this.promotion = true;
                return false;
            }
            else {
                _this.promotion = false;
            }
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    /* ---/ Promotion code getting here */
    /* --get Inventory Category and subCategory --*/
    AddEstimate1Component.prototype.getInvantoryCategory = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/inventoryestimatecat' + '/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.invantoryCat = response.response;
                //console.log("invantoryCat details" + JSON.stringify(this.invantoryCat))
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.priceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.getInvantorySubCategory = function (category) {
        var _this = this;
        //console.log("category" + category)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/inventoryEstimateSubcatgory/' + category + '/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.invantorysubCat = response.response;
                //console.log("invantoryCat details" + JSON.stringify(this.invantoryCat))
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.priceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    /* --/get Inventory Category and subCategory --*/
    AddEstimate1Component.prototype.saveCustomMaterial = function () {
        var _this = this;
        this.customMaterialData1 = [];
        this.customMaterialListDetails.forEach(function (e) {
            var checkData = _this.customMaterialData1.filter(function (val) { return val.id === e.id; });
            if (e.selectedService == true && checkData.length == 0) {
                _this.customMaterialData1.push(e);
                //       //console.log("customMAterialValues" + JSON.stringify(this.customMaterialData1))
            }
        });
        this.submitCustomMaterial();
    };
    // saveCustomMaterial() {
    //   this.customMaterialData1 = []
    //   this.customMaterialListDetails.forEach((e) => {
    //     var checkData = this.customMaterialData1.filter(val => val.id === e.id)
    //     if (e.selectedService == true && checkData.length == 0) {
    //       this.customMaterialData1.push(e)
    //       console.log("customMAterialValues" + JSON.stringify(this.customMaterialData1))
    //     }
    //   })
    //   this.submitCustomMaterial()
    // }
    AddEstimate1Component.prototype.getImagesGallery = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getListOfProzDetails', options)
            .subscribe(function (dataPDF) {
            var galleryData = dataPDF.json();
            if (galleryData.status == 200) {
                ////console.log(galleryData)
                _this.dataGallery = true;
                for (var i = 0; i < galleryData.response.length; i++) {
                    _this.galleryImages.push({
                        small: galleryData.response[i].image,
                        medium: galleryData.response[i].image,
                        big: galleryData.response[i].image,
                    });
                }
            }
        });
    };
    AddEstimate1Component.prototype.cancelSelectedInventory = function () {
        this.getPriceBookServiceList();
    };
    AddEstimate1Component.prototype.viewServicePriceBookService = function (data) {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewPriceBook' + '/' + data.serviceId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.priceBookListDetailsService = response.response[0];
                //console.log("priceBookListDetails" + JSON.stringify(this.priceBookListDetailsService))
                if (_this.priceBookListDetailsService.document == "../../assets/img/no-image.png") {
                    _this.imagePreview = _this.priceBookListDetailsService.document;
                    ////console.log("document" + this.imagePreview)
                }
                else {
                    _this.imagePreview = _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + _this.priceBookListDetailsService.document;
                    ////console.log("document1" + this.imagePreview)
                }
                _this.urls = _this.priceBookListDetailsService.picture.split(',');
                for (var i = 0; i < _this.urls.length; i++) {
                    _this.galleryImages.push({
                        small: _this.urls[i],
                        medium: _this.urls[i],
                        big: _this.urls[i],
                    });
                }
                ////console.log
                if (_this.priceBookListDetailsService.picture == "" || _this.priceBookListDetailsService.picture == null || _this.priceBookListDetailsService.picture == undefined || _this.priceBookListDetailsService.picture == "undefined") {
                    _this.imagePreview = '../../assets/img/no-image.png';
                }
                else if (_this.priceBookListDetailsService.picture == "../../assets/img/no-image.png") {
                    _this.imagePreview = _this.priceBookListDetailsService.picture;
                }
                else {
                    _this.imagePreview = _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + _this.priceBookListDetailsService.picture;
                }
                _this.viewPriceBookServiceResponse = true;
            }
            else {
                _this.viewPriceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.backToPriceBook = function () {
        $("#viewPriceBook").modal("hide");
        $("#myPriceBook").modal("hide");
    };
    // viewDocument() {
    //   this.displayFileModal = 'block'
    // }
    // onCloseHandled() {
    //   this.displayFileModal = 'none';
    // }
    AddEstimate1Component.prototype.onFileSelected = function () {
        var _this = this;
        var $img1 = document.querySelector('#file');
        if (typeof (FileReader) !== 'undefined') {
            var reader = new FileReader();
            reader.onload = function (e) {
                _this.imagePreview = e.target.result;
            };
            reader.readAsArrayBuffer($img1.files[0]);
        }
    };
    //VIEW PROZ DETAILS
    AddEstimate1Component.prototype.viewProzDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getProzProfile/' + this.billingAddressData.proId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.prozProfile = response.response[0];
                console.log("testPro" + JSON.stringify(_this.prozProfile));
            }
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    //VIEW PROZ DETAILS
    AddEstimate1Component.prototype.standardButton = function (serviceId) {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/standardViewPriceBook' + '/' + serviceId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                ////console.log("in 200")
                _this.viewItemDetails1 = response.response[0];
                //console.log("standard" + JSON.stringify(this.viewItemDetails))
                var obj = {
                    "staffId": _this.billingAddressData.employeeId,
                    "customerId": _this.billingAddressData.customerId,
                    "serviceId": serviceId,
                    "type": "STANDARD",
                    "name": _this.viewItemDetails1.name,
                    "quty": "1",
                    "units": "EACH",
                    "time": _this.viewItemDetails1.time,
                    "listPrice": _this.viewItemDetails1.listPrice,
                    "subTotal": _this.viewItemDetails1.listPrice * 1,
                    //"materialCost": this.viewItemDetails1.materialCost,
                    "laborCost": _this.viewItemDetails1.laborCost,
                    "proId": _this.viewItemDetails1.proId
                };
                //console.log("ESTIMATE PriceBook obj" + JSON.stringify(obj))
                // if (this.typeData == 'ADD') {
                _this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimatePriceBookSelection', obj)
                    .subscribe(function (data) {
                    var ConsData = data.json();
                    if (ConsData.status == 200) {
                        $("#viewPriceBook").modal("hide");
                        $("#myPriceBook").modal("hide");
                        _this.getPriceBookServiceList();
                        //this.router.navigate(['/staff/createEstimateNew'])
                    }
                    else {
                        //console.log('Failed to Add Record');
                    }
                }, function (error) {
                    //console.log(error);// Error getting the data
                });
                _this.viewPriceBookServiceResponse = true;
                // } else if (this.typeData == 'EDIT') {
                //   this.http.post(Global.url + '/editEstimatePriceBookSelection', obj)
                //     .subscribe(data => {
                //       var ConsData = data.json();
                //       //console.log("price data" + JSON.stringify(ConsData))
                //       if (ConsData.status == 200) {
                //         // this.router.navigate(['/staff/editEstimate', this.estimateNumber])
                //         $("#viewPriceBook").modal("hide");
                //         $("#myPriceBook").modal("hide");
                //       } else {
                //         //console.log('Failed to Add Record');
                //       }
                //     }, error => {
                //       //console.log(error);// Error getting the data
                //     });
                //   this.viewPriceBookServiceResponse = true;
                // }
            }
            else {
                _this.viewPriceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.valueButton = function (serviceId) {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/valuesViewPriceBook' + '/' + serviceId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                ////console.log("in 200")
                _this.viewItemDetails1 = response.response[0];
                //console.log("value" + JSON.stringify(this.viewItemDetails))
                ////console.log(this.viewItemDetails)
                var obj = {
                    "staffId": _this.billingAddressData.employeeId,
                    "customerId": _this.billingAddressData.customerId,
                    "serviceId": serviceId,
                    "type": "VALUE",
                    "name": _this.viewItemDetails1.name,
                    "quty": "1",
                    "units": "EACH",
                    "time": _this.viewItemDetails1.time,
                    "listPrice": _this.viewItemDetails1.listPrice,
                    "subTotal": _this.viewItemDetails1.listPrice * 1,
                    // "materialCost": this.viewItemDetails1.materialCost,
                    "laborCost": _this.viewItemDetails1.laborCost,
                    "proId": _this.viewItemDetails1.proId
                };
                ////console.log("ESTIMATE PriceBook obj" + JSON.stringify(obj))
                //if (this.typeData == 'ADD') {
                _this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimatePriceBookSelection', obj)
                    .subscribe(function (data) {
                    var ConsData = data.json();
                    if (ConsData.status == 200) {
                        $("#viewPriceBook").modal("hide");
                        $("#myPriceBook").modal("hide");
                        _this.getPriceBookServiceList();
                        // this.router.navigate(['/staff/createEstimateNew'])
                    }
                    else {
                        //console.log('Failed to Add Record');
                    }
                }, function (error) {
                    //console.log(error);// Error getting the data
                });
                _this.viewPriceBookServiceResponse = true;
                // } else if (this.typeData == 'EDIT') {
                //   this.http.post(Global.url + '/editEstimatePriceBookSelection', obj)
                //     .subscribe(data => {
                //       var ConsData = data.json();
                //       //console.log("price data" + JSON.stringify(ConsData))
                //       if (ConsData.status == 200) {
                //         // this.router.navigate(['/staff/editEstimate', this.estimateNumber])
                //       } else {
                //         //console.log('Failed to Add Record');
                //       }
                //     }, error => {
                //       //console.log(error);// Error getting the data
                //     });
                //   this.viewPriceBookServiceResponse = true;
                // }
            }
            else {
                _this.viewPriceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.memberButton = function (serviceId) {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/memberViewPriceBook' + '/' + serviceId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                ////console.log("in 200")
                _this.viewItemDetails1 = response.response[0];
                //console.log("member" + JSON.stringify(this.viewItemDetails1))
                ////console.log(this.viewItemDetails)
                var obj = {
                    "staffId": _this.billingAddressData.employeeId,
                    "customerId": _this.billingAddressData.customerId,
                    "serviceId": serviceId,
                    "type": "MEMBER",
                    "name": _this.viewItemDetails1.name,
                    "quty": "1",
                    "units": "EACH",
                    "time": _this.viewItemDetails1.time,
                    "listPrice": _this.viewItemDetails1.listPrice,
                    "subTotal": _this.viewItemDetails1.listPrice * 1,
                    // "materialCost": this.viewItemDetails1.materialCost,
                    "laborCost": _this.viewItemDetails1.laborCost,
                    "proId": _this.viewItemDetails1.proId
                };
                ////console.log("ESTIMATE PriceBook obj" + JSON.stringify(obj))
                // if (this.typeData == 'ADD') {
                _this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimatePriceBookSelection', obj)
                    .subscribe(function (data) {
                    var ConsData = data.json();
                    if (ConsData.status == 200) {
                        $("#viewPriceBook").modal("hide");
                        $("#myPriceBook").modal("hide");
                        // this.router.navigate(['/staff/createEstimateNew'])
                        _this.getPriceBookServiceList();
                    }
                    else {
                        //console.log('Failed to Add Record');
                    }
                }, function (error) {
                    //console.log(error);// Error getting the data
                });
                _this.viewPriceBookServiceResponse = true;
                // } else if (this.typeData == 'EDIT') {
                //   this.http.post(Global.url + '/editEstimatePriceBookSelection', obj)
                //     .subscribe(data => {
                //       var ConsData = data.json();
                //       //console.log("price data" + JSON.stringify(ConsData))
                //       if (ConsData.status == 200) {
                //         //this.router.navigate(['/staff/editEstimate', this.estimateNumber])
                //       } else {
                //         //console.log('Failed to Add Record');
                //       }
                //     }, error => {
                //       //console.log(error);// Error getting the data
                //     });
                //   this.viewPriceBookServiceResponse = true;
                // }
            }
            else {
                _this.viewPriceBookServiceResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    AddEstimate1Component.prototype.createEstimate = function () {
        var _this = this;
        if (this.filesToUpload.length > 0 && this.uploadFlag == false) {
            this.displyFlag = true;
            return false;
        }
        var obj = {
            "proId": this.billingAddressData.proId,
            "staffId": this.billingAddressData.employeeId,
            "managerId": this.loginStaffManagerId,
            "estimateNum": this.estimateID,
            "workOrderNum": this.workOrderNum,
            "dateCreated": this.fullDate,
            "modifiedOn": this.fullDate,
            "modifiedBy": this.loginData.loginCode,
            "channelManager": this.empName,
            "channelManagerId": this.channelManagerId,
            "customerId": this.billingAddressData.customerId,
            "splitRate": this.addEstimate.value.splitRate,
            "primaryTech": this.addEstimate.value.primaryTech,
            "secondaryTech": this.addEstimate.value.secondaryTech,
            "customerName": this.addEstimate.value.customerName,
            "customerEmailId": this.addEstimate.value.customerEmailId,
            "customerFirstName": this.addEstimate.value.customerFirstName,
            "customerLastName": this.addEstimate.value.customerLastName,
            "customerPhoneNumber": this.addEstimate.value.customerPhoneNumber,
            "customerPhoneType": this.addEstimate.value.customerPhoneType,
            "customerAddress": this.addEstimate.value.customerAddress,
            "customerState": this.addEstimate.value.customerState,
            "customerCity": this.addEstimate.value.customerCity,
            "customerZipCode": this.addEstimate.value.customerZipCode,
            "customerSendInvoiceBy": this.addEstimate.value.customerSendInvoiceBy,
            "customerInvoiceEmail": this.addEstimate.value.customerInvoiceEmail,
            "poNumber": this.addEstimate.value.poNumber,
            "customerSince": this.addEstimate.value.customerSince,
            // "stateName": this.addEstimate.value.stateName,
            "crossSt1": this.addEstimate.value.crossSt1,
            "crossSt2": this.addEstimate.value.crossSt2,
            "customerSource": this.addEstimate.value.customerSource,
            "customerPaymentMethod": this.addEstimate.value.customerPaymentMethod,
            "expectedStartDate": this.addEstimate.value.expectedStartDateLbl,
            "expectedEndDate": this.addEstimate.value.expectedEndDate,
            "frequency": this.addEstimate.value.frequency,
            "leadQuantity": this.addEstimate.value.leadQuantity,
            "creditCardRequired": this.addEstimate.value.creditCardRequired,
            "customerAdminNotes": this.addEstimate.value.customerAdminNotes,
            "doNotServe": this.addEstimate.value.doNotServe,
            "jobTitle": this.addEstimate.value.jobTitle,
            "jobEmail": this.addEstimate.value.jobEmail,
            "jobPhoneNumber": this.addEstimate.value.jobPhoneNumber,
            "jobPhoneType": this.addEstimate.value.jobPhoneType,
            "jobAddress": this.addEstimate.value.jobAddress,
            "jobState": this.addEstimate.value.jobState,
            "jobCity": this.addEstimate.value.jobCity,
            "jobZipCode": this.addEstimate.value.jobZipCode,
            "materialGD": this.addEstimate.value.materialGD,
            // "laborGD": this.addEstimate.value.laborGD,
            "priceBookListValue": this.priceBookListValue,
            "customMaterialListValue": this.customMaterialListValue,
            "taxPercentage": this.taxValue,
            "taxPercentValue": this.taxPercentCal,
            "customLaborListValue": this.customLaborListValue,
            "requireManagerApproval": this.addEstimate.value.requireManagerApproval,
            // "paymentMethods": this.addEstimate.value.paymentMethods,
            // "paymentValue": this.addEstimate.value.paymentValue,
            // "newPromoCode": this.addEstimate.value.newPromoCode,
            // "otherPromoCode": this.addEstimate.value.otherPromoCode,
            // "reqDiscount": this.addEstimate.value.reqDiscount,
            "instructions": this.addEstimate.value.instructions,
            "jobSiteNotice": this.addEstimate.value.jobSiteNotice,
            "estimateNotice": this.addEstimate.value.estimateNotice,
            "privateNotice": this.addEstimate.value.privateNotice,
            "setReminder": this.addEstimate.value.setReminder,
            "pricebookDescription": this.addEstimate.value.pricebookDescription,
            "estimateStatus": "DRAFT",
            "images": this.imageArray
        };
        ////console.log("obj" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateBasicDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                ////console.log("price data" + JSON.stringify(ConsData))
                _this.estimatePriceBook();
            }
            else {
                ////console.log('Failed to Add Record');
            }
        }, function (error) {
            ////console.log(error);// Error getting the data
        });
    };
    AddEstimate1Component.prototype.sendEstimate = function () {
        var _this = this;
        if (this.loginStaffDetailsList.estimatesReqMgApproval == 'true') {
            ////console.log("send to Manager list")
            if (this.filesToUpload.length > 0 && this.uploadFlag == false) {
                this.displyFlag = true;
                return false;
            }
            var obj = {
                "proId": this.billingAddressData.proId,
                "staffId": this.billingAddressData.employeeId,
                "managerId": this.loginStaffManagerId,
                "customerId": this.billingAddressData.customerId,
                "estimateNum": this.estimateID,
                "workOrderNum": this.workOrderNum,
                "dateCreated": this.fullDate,
                "modifiedBy": this.loginData.loginCode,
                "modifiedOn": this.fullDate,
                "channelManager": this.empName,
                "channelManagerId": this.channelManagerId,
                "splitRate": this.addEstimate.value.splitRate,
                "primaryTech": this.addEstimate.value.primaryTech,
                "secondaryTech": this.addEstimate.value.secondaryTech,
                "customerName": this.addEstimate.value.customerName,
                "customerEmailId": this.addEstimate.value.customerEmailId,
                "customerFirstName": this.addEstimate.value.customerFirstName,
                "customerLastName": this.addEstimate.value.customerLastName,
                "customerPhoneNumber": this.addEstimate.value.customerPhoneNumber,
                "customerPhoneType": this.addEstimate.value.customerPhoneType,
                "customerAddress": this.addEstimate.value.customerAddress,
                "customerState": this.addEstimate.value.customerState,
                "customerCity": this.addEstimate.value.customerCity,
                "customerZipCode": this.addEstimate.value.customerZipCode,
                "customerSendInvoiceBy": this.addEstimate.value.customerSendInvoiceBy,
                "customerInvoiceEmail": this.addEstimate.value.customerInvoiceEmail,
                "poNumber": this.addEstimate.value.poNumber,
                "customerSince": this.addEstimate.value.customerSince,
                "crossSt1": this.addEstimate.value.crossSt1,
                "crossSt2": this.addEstimate.value.crossSt2,
                "customerSource": this.addEstimate.value.customerSource,
                "customerPaymentMethod": this.addEstimate.value.customerPaymentMethod,
                "expectedStartDate": this.addEstimate.value.expectedStartDateLbl,
                "expectedEndDate": this.addEstimate.value.expectedEndDate,
                "frequency": this.addEstimate.value.frequency,
                "leadQuantity": this.addEstimate.value.leadQuantity,
                "creditCardRequired": this.addEstimate.value.creditCardRequired,
                "customerAdminNotes": this.addEstimate.value.customerAdminNotes,
                "doNotServe": this.addEstimate.value.doNotServe,
                "jobTitle": this.addEstimate.value.jobTitle,
                "jobEmail": this.addEstimate.value.jobEmail,
                "jobPhoneNumber": this.addEstimate.value.jobPhoneNumber,
                "jobPhoneType": this.addEstimate.value.jobPhoneType,
                "jobAddress": this.addEstimate.value.jobAddress,
                "jobState": this.addEstimate.value.jobState,
                "jobCity": this.addEstimate.value.jobCity,
                "jobZipCode": this.addEstimate.value.jobZipCode,
                "materialGD": this.addEstimate.value.materialGD,
                "laborGD": this.addEstimate.value.laborGD,
                "requireManagerApproval": this.addEstimate.value.requireManagerApproval,
                "instructions": this.addEstimate.value.instructions,
                "jobSiteNotice": this.addEstimate.value.jobSiteNotice,
                "estimateNotice": this.addEstimate.value.estimateNotice,
                "privateNotice": this.addEstimate.value.privateNotice,
                "setReminder": this.addEstimate.value.setReminder,
                "images": this.imageArray,
                "estimateStatus": "SENT TO MANAGER",
                "priceBookListValue": this.priceBookListValue,
                "customMaterialListValue": this.customMaterialListValue,
                "customLaborListValue": this.customLaborListValue,
                "taxPercentage": this.taxValue,
                "taxPercentValue": this.taxPercentCal,
                "channelManagerEmailId": this.channelManagerEmail,
                "pricebookDescription": this.addEstimate.value.pricebookDescription,
            };
            //console.log("obj" + JSON.stringify(obj))
            this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateBasicDetailsSendEmail', obj)
                .subscribe(function (data) {
                var ConsData = data.json();
                if (ConsData.status == 200) {
                    ////console.log("price data" + JSON.stringify(ConsData))
                    _this.estimatePriceBook();
                }
                else {
                    ////console.log('Failed to Add Record');
                }
            }, function (error) {
                ////console.log(error);// Error getting the data
            });
        }
        else {
            if (this.filesToUpload.length > 0 && this.uploadFlag == false) {
                this.displyFlag = true;
                return false;
            }
            ////console.log("send to Customer list")
            var obj = {
                "proId": this.billingAddressData.proId,
                "staffId": this.billingAddressData.employeeId,
                "estimateNum": this.estimateID,
                "workOrderNum": this.workOrderNum,
                "customerId": this.billingAddressData.customerId,
                "dateCreated": this.fullDate,
                "modifiedBy": this.loginData.loginCode,
                "modifiedOn": this.fullDate,
                "channelManager": this.empName,
                "channelManagerId": this.channelManagerId,
                "managerId": this.loginStaffManagerId,
                "splitRate": this.addEstimate.value.splitRate,
                "primaryTech": this.addEstimate.value.primaryTech,
                "secondaryTech": this.addEstimate.value.secondaryTech,
                "customerName": this.addEstimate.value.customerName,
                "customerEmailId": this.addEstimate.value.customerEmailId,
                "customerFirstName": this.addEstimate.value.customerFirstName,
                "customerLastName": this.addEstimate.value.customerLastName,
                "customerPhoneNumber": this.addEstimate.value.customerPhoneNumber,
                "customerPhoneType": this.addEstimate.value.customerPhoneType,
                "customerAddress": this.addEstimate.value.customerAddress,
                "customerState": this.addEstimate.value.customerState,
                "customerCity": this.addEstimate.value.customerCity,
                "customerZipCode": this.addEstimate.value.customerZipCode,
                "customerSendInvoiceBy": this.addEstimate.value.customerSendInvoiceBy,
                "customerInvoiceEmail": this.addEstimate.value.customerInvoiceEmail,
                "poNumber": this.addEstimate.value.poNumber,
                "customerSince": this.addEstimate.value.customerSince,
                "crossSt1": this.addEstimate.value.crossSt1,
                "crossSt2": this.addEstimate.value.crossSt2,
                "customerSource": this.addEstimate.value.customerSource,
                "customerPaymentMethod": this.addEstimate.value.customerPaymentMethod,
                "expectedStartDate": this.addEstimate.value.expectedStartDateLbl,
                "expectedEndDate": this.addEstimate.value.expectedEndDate,
                "frequency": this.addEstimate.value.frequency,
                "leadQuantity": this.addEstimate.value.leadQuantity,
                "creditCardRequired": this.addEstimate.value.creditCardRequired,
                "customerAdminNotes": this.addEstimate.value.customerAdminNotes,
                "doNotServe": this.addEstimate.value.doNotServe,
                "jobTitle": this.addEstimate.value.jobTitle,
                "jobEmail": this.addEstimate.value.jobEmail,
                "jobPhoneNumber": this.addEstimate.value.jobPhoneNumber,
                "jobPhoneType": this.addEstimate.value.jobPhoneType,
                "jobAddress": this.addEstimate.value.jobAddress,
                "jobState": this.addEstimate.value.jobState,
                "jobCity": this.addEstimate.value.jobCity,
                "jobZipCode": this.addEstimate.value.jobZipCode,
                "materialGD": this.addEstimate.value.materialGD,
                "laborGD": this.addEstimate.value.laborGD,
                "requireManagerApproval": this.addEstimate.value.requireManagerApproval,
                "instructions": this.addEstimate.value.instructions,
                "jobSiteNotice": this.addEstimate.value.jobSiteNotice,
                "estimateNotice": this.addEstimate.value.estimateNotice,
                "privateNotice": this.addEstimate.value.privateNotice,
                "setReminder": this.addEstimate.value.setReminder,
                "images": this.imageArray,
                "estimateStatus": "SENT TO CUSTOMER",
                "priceBookListValue": this.priceBookListValue,
                "customMaterialListValue": this.customMaterialListValue,
                "customLaborListValue": this.customLaborListValue,
                "taxPercentage": this.taxValue,
                "taxPercentValue": this.taxPercentCal,
                "pricebookDescription": this.addEstimate.value.pricebookDescription,
            };
            ////console.log("obj" + JSON.stringify(obj))
            this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEstimateBasicDetailsSendEmail', obj)
                .subscribe(function (data) {
                var ConsData = data.json();
                if (ConsData.status == 200) {
                    ////console.log("price data" + JSON.stringify(ConsData))
                    _this.estimatePriceBook();
                }
                else {
                    ////console.log('Failed to Add Record');
                }
            }, function (error) {
                ////console.log(error);// Error getting the data
            });
        }
    };
    //GENERATE SUBSCRIPTION RECEIPT
    AddEstimate1Component.prototype.generatePDF = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var image, proImage, documentDefinition;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, _global_config__WEBPACK_IMPORTED_MODULE_14__["Utility"].image2Base64('../../../assets/img/topproz_logo_blue.jpg')
                        //const proImage = await Utility.image2Base64('../../../assets/img/logo/redhat_plumbing.jpg')
                    ];
                    case 1:
                        image = _a.sent();
                        return [4 /*yield*/, _global_config__WEBPACK_IMPORTED_MODULE_14__["Utility"].image2Base64(this.prozProfile.image == 'assets/img/proz/company_default.jpg' ? "assets/img/proz/company_default.jpg" : _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + this.prozProfile.image)
                            // if (tproImage == '../../assets/img/proz/company_default.jpg') {
                            //   const proImage = await Utility.image2Base64(this.prozProfile.image)
                            // } else {
                            //    const proImage = await Utility.image2Base64(Global.url + this.prozProfile.image)
                            // }
                            // this.prozProfile.image == '../../assets/img/no-image.png'?this.proImage = "../../../assets/img/proz/company_default.jpg":this.proImage = Global.url + this.prozProfile.image
                            //const proImage = '../../assets/img/proz/company_default.jpg' ? await Utility.image2Base64(this.prozProfile.image) : await Utility.image2Base64(Global.url + this.prozProfile.image)
                        ];
                    case 2:
                        proImage = _a.sent();
                        documentDefinition = this.getDocumentDefinition(image, proImage);
                        //pdfMake.createPdf(documentDefinition).download(`estimate_${Utility.year}-${Utility.month}-${Utility.day}.pdf`);
                        pdfMake.createPdf(documentDefinition).open();
                        return [2 /*return*/];
                }
            });
        });
    };
    //GENERATE SUBSCRIPTION RECEIPT
    //GET DOCUMENT DEFINATION
    AddEstimate1Component.prototype.getDocumentDefinition = function (image, proImage) {
        return {
            // a string or { width: number, height: number }
            // pageSize: { width: 216, height: 279 },
            pageSize: 'A4',
            pageMargins: [40, 20, 40, 20],
            content: [
                {
                    columns: [
                        {
                            image: proImage,
                            width: 50,
                            height: 50,
                            alignment: 'left',
                            margin: [-10, 0, 0, 10]
                        },
                        [{
                                text: this.prozProfile.companyName,
                                style: 'leftHeader'
                            },
                            {
                                text: this.prozProfile.businessAddressLine1,
                                style: 'left',
                            },
                            {
                                text: this.prozProfile.city + ', ' + this.prozProfile.state + ' ' + this.prozProfile.zipCode,
                                style: 'left',
                            },
                            {
                                text: this.prozProfile.businessPhone,
                                style: 'left',
                            },
                            {
                                text: this.prozProfile.webMailId,
                                style: 'left',
                            }, {
                                text: this.prozProfile.businessEmail,
                                style: 'left',
                            }],
                        '\n',
                        [
                            {
                                text: 'Estimate No. : ' + this.estimateID,
                                style: 'rightHeader'
                            },
                            {
                                text: 'Estimate Date : ' + this.myDate,
                                style: 'rightHeader'
                            },
                        ],
                    ],
                },
                '\n',
                {
                    canvas: [
                        {
                            type: 'line',
                            x1: 530, y1: 0,
                            x2: 0, y2: 0,
                            lineWidth: 1
                        },
                    ]
                },
                {
                    columns: [
                        [{
                                text: '\n' + this.billingAddressData.customerName,
                                style: 'leftHeader',
                            },
                            {
                                text: this.billingAddressData.address,
                                style: 'left',
                            },
                            {
                                text: this.billingAddressData.city + ', ' + this.billingAddressData.state + ' ' + this.billingAddressData.zipCode,
                                style: 'left',
                            },
                            {
                                text: this.billingAddressData.phoneNumber,
                                style: 'left',
                            },
                            {
                                text: this.billingAddressData.emailId + ' \n',
                                style: 'left',
                            }],
                        [
                            {
                                text: '\nService Address ',
                                style: 'rightHeader',
                            },
                            {
                                text: this.serviceAddressData.address,
                                style: 'right',
                            },
                            {
                                text: this.serviceAddressData.city + ', ' + this.serviceAddressData.state + ' ' + this.serviceAddressData.zipCode + ' \n',
                                style: 'right',
                            },
                        ],
                    ],
                },
                '\n',
                {
                    table: {
                        widths: ['10%', '40%', '10%', '20%', '22%'],
                        body: [
                            [{
                                    text: 'Item#', bold: true, fillColor: ' #eeeee', color: 'white', alignment: 'center', fontSize: 10
                                }, { text: 'Description', bold: true, fillColor: ' #eeeee', color: 'white', alignment: 'center', fontSize: 10 }, { text: 'Quantity', bold: true, fillColor: ' #eeeee', color: 'white', alignment: 'center', fontSize: 10 }, { text: 'Unit Price', bold: true, fillColor: ' #eeeee', color: 'white', alignment: 'center', fontSize: 10 }, { text: 'Sub Total', bold: true, fillColor: ' #eeeee', color: 'white', alignment: 'center', fontSize: 10 }],
                            [{
                                    text: '1', fontSize: 10, alignment: 'center'
                                }, {
                                    text: this.addEstimate.value.pricebookDescription, fontSize: 10
                                }, {
                                    text: '1', alignment: 'center', fontSize: 10
                                }, {
                                    text: '$' + this.priceBookListValue, alignment: 'right', fontSize: 10
                                }, {
                                    text: '$' + this.priceBookListValue, alignment: 'right', fontSize: 10
                                }],
                            [{
                                    text: '2', fontSize: 10, alignment: 'center'
                                }, {
                                    text: this.addEstimate.value.materialGD, fontSize: 10
                                }, {
                                    text: '1', alignment: 'center', fontSize: 10
                                }, {
                                    text: '$' + (this.totalMaterialCostWithTax + this.customLaborListValue), alignment: 'right', fontSize: 10
                                }, {
                                    text: '$' + (this.totalMaterialCostWithTax + this.customLaborListValue), alignment: 'right', fontSize: 10
                                }],
                        ]
                    }
                },
                '\n',
                {
                    layout: 'noBorders',
                    table: {
                        body: [
                            [
                                {
                                    text: 'Payment Terms : ',
                                    alignment: 'left',
                                    fontSize: 10,
                                },
                                {
                                    text: this.billingAddressData.term,
                                    //alignment: 'left',
                                    fontSize: 10,
                                },
                                {
                                    text: 'Total Amount:',
                                    style: 'tableright',
                                },
                                {
                                    text: '$' + this.totalEstPriceBeforeDisc,
                                    style: 'rightnumber',
                                },
                            ],
                            [
                                {
                                    text: '',
                                    alignment: 'left'
                                },
                                {
                                    text: '',
                                    alignment: 'left'
                                },
                                {
                                    text: 'Discount',
                                    style: 'tableright',
                                },
                                {
                                    text: '$' + this.discountAmount + '',
                                    style: 'rightnumber',
                                },
                            ],
                            [
                                {
                                    text: '',
                                    alignment: 'left'
                                },
                                {
                                    text: '',
                                    alignment: 'left'
                                },
                                {
                                    text: 'Deposit Required',
                                    style: 'tableright',
                                },
                                {
                                    text: '$' + this.finalValue,
                                    style: 'rightnumber',
                                },
                            ],
                        ]
                    }
                },
                // {
                //   canvas: [
                //     {
                //       type: 'line',
                //       x1: 550, y1: 0,
                //       x2: 0, y2: 0,
                //       lineWidth: 1
                //     },
                //   ]
                // },
                // '\n',
                {
                    style: 'tableExample',
                    table: {
                        widths: ['108%', 0, 0, 0],
                        body: [
                            [
                                {
                                    text: 'Estimate Notes:' + this.addEstimate.value.estimateNotice,
                                    border: [true, true, true, true],
                                    bold: true,
                                    fontSize: 10,
                                },
                            ],
                        ]
                    }
                },
                // '\n\n',
                // {
                //   canvas: [
                //     {
                //       type: 'line',
                //       x1: 550, y1: 0,
                //       x2: 0, y2: 0,
                //       lineWidth: 1
                //     },
                //   ]
                // },
                '\n',
                {
                    columns: [
                        {
                            text: 'Generated By ',
                            fontSize: 10,
                        },
                        {
                            image: image,
                            width: 80,
                            height: 30,
                            style: 'leftImage'
                        },
                    ]
                },
                '\n',
                {
                    columns: [
                        {
                            text: 'Approve ',
                            fontSize: 14,
                            alignment: 'center',
                            background: 'green',
                            link: 'http://topproz.com.s3-website-us-east-1.amazonaws.com/auth/login/0'
                        },
                        {
                            text: 'Reject ',
                            fontSize: 14,
                            alignment: 'center',
                            background: 'red',
                            link: 'http://topproz.com.s3-website-us-east-1.amazonaws.com/auth/login/0'
                        },
                    ]
                },
            ],
            styles: {
                header: {
                    fontSize: 18,
                    bold: true,
                    margin: [0, 20, 0, 10],
                    decoration: 'underline'
                },
                leftHeader: {
                    margin: [5, 5, 0, 0],
                    alignment: 'left',
                    fontSize: 10,
                    bold: true
                },
                rightHeader: {
                    margin: [0, 5, -15, 2],
                    alignment: 'right',
                    fontSize: 10,
                    bold: true
                },
                left: {
                    margin: [5, 5, 0, 0],
                    alignment: 'left',
                    fontSize: 10,
                },
                right: {
                    margin: [0, 5, -15, 2],
                    alignment: 'right',
                    fontSize: 10,
                },
                tableright: {
                    margin: [240, 0, -15, 5],
                    alignment: 'right',
                    fontSize: 10,
                    bold: true
                },
                tableExample1: {
                    //margin: [0, 0, -3, 0],
                    alignment: 'right',
                    fontSize: 10
                },
                rightnumber: {
                    //// margin: [190, 5, -360, 5],
                    margin: [30, 0, -15, 5],
                    alignment: 'right',
                    fontSize: 10
                }, rightnumber1: {
                    margin: [195, 5, -15, 5],
                    fontSize: 10
                }, rightnumber2: {
                    margin: [195, 5, -15, 5],
                    fontSize: 10
                },
                leftImage: {
                    margin: [-360, 0, 0, 0],
                }
            },
        };
    };
    AddEstimate1Component = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            providers: [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"]],
            selector: 'app-add-estimate1',
            template: __webpack_require__(/*! ./add-estimate1.component.html */ "./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.html"),
            styles: [__webpack_require__(/*! ./add-estimate1.component.scss */ "./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"],
            _angular_http__WEBPACK_IMPORTED_MODULE_5__["Http"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"],
            ngx_spinner__WEBPACK_IMPORTED_MODULE_9__["NgxSpinnerService"],
            ng2_completer__WEBPACK_IMPORTED_MODULE_10__["CompleterService"],
            ng4_auto_complete__WEBPACK_IMPORTED_MODULE_11__["AutoCompleteService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"],
            _utilities_pdfmake_script_service__WEBPACK_IMPORTED_MODULE_13__["ScriptService"]])
    ], AddEstimate1Component);
    return AddEstimate1Component;
}());



/***/ }),

/***/ "./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-commonvanlynkheader></app-commonvanlynkheader>\r\n<app-prozadmin-sidemenu></app-prozadmin-sidemenu>\r\n<!-- Main Container -->\r\n<!-- Main Container -->\r\n<div class=\"main-container container-fluid\">\r\n  <!-- Page Container -->\r\n  <div class=\"page-container\">\r\n    <!-- Page Content -->\r\n    <div class=\"page-content\">\r\n      <!-- Page Breadcrumb -->\r\n      <div class=\"page-breadcrumbs\">\r\n        <ul class=\"breadcrumb\">\r\n          <li>\r\n            <i class=\"fa fa-home\"></i>\r\n            <a href=\"#\">Home</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Estimates</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">List of Estimates</a>\r\n          </li>\r\n          <li class=\"active\">Edit Estimate</li>\r\n        </ul>\r\n      </div>\r\n      <!-- /Page Breadcrumb -->\r\n      <!-- Page Header -->\r\n      <div class=\"page-header position-relative\">\r\n        <div class=\"header-title\">\r\n          <h1>Edit Estimate</h1>\r\n          <!-- &nbsp;&nbsp;<span style=\"color:red\">(INPROGRESS)</span> -->\r\n        </div>\r\n      </div>\r\n      <!-- /Page Header -->\r\n      <!-- Page Body -->\r\n      <div class=\"page-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-12 col-md-12 col-md-12 col-xs-12 \">\r\n                <div class=\"well with-header with-footer three-bordered \">\r\n                  <div class=\"header gray\">\r\n                    Edit Estimate\r\n                  </div>\r\n                  <!-- form1 -->\r\n                  <div id=\"registration-form\">\r\n                    <form [formGroup]=\"editEstimate\">\r\n                      <!-- Add Estimate -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"estimateNumLbl\">\r\n                                  <b>Customer ID<span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"customerId\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"dobLbl\">\r\n                                  <b>Work Order # <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control\" readonly type=\"text\" formControlName=\"workOrderNo\"\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"estimateNumLbl\">\r\n                                  <b>Estimate # <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"estimateNo\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"dobLbl\">\r\n                                  <b>Date Created <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input class=\"form-control\" type=\"date\" readonly formControlName=\"date\"\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <!-- NOTES: This Row is visible to Pro Only not to Customer -->\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"channelManagerLbl\">\r\n                                  <b>Channel Manager <span class=\"mandatory\"></span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" formControlName=\"channelManagerId\" required\r\n                                  [(ngModel)]=\"firstName\" (change)=\"getStaffName(firstName)\">\r\n                                  <option value=\"-1\">Select</option>\r\n                                  <option *ngFor=\"let data of channelManagerList\" value={{data.employeeId}}>\r\n                                    {{data.firstName}}-{{data.lastName}}\r\n                                  </option>\r\n                                </select>\r\n                                <!-- <input type=\"text\" class=\"form-control\" formControlName=\"channelManager\" readonly\r\n                                value=\"{{channelManagerList.firstName}}\"\r\n                                style=\"background-color: #F2F2F2; color: black;\"> -->\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"splitRateLbl\">\r\n                                  <b>Split Rate <span class=\"mandatory\"></span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" name=\"splitRate\" formControlName=\"splitRate\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"50/50\">50/50</option>\r\n                                  <option value=\"75/25\">75/25</option>\r\n                                  <option value=\"25/75\">25/75</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <!-- /NOTES: This Row is visible to Pro Only not to Customer -->\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"primaryTechLbl\">\r\n                                  <b>Primary Tech <span class=\"mandatory\">*</span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" formControlName=\"primaryTech\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"secondaryTechLbl\">\r\n                                  <b>Secondary Tech <span class=\"mandatory\"></span></b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <!-- <input type=\"text\" class=\"form-control\" formControlName=\"secondaryTech\"> -->\r\n                                <select class=\"form-control\" formControlName=\"secondaryTech\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option *ngFor=\"let data of employeeRole\" value={{data.firstName}}-{{data.lastName}}>\r\n                                    <b>{{data.role}}--{{data.firstName}}-{{data.lastName}}</b>\r\n                                  </option>\r\n                                </select>\r\n\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\" *ngIf=\"loginStaffDetailsResponse\">\r\n                            <div class=\"col-sm-3\" *ngIf=\"loginStaffDetailsList.estimatesReqMgApproval == ''\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" disabled=\"disabled\">\r\n                                    <span class=\"text\">Require Manager Approval</span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\" *ngIf=\"loginStaffDetailsList.estimatesReqMgApproval == 'false'\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" disabled=\"disabled\">\r\n                                    <span class=\"text\">Require Manager Approval</span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\" *ngIf=\"loginStaffDetailsList.estimatesReqMgApproval == 'true'\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" checked=\"checked\"\r\n                                      disabled=\"disabled\">\r\n                                    <span class=\"text\">Require Manager Approval </span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <!-- <label for=\"statusLbl\">\r\n                                  <b>Status <span class=\"mandatory\">*</span></b>\r\n                                </label> -->\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <!-- <select class=\"form-control\" id=\"status\" required>\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"Draft\">Draft</option>\r\n                                  <option value=\"Sent\">Sent</option>\r\n                                  <option value=\"Approved\">Approved</option>\r\n                                  <option value=\"Rejected\">Rejected</option>\r\n                                  <option value=\"FollowsUp\">Follows Up</option>\r\n                                  <option value=\"Canceled\">Canceled</option>\r\n                                </select> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <!-- Add Estimate -->\r\n\r\n\r\n                      <!-- Billing Address Details -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Billing Details\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"companyNameLbl\">\r\n                                  <b>Company/Customer Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"companyName\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\"\r\n                                    (keypress)=\"keyPress1($event)\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"emailIDLbl\">\r\n                                  <b>Email ID </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"emailId\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"firstNameLbl\">\r\n                                  <b>First Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"firstName\"\r\n                                    (keypress)=\"keyPress1($event)\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"lastNameLbl\">\r\n                                  <b>Last Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"lastName\"\r\n                                    (keypress)=\"keyPress1($event)\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"phoneNumberLbl\">\r\n                                  <b>Phone Number </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"phoneNumber\"\r\n                                    mask=\"000-000-0000\" readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"phoneType\">\r\n                                  <b>Phone Type </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select class=\"form-control\" formControlName=\"phoneType\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                                  <option value=\"Cell\">Cell</option>\r\n                                  <option value=\"Home\">Home</option>\r\n                                  <option value=\"Work\">Work</option>\r\n                                  <option value=\"Fax\">Fax</option>\r\n                                </select>\r\n\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"serviceAddressLbl\">\r\n                                  <b>Address </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"address\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"stateLbl\">\r\n                                  <b>State </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"stateRegistred\" name=\"status\"\r\n                                  data-bv-field=\"row-title\" formControlName=\"state\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                                <!-- <option value=\"\">Select</option>\r\n                                <option *ngFor=\"let data of statesData\" value={{data.stateName}}>\r\n                                  {{data.stateName}}\r\n                                </option> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"cityLbl\">\r\n                                  <b>City </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"city\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"zipCodeLbl\">\r\n                                  <b>Zip Code </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" minlength=\"5\" maxlength=\"6\"\r\n                                    formControlName=\"zipcode\" readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                                <!-- <div *ngIf=\"f.customerZipCode.errors.minlength\" style=\"color:red;font-size: 11px\">Invalid Zip Code\r\n                                        (5-6 digits)\r\n                                      </div> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"sendInvoiceToLbl\">\r\n                                  <b>Send Invoice By </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"invoiceBy\"\r\n                                  readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                <!-- <option value=\"E-Mail\">E-Mail</option>\r\n                                <option value=\"Cell\">Cell</option>\r\n                                <option value=\"US Mail\">US Mail</option>\r\n                              </select> -->\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"invoiceEmailLbl\">\r\n                                  <b>Invoice Email </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"invoiceEmail\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"termsLbl\">\r\n                                  <b>PO# </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"poNumber\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"customerSinceLbl\">\r\n                                  <b>Customer Since </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"customerSince\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <!-- <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"termsLbl\">\r\n                                <b>PO# </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <span class=\"input-icon icon-right\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"poNumber\">\r\n                              </span>\r\n                            </div>\r\n                          </div> -->\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"customerSinceLbl\">\r\n                                  <b>Payment Method</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"paymentMethod\"\r\n                                readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                              <!-- <option value=\"Cash\">Cash</option>\r\n                              <option value=\"Check\">Check</option>\r\n                              <option value=\"Credit Card\">Credit Card</option>\r\n                              <option value=\"Direct Deposit\">Direct Deposit</option>\r\n                              <option value=\"Finance\">Finance</option>\r\n                            </select> -->\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"leadQuantityLbl\">\r\n                                  <b>Lead Quality</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"leadQuantity\" formControlName=\"leadQuantity\"\r\n                                  required readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"frequencyLbl\">\r\n                                  <b>Frequency </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <select type=\"text\" class=\"form-control\" id=\"frequency\" formControlName=\"frequency\"\r\n                                  required style=\"background-color: #F2F2F2; color: black;\">\r\n                                  <option value=\"\">Select</option>\r\n                                  <option value=\"None\">None</option>\r\n                                  <option value=\"Weekly\">Weekly</option>\r\n                                  <option value=\"Monthly\">Monthly</option>\r\n                                  <option value=\"Quaterly\">Quarterly</option>\r\n                                  <option value=\"Yearly\">Yearly</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"adminNotesLbl\">\r\n                                  <b>Admin Notes </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"adminNotes\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" formControlName=\"doNotServe\"\r\n                                      readonly>\r\n                                    <span class=\"text\">Do Not Serve</span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n\r\n                              </div>\r\n                            </div>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Billing Address Details -->\r\n\r\n                      <!-- Service Location -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Service Location\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobTitleLbl\">\r\n                                  <b>Job Title </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-9\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"jobTitle\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"firstNameLbl\">\r\n                                  <b>First Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"firstName\"\r\n                                    (keypress)=\"keyPress1($event)\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"lastNameLbl\">\r\n                                  <b>Last Name </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"lastName\"\r\n                                    (keypress)=\"keyPress1($event)\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobEmailLbl\">\r\n                                  <b>Contact Email </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"serviceContactEmail\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobPhoneNumberLbl\">\r\n                                  <b>Contact Number </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"serviceContactNumber\" mask=\"000-000-0000\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobAddressLbl\">\r\n                                  <b>Address </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\"\r\n                                    formControlName=\"serviceAddress\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobStateLbl\">\r\n                                  <b>State </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"stateRegistred\" name=\"status\"\r\n                                  data-bv-field=\"row-title\" formControlName=\"serviceState\" readonly\r\n                                  style=\"background-color: #F2F2F2; color: black;\">\r\n                                <!-- <option value=\"\">Select</option>\r\n                                <option *ngFor=\"let data of statesData\" value={{data.stateName}}>\r\n                                  {{data.stateName}}\r\n                                </option> -->\r\n                                <!-- </select> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobCityLbl\">\r\n                                  <b>City </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"serviceCity\"\r\n                                    readonly style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"jobZipCodeLbl\">\r\n                                  <b>Zip Code </b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <input type=\"text\" class=\"form-control\" placeholder=\"\" minlength=\"5\" maxlength=\"6\"\r\n                                    formControlName=\"serviceZipcode\" readonly\r\n                                    style=\"background-color: #F2F2F2; color: black;\">\r\n                                </span>\r\n                                <!-- <div *ngIf=\"f.customerZipCode.errors.minlength\" style=\"color:red;font-size: 11px\">Invalid Zip Code\r\n                                (5-6 digits)\r\n                              </div> -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Service Location -->\r\n\r\n                      <!-- Add PriceBook Item -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Add PriceBook Items\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n                              <div class=\"flip-scroll\">\r\n                                <!-- Form 2 -->\r\n                                <!-- <form [formGroup]=\"addInventoryItem\"> -->\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <a type=\"submit\" class=\"btn btn-blue\" data-toggle=\"modal\" data-backdrop=\"false\"\r\n                                        data-target=\"#myPriceBook\"><i class=\"fa fa-plus\"></i>\r\n                                        Select PriceBook </a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div><br />\r\n                                <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                                  <thead class=\"flip-content bordered-palegreen\">\r\n                                    <tr>\r\n                                      <th width=\"10%\">\r\n                                        Item #\r\n                                      </th>\r\n                                      <th width=\"10%\">\r\n                                        Type\r\n                                      </th>\r\n                                      <th width=\"25%\">\r\n                                        Name\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        QTY\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Time &nbsp;&nbsp;( Hrs. )\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Units\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        List Price &nbsp;&nbsp;($)\r\n                                      </th>\r\n                                      <th width=\"10%\" class=\"center\">\r\n                                        Sub Total &nbsp;&nbsp;($)\r\n                                      </th>\r\n                                      <th width=\"5%\">\r\n                                        Delete\r\n                                      </th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <ng-container>\r\n                                    <tbody *ngIf=\"estimateViewResponse\">\r\n                                      <tr *ngFor=\"let data of estimatePriceBookData\">\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg:123456\"\r\n                                            value=\"{{data.serviceId}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Material/Labor\"\r\n                                            value=\"{{data.type}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"1\"\r\n                                            value=\"{{data.name}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Each\"\r\n                                            value=\"{{data.quantity }}\" class=\"form-control input-sm\"\r\n                                            [dropSpecialCharacters]=\"false\" mask=\"0*.00\" [(ngModel)]=\"data.quantity\"\r\n                                            (ngModelChange)=\"getPriceBookQuantity(data)\"\r\n                                            [ngModelOptions]=\"{standalone: true}\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Each\"\r\n                                            value=\"{{data.time}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" class=\"form-control input-sm\"\r\n                                            readonly style=\"background-color: #F2F2F2; color: black;\"\r\n                                            value=\"{{data.units}}\">\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                          <input type=\"text\" style=\"text-align: center;\" placeholder=\"Each\"\r\n                                            value=\"{{data.priceMarkUp}}\" class=\"form-control input-sm\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td>\r\n                                          <input type=\"text\" class=\"form-control input-sm\" style=\"text-align: center;\"\r\n                                            value=\"{{data.subTotal}}\" readonly\r\n                                            style=\"background-color: #F2F2F2; color: black;\">\r\n                                        </td>\r\n                                        <td class=\"center\">\r\n\r\n                                          <a class=\"btn btn-xs btn-danger shiny\" (click)=\"deletePriceBookItems(data)\">\r\n                                            <i class=\"fa fa-trash-o\"></i>\r\n                                          </a>\r\n                                        </td>\r\n                                      </tr>\r\n                                    </tbody>\r\n                                    <div *ngIf=\"!estimateViewResponse\">\r\n                                      <!-- <div class=\"text-center\">No Records Found</div> -->\r\n                                    </div>\r\n                                  </ng-container>\r\n                                </table>\r\n\r\n                                <br />\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-5\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostLbl\">\r\n                                        <h5><b>Pricebook Cost</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"materialCostVal\">\r\n                                        <h5><b class=\"text-right\">${{priceBookFinalValue}}</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <!-- </form> -->\r\n                                <!-- /Form 2 -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Add PriceBook Item -->\r\n\r\n                      <!-- Pricebook General Description -->\r\n                      <div class=\"row\" *ngIf=\"cusResponseStatus\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-title\">\r\n                                PriceBook Description\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"pricebookDescription\"\r\n                                    placeholder=\"Enter PriceBook Description\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Pricebook General Description -->\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-title\">\r\n                            Custom Labor and Material General Description\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <span class=\"input-icon icon-right\">\r\n                              <textarea rows=\"4\" class=\"form-control\" formControlName=\"materialGD\"\r\n                                placeholder=\"Enter General Description\"></textarea>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- Add Custom Material Start -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Add Custom Material\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n                              <div class=\"flip-scroll\">\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <a type=\"submit\" class=\"btn btn-blue\" data-toggle=\"modal\" data-backdrop=\"false\"\r\n                                        data-target=\"#customMaterial\"><i class=\"fa fa-plus\"></i>\r\n                                        Select Custom Material </a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 button-center\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                </div><br />\r\n                                <form [formGroup]=\"addCustomMaterial\">\r\n                                  <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                                    <thead class=\"flip-content bordered-palegreen\">\r\n                                      <tr>\r\n                                        <th width=\"12%\">\r\n                                          Item #\r\n                                        </th>\r\n                                        <!-- <th width=\"8%\">\r\n                                          Type\r\n                                        </th> -->\r\n                                        <th width=\"15%\">\r\n                                          Category\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          SubCategory\r\n                                        </th>\r\n                                        <th width=\"15%\" class=\"center\">\r\n                                          Name\r\n                                        </th>\r\n                                        <th width=\"8%\" class=\"center\">\r\n                                          Quantity\r\n                                        </th>\r\n                                        <th width=\"8%\" class=\"center\">\r\n                                          Units\r\n                                        </th>\r\n                                        <th width=\"8%\" class=\"center\">\r\n                                          Cost Price ($)\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          List Price($) (With Markup)\r\n                                        </th>\r\n                                        <th width=\"15%\" class=\"center\">\r\n                                          Sub Total($)\r\n                                        </th>\r\n                                        <th width=\"5%\">\r\n                                          Delete\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <ng-container>\r\n                                      <tbody>\r\n                                        <tr *ngFor=\"let data of estimateCustomMaterialData\">\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg:123456\"\r\n                                              value=\"{{data.itemId}}\" class=\"form-control input-sm\" readonly\r\n                                              style=\"background-color: #F2F2F2;\">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" placeholder=\"1\"\r\n                                              value=\"{{data.category}}\" class=\"form-control input-sm\" readonly\r\n                                              style=\"background-color: #F2F2F2;\">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" value=\"{{data.subCategory}}\"\r\n                                              class=\"form-control input-sm\" readonly\r\n                                              style=\"background-color: #F2F2F2; \">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" value=\"{{data.name}}\"\r\n                                              class=\"form-control input-sm\" readonly\r\n                                              style=\"background-color: #F2F2F2; \">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" placeholder=\" \"\r\n                                              value=\"{{data.quantity}}\" class=\"form-control input-sm\"\r\n                                              [dropSpecialCharacters]=\"false\" mask=\"0*.00\" [(ngModel)]=\"data.quantity\"\r\n                                              (ngModelChange)=\"getQuantityCMValue(data)\"\r\n                                              [ngModelOptions]=\"{standalone: true}\">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" class=\"form-control input-sm\"\r\n                                              readonly style=\"background-color: #F2F2F2;\" value=\"{{data.units}}\">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" class=\"form-control input-sm\"\r\n                                              readonly style=\"background-color: #F2F2F2; \" value=\"{{data.costPrice}}\">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                              value=\"{{data.priceMarkUp}}\" class=\"form-control input-sm\" readonly\r\n                                              style=\"background-color: #F2F2F2;\">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" class=\"form-control input-sm\" style=\"text-align: center;\"\r\n                                              value=\"{{data.subTotal}}\" readonly style=\"background-color: #F2F2F2; \">\r\n                                          </td>\r\n                                          <td class=\"center\">\r\n                                            <a class=\"btn btn-xs btn-danger\" (click)=\"deleteCustomMaterial(data)\">\r\n                                              <i class=\"fa fa-trash-o\"></i>\r\n                                            </a>\r\n                                          </td>\r\n                                        </tr>\r\n                                      </tbody>\r\n                                    </ng-container>\r\n                                  </table>\r\n                                </form>\r\n                                <br>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <b>Custom Material</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <!-- $ {{editEstimate.value.customMaterialFinalValue}} -->\r\n                                        $ {{customMaterialListValue}}\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-1\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <b>Tax %</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-1\" *ngIf=\"cusResponseStatus\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <!-- {{editEstimate.value.customMaterialTaxPercentage}} % -->\r\n                                        {{taxPercentage}}%\r\n                                        <!-- <input type=\"text\" class=\"form-control input-sm\" style=\"text-align: center;\"\r\n                                          formControlName = \"customMaterialTaxPercentage\" readonly style=\"background-color: gray; color: white;\"> -->\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <b>Tax Value</b>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <!-- $ {{editEstimate.value.customMaterialTaxPercentValue}} -->\r\n                                        $ {{taxPercentCal}}\r\n                                        <!-- <input type=\"text\" class=\"form-control input-sm\" style=\"text-align: center;\"\r\n                                          formControlName = \"customMaterialTaxPercentValue\" readonly style=\"background-color: gray; color: white;\"> -->\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <h5><b>Total Custom Material Cost</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        $ {{totalMaterialCostWithTax}}\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                <br>\r\n                                <!-- /Form 4 -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <br>\r\n                        </div>\r\n                      </div>\r\n                      <!-- Add Custom Material End -->\r\n                      <br />\r\n\r\n                      <!-- Add Custom Labor -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Add Custom Labor\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n\r\n                              <div class=\"flip-scroll\">\r\n                                <form [formGroup]=\"addCustomLaborMaterial\">\r\n                                  <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                                    <thead class=\"flip-content bordered-palegreen\">\r\n                                      <tr>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Type\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Staff Name\r\n                                        </th>\r\n                                        <th width=\"20%\" class=\"center\">\r\n                                          Description\r\n                                        </th>\r\n                                        <th width=\"5%\" class=\"center\">\r\n                                          QTY\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Units\r\n                                        </th>\r\n                                        <!-- <th width=\"10%\" class=\"center\">\r\n                                          Cost Price($)\r\n                                        </th> -->\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Bill Rate($/hr)\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Sub Total($)\r\n                                        </th>\r\n                                        <th width=\"10%\" class=\"center\">\r\n                                          Delete\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      <ng-container *ngIf=\"estimateViewResponse\">\r\n                                        <tr *ngFor=\"let data of estimateCustomLaborData\">\r\n                                          <td class=\"center\">{{data.type}}</td>\r\n                                          <td class=\"center\">{{data.staffName}}</td>\r\n                                          <td>{{data.description}}</td>\r\n                                          <td class=\"center\">{{data.quantity}}</td>\r\n                                          <td class=\"center\">{{data.units}}</td>\r\n                                          <!-- <td class=\"text-right\">${{data.listPrice}}</td> -->\r\n                                          <td class=\"text-right\">${{data.priceMarkUp}}</td>\r\n                                          <td class=\"text-right\">${{data.subTotal}}</td>\r\n                                          <td class=\"center\">\r\n                                            <a class=\"btn btn-xs btn-info\" data-toggle=\"modal\"\r\n                                              data-target=\"#editCustomLaborCostModal\"\r\n                                              (click)=\"viewCustomLabor(data.id)\"><i class=\"fa fa-pencil\"></i>\r\n                                            </a>&nbsp; &nbsp;\r\n                                            <a class=\"btn btn-xs btn-danger\" (click)=\"deleteCustomLabor(data)\">\r\n                                              <i class=\"fa fa-trash-o\"></i>\r\n                                            </a>\r\n                                          </td>\r\n                                        </tr>\r\n                                      </ng-container>\r\n                                      <ng-container *ngIf=\"!estimateViewResponse\">\r\n\r\n                                      </ng-container>\r\n                                      <ng-container formArrayName=\"customLaborMaterial\">\r\n                                        <tr\r\n                                          *ngFor=\"let item of addCustomLaborMaterial.get('customLaborMaterial').controls; let j = index;\"\r\n                                          [formGroupName]=\"j\">\r\n                                          <td>\r\n                                            <select class=\"form-control\" formControlName=\"type\" required\r\n                                              [(ngModel)]=\"roleName\" (change)=\"changeRole(roleName)\">\r\n                                              <option value=\"\">Select</option>\r\n                                              <option *ngFor=\"let data of roleData\" value={{data.roleName}}>\r\n                                                {{data.roleName}}\r\n                                              </option>\r\n                                            </select>\r\n                                            <span *ngIf=\"errormsgtype\" style=\"color: red;\">Please Select Type</span>\r\n                                          </td>\r\n                                          <td>\r\n                                            <select class=\"form-control\" formControlName=\"staffName\" required\r\n                                              [(ngModel)]=\"staffId\" (change)=\"getDetails(staffId)\">\r\n                                              <option value=\"\">Select</option>\r\n                                              <option *ngFor=\"let data of staffData\" value={{data.employeeId}}>\r\n                                                {{data.firstName}}-{{data.lastName}}\r\n                                              </option>\r\n                                            </select>\r\n                                            <span *ngIf=\"errormsg\" style=\"color: red;\">Please Select Staff</span>\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                              formControlName=\"description\" class=\"form-control input-md\">\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                              class=\"form-control input-sm\" formControlName=\"quantity\"\r\n                                              [dropSpecialCharacters]=\"false\" mask=\"0*.00\" [(ngModel)]=\"quantityValue\"\r\n                                              (ngModelChange)=\"getQuantityValue(quantityValue)\">\r\n                                            <span *ngIf=\"errormsgquant\" style=\"color: red;\">Please Select\r\n                                              Quantity</span>\r\n                                          </td>\r\n                                          <td>\r\n                                            <input type=\"text\" readonly style=\"text-align: center;\" placeholder=\"\"\r\n                                              formControlName=\"units\" class=\"form-control input-md\"\r\n                                              value=\"{{laborHours}}\">\r\n                                          </td>\r\n\r\n                                          <!-- <td class=\"text-right\">\r\n                                            <input type=\"text\" readonly style=\"text-align: center;\" placeholder=\"\"\r\n                                              formControlName=\"listPrice\" value=\"{{laborCostPrice}}\"\r\n                                              class=\"form-control input-sm\" [(ngModel)]=\"listPriceValue\"\r\n                                              (ngModelChange)=\"getPriceValue(listPriceValue)\">\r\n                                          </td> -->\r\n                                          <td class=\"text-right\">\r\n                                            <input type=\"text\" readonly style=\"text-align: center;\" placeholder=\"\"\r\n                                              value=\"{{laborCost}}\" class=\"form-control input-sm\">\r\n                                          </td>\r\n                                          <td class=\"text-right\">\r\n                                            <input type=\"text\" readonly style=\"text-align: center;\" placeholder=\"\"\r\n                                              formControlName=\"subTotal\" value=\"{{subTotalValue}}\"\r\n                                              class=\"form-control input-sm\">\r\n                                          </td>\r\n                                          <td class=\"center\">\r\n                                            <a class=\"btn btn-xs btn-success\" (click)=\"submitCustomLaborMaterial()\">\r\n                                              <i class=\"fa fa-check\"></i>\r\n                                            </a> &nbsp; &nbsp;\r\n                                            <a class=\"btn btn-xs btn-danger\" (click)=\"cancelCustomLAndM()\">\r\n                                              <i class=\"fa fa-times\"></i>\r\n                                            </a>\r\n                                          </td>\r\n                                        </tr>\r\n                                      </ng-container>\r\n                                    </tbody>\r\n                                  </table>\r\n                                </form>\r\n                                <br>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-4\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-2\">\r\n                                    <div class=\"form-group\">\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostLbl\">\r\n                                        <h5><b>Custom Labor</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <label for=\"customLabAndMatCostVal\">\r\n                                        <h5><b class=\"text-right\">${{customLaborListValue}}.00</b></h5>\r\n                                      </label>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <br>\r\n                                <!-- </form> -->\r\n                                <!-- /Form 4 -->\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Add Custom Labor -->\r\n\r\n\r\n                      <!-- Total Estimate Cost -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Total Estimate Cost\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-md-12\">\r\n                              <table class=\"table table-bordered table-hover\" style=\"border-color: 3px solid black;\">\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Estimated Price Before Discount</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: yellow;\">\r\n                                      ${{totalEstPriceBeforeDisc}}\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Discount</b></td>\r\n                                    <!-- <td width=\"20%\">Promo Code</td> -->\r\n                                    <td width=\"20%\">\r\n                                      <select class=\"form-control\" id=\"paymentMethods\"\r\n                                        formControlName=\"discountPromoCode\" [(ngModel)]=\"promoCode\"\r\n                                        (ngModelChange)=\"getPromoCodeDiscount(promoCode)\">\r\n                                        <option value=\"0\">Select</option>\r\n                                        <option *ngFor=\"let data of promotionData\" value={{data.promotionCode}}>\r\n                                          {{data.promotionCode}}\r\n                                        </option>\r\n                                      </select>\r\n                                    </td>\r\n                                    <td width=\"20%\">\r\n                                      <span class=\"input-icon icon-left\">\r\n                                        {{discountAmount}}\r\n                                      </span>\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;  background-color: red; color: white\">-\r\n                                      ${{promoValue}}.00</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Other Promos($)</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" style=\"text-align: center;\" formControlName=\"otherPromoCode\"\r\n                                        (change)=getOtherPromoCode() class=\"form-control input-sm\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: red; color: white\">-\r\n                                      ${{otherPromoValue}}.00\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Discounts ($)</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: red; color: white\">\r\n                                      <b> -${{totalDiscount}}.00 </b>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Total Estimated Price After Discount</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right; background-color: yellow;\">\r\n                                      <b>${{afterDiscount}}</b></td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Payment Methods</b></td>\r\n                                    <td width=\"20%\">\r\n                                      <select class=\"form-control\" id=\"paymentMethods\" formControlName=\"paymentMethods\"\r\n                                        required [(ngModel)]=\"paymentMode\"\r\n                                        (ngModelChange)=\"getPaymentMode(paymentMode)\">\r\n                                        <option value=\"\">Select</option>\r\n                                        <option *ngFor=\"let data of payMethods\" value={{data.paymentMethods}}>\r\n                                          {{data.paymentMethods}}\r\n                                        </option>\r\n                                      </select>\r\n                                    </td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" readonly\r\n                                        style=\"text-align: center; background-color: gray; color: white\"\r\n                                        placeholder=\"Eg: 10.00%\" formControlName=\"paymentValue\"\r\n                                        (change)=getPaymentValue() class=\"form-control input-sm\"\r\n                                        value=\"{{creditCardPF}}%\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;background-color: yellow;  \">\r\n                                      <b>${{paymentModeValue}}</b></td>\r\n                                  </tr>\r\n                                  <tr style=\"background-color: green; color: white\">\r\n                                    <td width=\"40%\">\r\n                                      <h5><b>Total Estimated Price ($)</b></h5>\r\n                                    </td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td style=\"width:20%; text-align: right;\">\r\n                                      <h5><b>${{totalValueAfterDiscounts}}</b></h5>\r\n                                    </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td width=\"40%\"><b>Required Deposit($)</b></td>\r\n                                    <td width=\"20%\"></td>\r\n                                    <td width=\"20%\">\r\n                                      <input type=\"text\" style=\"text-align: center;\" placeholder=\"Eg: 10.00%\"\r\n                                        formControlName=\"reqDepositValue\" value=\"10%\" (change)=\"getReqDiscount()\"\r\n                                        class=\"form-control input-sm\">\r\n                                    </td>\r\n                                    <td style=\"width:20%; text-align: right;background-color: skyblue;\">\r\n                                      <b>${{finalValue}}</b></td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              <br />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <!-- /Total Estimate Cost -->\r\n\r\n\r\n                      <!-- Special Instructions -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Special Instructions\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"specialInstructions\"\r\n                                    placeholder=\"Enter Your Installation Instructions\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Special Instructions -->\r\n\r\n                      <!-- Job Site Notice -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Job Site Notice\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"jobSiteNotice\"\r\n                                    placeholder=\"Enter Job Site Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"addPicturesLbl\">\r\n                                  <b>Add Pictures</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-2\">\r\n                              <div class=\"form-group\">\r\n                                <input type=\"file\" id=\"file-upload\" (change)=\"onSelectFile($event)\" class=\"uploadImage\"\r\n                                  [(ngModel)]=\"filesToUpload.length\" [ngModelOptions]=\"{standalone: true}\" multiple>\r\n\r\n                                <label for=\"file-upload\" class=\"custom-file-upload\">\r\n                                  <i class=\"fa fa-file-image-o\"></i> Choose Files\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-2\">\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <div *ngFor=\"let x of arr;let i=index\">\r\n                                  <br>\r\n                                  <figure class=\"imageNamecss\" class=\"icon1\">\r\n                                    {{imageNames[i]?.image}}<i (click)=\"removeSelectedFile(i)\"\r\n                                      style=\"float:right;margin-top:0px;color: red\" class=\"fa fa-times\"></i>\r\n                                    <img src=\"{{x.name}}\" height=\"100px\" width=\"120px\" readonly>\r\n\r\n                                  </figure>\r\n                                  &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                </div>\r\n                                <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"upload()\">\r\n                                  Upload\r\n                                </button>\r\n                                <br>\r\n                                <div *ngIf=\"displyFlag == true\">\r\n                                  <p style=\"color: red; font-size: 11px\">\r\n                                    Please upload the files\r\n                                  </p>\r\n                                  <br>\r\n                                  <div *ngIf=\"progressShow1\" class=\"progress-bar1 green stripes\">\r\n                                    <span [style.width.%]=\"percentage1\">\r\n                                      <p style=\"text-align: center;color:black;font-size:18px;\">\r\n                                        {{percentage1}}%</p>\r\n                                    </span>\r\n                                  </div>\r\n                                  <div *ngIf=\"progressHide1\" class=\"alert alert-block alert-success\"\r\n                                    style=\"height:3px;\">\r\n                                    <h4 class=\"alert-heading\" style=\"margin-top:-5px;text-align:center;\">\r\n                                      Images\r\n                                      Uploaded\r\n                                      Successfully</h4>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Job Site Notice -->\r\n\r\n                      <!-- Estimate Notice -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\">\r\n                            Estimate Notice\r\n                          </div>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"estimateNotice\"\r\n                                    placeholder=\"Enter Estimate Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Estimate Notice -->\r\n\r\n                      <!-- NOTES: This Section is visible to Pro Only not to Customer -->\r\n                      <!-- Private Notice -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                          <div class=\"form-title\" style=\"color:  #FF0000; border-bottom: 1px dashed #FF0000;\">\r\n                            Private Notice\r\n                          </div>\r\n\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"form-group\">\r\n                                <span class=\"input-icon icon-right\">\r\n                                  <textarea rows=\"4\" class=\"form-control\" formControlName=\"privateNotice\"\r\n                                    placeholder=\"Enter Private Notice\"></textarea>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Private Notice -->\r\n                      <!-- /NOTES: This Section is visible to Pro Only not to Customer -->\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <hr class=\"hr-gray-thick\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <!-- PRO Buttons -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-4 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <a (click)=\"listEstimate()\" class=\"btn btn-gray\"><i class=\"fa fa-arrow-left\"></i>\r\n                              Back to List Estimate</a>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <a (click)=\"updateEstimate()\" class=\"btn btn-blue\"><i class=\"fa fa-check\"></i>\r\n                              Update</a>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-4 button-center\">\r\n                          <div class=\"form-group\">\r\n                            <a id=\"formButton\" class=\"btn btn-purple\"><i class=\"fa fa-check\"></i>\r\n                              Estimate Analyzer</a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /PRO Buttons -->\r\n\r\n                      <!-- Set Reminder -->\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label for=\"setReminderLbl\">\r\n                              <b>Set Automatic Reminder to Follow up with Customer </b>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-3\">\r\n                          <div class=\"form-group\">\r\n                            <select class=\"form-control\" id=\"setReminder\" formControlName=\"setReminder\" required>\r\n                              <option value=\"\">Select</option>\r\n                              <option value=\"None\">None</option>\r\n                              <option value=\"in 1 Day\">in 1 Day</option>\r\n                              <option value=\"3 Days\">3 Days</option>\r\n                              <option value=\"1 Week\">1 Week</option>\r\n                              <option value=\"2 Weeks\">2 Weeks</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <!-- /Set Reminder -->\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <hr class=\"hr-gray-thick\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- Estimate Analyzer -->\r\n                      <!-- Estimate Analyzer -->\r\n                      <div id=\"form1\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                            <div class=\"form-title\">\r\n                              Estimate Analyzer\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-xs-12 col-md-12\">\r\n                                <table class=\"table table-bordered table-hover\" style=\"border-color: 3px solid black;\">\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Gross Sale (A) = Direct Cost(B) + Overhead Cost(C) +\r\n                                        Tech\r\n                                        Commssions (E) + Desired Profit (F)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{totalValueAfterDiscounts}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Desired Profit(%)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"20%\"\r\n                                          formControlName=\"desiredProfitInEA\" class=\"form-control input-sm\"\r\n                                          (change)=\"getDesiredProfit()\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\"> ${{desiredProfitValues}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Direct Cost</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                      </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                      <td width=\"40%\">Credit Card Processing Fees</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          placeholder=\"2.6%\" value=\"{{creditCardPF}}%\" class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{paymentModeValue}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Truck Operating Cost(TOC)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{toc}}.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Material Cost With Markup</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        ${{customMaterialListValue}}.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Labor Cost With Markup</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <!-- <td style=\"width:20%; text-align: right; \">${{customLaborListValue}}.00</td> -->\r\n                                      <td style=\"width:20%; text-align: right; \">${{customLaborListValue}}.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Other Cost(%)</td>\r\n                                      <td width=\"20%\">Describe</td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                          formControlName=\"otherCost\" (change)=\"getOtherCost()\"\r\n                                          class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        ${{oCost}}.00</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Total Direct Job Cost(B)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"> <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          placeholder=\"61.46%\" value=\"{{desiredPercentage}}%\"\r\n                                          class=\"form-control input-sm\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{directJobCostValue}}</b>\r\n                                      </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Gross Profit = Bid Price (A) - Direct Cost\r\n                                          (B)</b>\r\n                                      </td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\"><b>\r\n                                          ${{estimatedGrossProfitValue}}</b></td>\r\n                                    </tr>\r\n                                    <tr style=\"border-top-color: 2px solid black\" *ngIf=\"grossSaleValue\">\r\n                                      <td width=\"40%\">Estimated Channel Manager Commissions</td>\r\n                                      <td width=\"20%\"><b>{{empCommissionType}}</b></td>\r\n                                      <td width=\"20%\"> <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          class=\"form-control input-sm\" formControlName=\"channelManagerCommission\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;\">${{channelManagerCommValue}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Overhead Cost Estimate (C) = Set % *A\r\n                                        </b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          value=\"{{overHeadCostValue}}%\" class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\"><b>\r\n                                          ${{overHeadEstimateCostValue}}</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Employee Commission and Taxes</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\"><b>\r\n                                        </b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">PriceBook Hours (In Hours)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        {{priceBookHoursValue}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Custom Field Tech Hours (In Hours)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        {{customLaborFieldTechHours}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Total Hours (In Hours)</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        {{sumOfPriceBookCustomLaborHours}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Working Value</td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        ${{workingType}}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                      <td width=\"40%\">Estimated Tech Pay</td>\r\n                                      <td width=\"20%\"><b>{{commissionType}}</b></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        ${{totalHoursWithWorkingType}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Employee Worksman Comp Ins</td>\r\n                                      <td width=\"20%\">\r\n                                        <select class=\"form-control\" id=\"paymentMethods\"\r\n                                          formControlName=\"worksmanCompType\" (change)=\"getWorksmanCompValue()\">\r\n                                          <option value=\"YES\">YES</option>\r\n                                          <option value=\"NO\">NO</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2;\"\r\n                                          placeholder=\"7%\" class=\"form-control input-sm\" value=\"{{workmanCompIns}}%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        ${{workManEstComm}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">Employee Tax Company</td>\r\n                                      <td width=\"20%\">\r\n                                        <select class=\"form-control\" id=\"paymentMethods\" required\r\n                                          formControlName=\"empTaxCompType\" (change)=\"getEmployeeTaxCompType()\">\r\n                                          <option value=\"YES\">YES</option>\r\n                                          <option value=\"NO\">NO</option>\r\n                                        </select>\r\n                                      </td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2;\"\r\n                                          value=\"{{empTaxComp}}%\" class=\"form-control input-sm\"\r\n                                          (change)=\"getEmployeeTaxCompany()\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right; \">\r\n                                        ${{employeeTaxComm}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\">\r\n                                        <b>Employee Commissions, Taxes and Ins (E) </b>\r\n                                      </td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{employeeCommTaxInc}}</b>\r\n                                      </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Profit from Material Mark ups</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{totalMarkupValue}}.00</b></td>\r\n                                    </tr>\r\n                                    <!-- <tr>\r\n                                      <td width=\"40%\"><b>Estimated Profit from Labor Mark ups</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{customLaborMarkUpListValue}}.00</b></td>\r\n                                    </tr> -->\r\n                                    <!-- <tr>\r\n                                      <td width=\"40%\"><b>Total Estimated Profit from Material Mark ups</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                        <b>${{estimatedMarkUpProfit}}.00</b></td>\r\n                                    </tr> -->\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Net Profit Before tech commission</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td *ngIf=\"!netProfitMinusCheck\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color:green;\">\r\n                                        <b>{{netProfitLaborWithCurrency}}</b></td>\r\n                                      <td *ngIf=\"netProfitMinusCheck\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color:red;\">\r\n                                        <b>{{netProfitLaborWithCurrency}}</b></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Tech Commissions</b></td>\r\n                                      <td width=\"20%\"><b>{{loginStaffCommissionType}}</b></td>\r\n                                      <td width=\"20%\">\r\n                                        <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          value={{loginStaffCommission}}% class=\"form-control input-sm\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!redEstTechComm\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green   \">\r\n                                        {{estTechCommWithCurrency}}</td>\r\n                                      <td *ngIf=\"redEstTechComm\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red \">\r\n                                        {{estTechCommWithCurrency}}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <td width=\"40%\"><b>Estimated Total Tech Pay</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td style=\"width:20%; text-align: right;  \">\r\n                                        ${{totalEstTechPay}}</td>\r\n                                    </tr>\r\n                                    <tr style=\"border-top-color: 2px solid black\" *ngIf=\"netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Channel Manager Commissions</b></td>\r\n                                      <td width=\"20%\"><b>{{empCommissionType}}</b></td>\r\n                                      <td width=\"20%\"> <input type=\"text\" readonly\r\n                                          style=\"text-align: center; color: black; background-color: #F2F2F2\"\r\n                                          value=\"{{empCommission}}%\" class=\"form-control input-sm\"\r\n                                          formControlName=\"channelManagerCommission\"></td>\r\n                                      <td style=\"width:20%; text-align: right;\">\r\n                                        ${{channelManagerCommValueNetProfit}}\r\n                                      </td>\r\n                                    </tr>\r\n\r\n                                    <tr *ngIf=\"!netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Net Profit</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!red\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green;\">\r\n                                        <b>{{estNetProfitWithCurrency}}</b></td>\r\n                                      <td *ngIf=\"red\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                        <b>{{estNetProfitWithCurrency}}</b></td>\r\n                                    </tr>\r\n                                    <tr *ngIf=\"!netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Net Profit (%)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!redPer\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green;\">\r\n                                        <b>{{estNetProfitPercentWithCurrency}}%</b></td>\r\n                                      <td *ngIf=\"redPer\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                        <b>{{estNetProfitPercentWithCurrency}}</b></td>\r\n                                    </tr>\r\n                                    <tr *ngIf=\"netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Net Profit</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!red\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green;\">\r\n                                        <b>{{estNetProfitWithCMWithCurrency}}</b></td>\r\n                                      <td *ngIf=\"red\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                        <b>{{estNetProfitWithCMWithCurrency}}</b></td>\r\n\r\n                                    </tr>\r\n                                    <tr *ngIf=\"netProfitValue\">\r\n                                      <td width=\"40%\"><b>Estimated Net Profit (%)</b></td>\r\n                                      <td width=\"20%\"></td>\r\n                                      <td width=\"20%\">\r\n                                      </td>\r\n                                      <td *ngIf=\"!redPer\"\r\n                                        style=\"width:20%; text-align: right; color: black; background-color: green;\">\r\n                                        <b>{{estNetProfitPercentWithCMWithCurrency}}%</b></td>\r\n                                      <td *ngIf=\"redPer\"\r\n                                        style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                        <b>{{estNetProfitPercentWithCMWithCurrency}}%</b></td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                                </table>\r\n                                <br />\r\n                                <br />\r\n                                <div class=\"col-sm-12\">\r\n                                  <div class=\"col-sm-3 \">\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 \">\r\n                                    <div class=\"form-group\">\r\n                                      <!-- <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-success\"><i\r\n                                        class=\"fa fa-check\"></i>\r\n                                      Save Item</button> -->\r\n                                      <a id=\"formButton2\" class=\"btn btn-success\"><i class=\"fa fa-check\"></i>\r\n                                        Save Item</a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                      <a id=\"formButton1\" class=\"btn btn-purple\"><i class=\"fa fa-check\"></i>\r\n                                        Back to Estimate </a>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"col-sm-3 \">\r\n                                  </div>\r\n                                </div>\r\n                                <br />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <!-- /Estimate Analyzer -->\r\n                    </form>\r\n                  </div>\r\n                  <!-- /form1 -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Select Custom Material Popup -->\r\n        <div id=\"customMaterial\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Select Custom Material from Inventory:</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <br />\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-6\">\r\n                          <div class=\"form-group\">\r\n                            <span class=\"input-icon icon-right\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Eg: Search Custom Material\">\r\n                              <i class=\"fa fa-search\"></i>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                          <thead class=\"flip-content bordered-palegreen\">\r\n                            <tr>\r\n                              <th>\r\n                                Select\r\n                              </th>\r\n                              <th>\r\n                                Item ID\r\n                              </th>\r\n                              <th>\r\n                                Type\r\n                              </th>\r\n                              <th>\r\n                                Category\r\n                              </th>\r\n                              <th>\r\n                                Sub-Category\r\n                              </th>\r\n                              <th>\r\n                                Name\r\n                              </th>\r\n                              <th>\r\n                                Total Quantity\r\n                              </th>\r\n                              <th>\r\n                                List Price ($) (With MarkUp)\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n\r\n                          <tbody>\r\n                            <tr *ngFor=\"let data of customMaterialListDetails\">\r\n                              <!-- <tr> -->\r\n                              <td class=\"center\">\r\n                                <div class=\"checkbox\">\r\n                                  <label>\r\n                                    <input type=\"checkbox\" class=\"colored-success\" [(ngModel)]=\"data.selectedService\"\r\n                                      [ngModelOptions]=\"{standalone: true}\" value=\"1\">\r\n                                    <span class=\"text\"></span>\r\n                                  </label>\r\n                                </div>\r\n                              </td>\r\n                              <td>\r\n                                {{data.itemId}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.type}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.itemCategoryCode}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.itemSubCategoryCode}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.name}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.totalQuantity}}\r\n                              </td>\r\n                              <td>\r\n                                {{data.listPrice}}\r\n                              </td>\r\n\r\n                            </tr>\r\n                          </tbody>\r\n\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\" (click)=\"saveCustomMaterial()\"><i\r\n                          class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i>\r\n                        Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /Select Custom Material Popup -->\r\n\r\n\r\n        <!-- Select PriceBook Popup -->\r\n        <div id=\"myPriceBook\" data-backdrop=\"false\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\"\r\n          aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Select Standard/Member/Value from View PriceBook</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <!-- <div class=\"row\">\r\n                        <div class=\"col-lg-6\">\r\n                          <div class=\"form-group\">\r\n                            <span class=\"input-icon icon-right\">\r\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Eg: Search PriceBook\">\r\n                              <i class=\"fa fa-search\"></i>\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div> -->\r\n                      <br />\r\n\r\n                      <form [formGroup]=\"priceBookSearch\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <span class=\"text\">Category </span>\r\n                              <select class=\"form-control\" formControlName=\"category\">\r\n                                <option>--Select--</option>\r\n                                <option *ngFor='let data of priceBookData' value={{data.category}}>\r\n                                  {{data.category}}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <span class=\"text\">Sub-Category </span>\r\n                                <select class=\"form-control\" formControlName=\"subCategory\">\r\n                                  <option>--Select--</option>\r\n                                  <option *ngFor='let data of subcategoryData' value={{data.subCategory}}>\r\n                                    {{data.subCategory}}</option>\r\n                                </select>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <span class=\"text\">Title </span>\r\n                                <input class=\"form-control\" type=\"text\" formControlName=\"description\">\r\n\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <input type=\"button\" value=\"Search\" class=\"btn btn-blue\"\r\n                                  style=\"width:10em;margin-top:1em;\" (click)=\"priceBookSearchDetails()\">\r\n\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n\r\n                      <br />\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                          <thead class=\"flip-content bordered-palegreen\">\r\n                            <tr>\r\n                              <th>\r\n                                Preview\r\n                              </th>\r\n                              <th>\r\n                                Service ID\r\n                              </th>\r\n                              <th>\r\n                                Main Category\r\n                              </th>\r\n                              <th>\r\n                                Sub-Category\r\n                              </th>\r\n                              <th>\r\n                                Title\r\n                              </th>\r\n                              <th>\r\n                                Standard\r\n                              </th>\r\n                              <th>\r\n                                Value\r\n                              </th>\r\n                              <th>\r\n                                Member\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <ng-container *ngIf=\"priceBookSearchData\">\r\n                              <tr *ngFor=\"let data of priceBookListDetails\">\r\n                                <td class=\"center\">\r\n                                  <a type=\"submit\" class=\"btn btn-blue\" data-toggle=\"modal\" data-backdrop=\"false\"\r\n                                    data-target=\"#viewPriceBook\" (click)=\"viewServicePriceBookService(data)\"><i\r\n                                      class=\"fa fa-eye\"></i>\r\n                                  </a>\r\n                                </td>\r\n                                <td>\r\n                                  {{data.serviceId}}\r\n                                </td>\r\n                                <td>\r\n                                  {{data.category}}\r\n                                </td>\r\n                                <td>\r\n                                  {{data.subCategory}}\r\n                                </td>\r\n                                <td>\r\n                                  {{data.description}}\r\n                                </td>\r\n                                <td>\r\n                                  {{data.standard}}\r\n                                </td>\r\n                                <td>\r\n                                  {{data.value}}\r\n                                </td>\r\n                                <td>\r\n                                  {{data.member}}\r\n                                </td>\r\n                              </tr>\r\n                            </ng-container>\r\n                          </tbody>\r\n                        </table>\r\n                        <div *ngIf=\"!priceBookSearchData\">\r\n                          <span\r\n                            style=\"text-align:center;color:red;margin-right:30em;margin-left: 30em;font-size: larger;margin-top:4em;\">NO\r\n                            RECORDS FOUND </span>\r\n                        </div>\r\n                        <div *ngIf=\"priceBookSearchData\">\r\n                          <span\r\n                            style=\"text-align:center;color:red;margin-right:30em;margin-left: 30em;font-size: larger;margin-top:4em;\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <br />\r\n                      <br />\r\n                      <div *ngIf=\"priceBookSearchData\">\r\n                        Total Count of priceBook Records : {{totalPb}}\r\n                      </div>\r\n                      <div *ngIf=\"!priceBookSearchData\">\r\n                        Total Count of priceBook Records : {{totalPb}}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <!-- <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\"\r\n                        (click)=\"saveSelectedInventory()\"><i class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div> -->\r\n                  <div class=\"col-lg-4 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"\r\n                        (click)=\"cancelSelectedInventory()\"><i class=\"fa fa-arrow-left\"></i>\r\n                        Back to Add Item List</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /Select Inventory Popup -->\r\n\r\n        <!-- View Price Book Popup  Popup -->\r\n        <div id=\"viewPriceBook\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>View Pricebook Item</b></span>\r\n                </div>\r\n                <div class=\"modal-body\" *ngIf=\"viewPriceBookServiceResponse\">\r\n                  <br />\r\n                  <form class=\"form-horizontal\" role=\"form\">\r\n\r\n                    <!-- <div class=\"row\">\r\n                            <div class=\"col-sm-12\"> -->\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"col-sm-5\">\r\n                          <div class=\"form-group\">\r\n                            <div class=\"widget-body text-center\">\r\n                              <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"></ngx-gallery>\r\n\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;\r\n                        <div class=\"col-sm-1\"></div>\r\n                        <div class=\"col-sm-3\">\r\n                          <div class=\"form-group\">\r\n                            <!-- <h3><b>{{priceBookListDetailsService.title}}</b></h3> -->\r\n                            <p>{{priceBookListDetailsService.category}}/{{priceBookListDetailsService.subCategory}}</p>\r\n                            <!-- <p>PERFORMANCE, WATER, CONSERVATION, QUALITY</p> -->\r\n                            <!-- <p>Pressure-Assested Technology offersthe only true high-performance, low\r\n                            consumer expectations.</p> -->\r\n                            <p>{{priceBookListDetailsService.serviceDescription}}\r\n                            </p><br />\r\n                            <h5><b>Installation Instructions</b></h5>\r\n                            <p>{{priceBookListDetailsService.instructions}}</p>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-sm-2\">\r\n                          <div class=\"col-sm-12 button-center\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <input name=\"apply\" type=\"radio\" class=\"colored-success\">\r\n                                <button type=\"submit\" (click)=\"standardButton(priceBookListDetailsService.serviceId)\"\r\n                                  class=\"btn btn-warning btn-lg btn-block\">\r\n                                  Standard<br />\r\n                                  <h4><b>${{priceBookListDetailsService.standard}}</b></h4>\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-12 button-center\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <input name=\"apply\" type=\"radio\" class=\"colored-success\">\r\n                                <button type=\"submit\" (click)=\"valueButton(priceBookListDetailsService.serviceId)\"\r\n                                  class=\"btn btn-primary btn-lg btn-block\">\r\n                                  Value<br />\r\n                                  <h4><b>${{priceBookListDetailsService.value}}</b></h4>\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-12 button-center\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                <input name=\"apply\" type=\"radio\" class=\"colored-success\">\r\n                                <button type=\"submit\" (click)=\"memberButton(priceBookListDetailsService.serviceId)\"\r\n                                  class=\"btn btn-magenta btn-lg btn-block\">\r\n                                  Member<br />\r\n                                  <h4><b>${{priceBookListDetailsService.member}}</b></h4>\r\n                                </button>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <br><br>\r\n\r\n\r\n\r\n\r\n                    <br />\r\n                    <!-- <div class=\"row\">\r\n                      <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                          <button type=\"submit\" (click)=\"addToEstimateButton()\" class=\"btn btn-lg btn-block btn-gray\"><i\r\n                              class=\"fa fa-file-o\"></i>\r\n                            Add to Estimate\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3 button-center\">\r\n                        <div class=\"form-group\">\r\n                          <button type=\"submit\" (click)=\"addToInvoiceButton()\" class=\"btn btn-lg btn-block btn-gray\"><i\r\n                              class=\"fa fa-dollar\"></i>\r\n                            Add to Invoice\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-2\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                    </div> -->\r\n\r\n                    <!-- <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter the Tech Notes\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div> -->\r\n\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3 button-center\">\r\n                        <div class=\"form-group\">\r\n                          <button type=\"submit\" (click)=\"backToPriceBook()\" class=\"btn btn-blue\"><i\r\n                              class=\"fa fa-arrow-left\"></i>\r\n                            Back to PriceBook\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3 button-center\">\r\n                        <div class=\"form-group\">\r\n                          <button type=\"submit\" data-toggle=\"modal\" data-target=\"#myModal\" (click)=\"viewDocument()\"\r\n                            class=\"btn btn-gray\"><i class=\"fa fa-file\"></i>\r\n                            View Documents\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <!-- </div>\r\n                          </div> -->\r\n                    <!-- Modal- STARTS HERE -->\r\n                    <div class=\"backdrop\" [ngStyle]=\"{'display':displayFileModal}\"></div>\r\n                    <div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{'display':displayFileModal}\">\r\n                      <!-- .modal-dialog - Starts Here -->\r\n                      <div class=\"modal-dialog\"\r\n                        style=\"overflow-y: scroll; max-height:85%; width: 840px; margin-top: 50px; margin-bottom:50px;\">\r\n                        <!-- .modal-content - Starts Here -->\r\n                        <div class=\"modal-content\">\r\n                          <!-- .modal-header - Starts Here -->\r\n                          <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"onCloseHandled()\">\r\n                              <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                          </div>\r\n                          <!-- .modal-header - Ends Here -->\r\n                          <!-- .modal-body - Starts Here -->\r\n                          <!-- <modal class=\"custom-modal-2\"> -->\r\n                          <div class=\"modal-body\">\r\n                            <pdf-viewer [src]=\"imagePreview\" [render-text]=\"true\" style=\"display: block;\"></pdf-viewer>\r\n                            <!-- <object [data]=\"imagePreview\" type=\"application/pdf\">\r\n<embed [src]=\"imagePreview\" type=\"application/pdf\" />\r\n</object> -->\r\n                            <!-- <iframe [src]=\"imagePreview | safe\"></iframe> -->\r\n                          </div>\r\n                          <!-- </modal> -->\r\n                          <!-- .modal-body - Ends Here -->\r\n                          <!-- .modal-footer - Starts Here -->\r\n                          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                          <!-- .modal-footer - Ends Here -->\r\n                        </div>\r\n                        <!-- .modal-content - Ends Here -->\r\n                      </div>\r\n                      <!-- .modal-dialog - Starts Here -->\r\n                    </div>\r\n\r\n\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              <!-- <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\" (click)=\"saveCustomMaterial()\"><i\r\n                          class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i>\r\n                        Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n            </div> <!-- / .modal-content -->\r\n          </div>\r\n        </div>\r\n        <!-- /View Price Book Popup -->\r\n        <!-- Edit Custom Labor Popup -->\r\n        <div id=\"editCustomLaborCostModal\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-md\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Edit Custom Labor </b></span>\r\n                </div>\r\n                <form [formGroup]=\"editCustomLaborCost\">\r\n                  <div class=\"modal-body\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"itemLbl\">\r\n                            <b>Item</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" readonly class=\"form-control\" placeholder=\"\" formControlName=\"item\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"typeLbl\">\r\n                            <b>Type</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <select class=\"form-control\" formControlName=\"type\" required [(ngModel)]=\"roleName\"\r\n                            (change)=\"changeRole(roleName)\">\r\n                            <option value=\"\">Select</option>\r\n                            <option *ngFor=\"let data of roleData\" value={{data.roleName}}>\r\n                              {{data.roleName}}\r\n                            </option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"descriptionLbl\">\r\n                            <b>Staff Name</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <select class=\"form-control\" formControlName=\"staffId\" required [(ngModel)]=\"staffId\"\r\n                              (change)=\"getDetails(staffId)\">\r\n                              <option value=\"\">Select</option>\r\n                              <option *ngFor=\"let data of staffData\" value={{data.employeeId}}>\r\n                                {{data.firstName}}-{{data.lastName}}\r\n                              </option>\r\n                            </select>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"descriptionLbl\">\r\n                            <b>Name</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"\" formControlName=\"description\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"quantityLbl\">\r\n                            <b>Quantity</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" placeholder=\"\" class=\"form-control input-sm\" formControlName=\"quantity\"\r\n                              [dropSpecialCharacters]=\"false\" mask=\"0*.00\" [(ngModel)]=\"quantityValue\"\r\n                              (ngModelChange)=\"getQuantityValue(quantityValue)\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"quantityLbl\">\r\n                            <b>Units</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" class=\"form-control\" readonly placeholder=\"\" formControlName=\"units\">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"quantityLbl\">\r\n                            <b>Bill Rate($/hr)</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" readonly placeholder=\"\" formControlName=\"priceMarkUp\"\r\n                              value=\"{{laborCost}}\" class=\"form-control \">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <label for=\"quantityLbl\">\r\n                            <b>Sub Total</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                          <span class=\"input-icon icon-right\">\r\n                            <input type=\"text\" readonly placeholder=\"\" formControlName=\"subTotal\"\r\n                              value=\"{{subTotalValue}}\" class=\"form-control \">\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </form>\r\n                <!-- </div> -->\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"col-lg-3\">\r\n                </div>\r\n                <div class=\"col-lg-3 button-center\">\r\n                  <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\"\r\n                    (click)=\"updateCustomLaborMaterial()\"><i class=\"fa fa-check\"></i>\r\n                    Update</button>\r\n                </div>\r\n                <div class=\"col-lg-3 button-center\">\r\n                  <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i>\r\n                    Cancel</button>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- /Edit Custom Labor Popup -->\r\n        <!-- Custom Labor & Material Popup -->\r\n        <div id=\"customLaborAndMaterial\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-lg\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <div class=\"widget-header blue\">\r\n                  <span class=\"widget-caption\"><b>Custom Labor & Material</b></span>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <br />\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                          <button type=\"submit\" class=\"btn btn-gray\" (click)=\"addCustomLaborOrMaterial()\">\r\n                            <i class=\"fa fa-user-plus\"></i>Add Custom Labor/Material</button>\r\n                        </div>\r\n                      </div><br />\r\n                      <div class=\"table-scrollable\">\r\n                        <table class=\"table table-bordered table-striped table-condensed \">\r\n                          <thead class=\" bordered-purple\">\r\n                            <tr>\r\n                              <th>\r\n                                Item #\r\n                              </th>\r\n                              <th>\r\n                                Type\r\n                              </th>\r\n                              <th>\r\n                                Qty\r\n                              </th>\r\n                              <th>\r\n                                Units\r\n                              </th>\r\n                              <th>\r\n                                Description\r\n                              </th>\r\n                              <th>\r\n                                Vendor\r\n                              </th>\r\n                              <th>\r\n                                Unit Cost\r\n                              </th>\r\n                              <th>\r\n                                Rate (Cost Plus Mark Up)\r\n                              </th>\r\n                              <th>\r\n                                Extended Cost With Mark Up\r\n                              </th>\r\n                            </tr>\r\n                            <!-- <tr>\r\n                                  <th width=\"10%\">\r\n                                    Item #\r\n                                  </th>                                      \r\n                                  <th width=\"19%\">\r\n                                    Type\r\n                                  </th>\r\n                                  <th width=\"10%\">\r\n                                    QTY\r\n                                  </th>\r\n                                  <th width=\"13%\">\r\n                                    Units\r\n                                  </th>\r\n                                  <th width=\"20%\"  >\r\n                                    Description\r\n                                  </th>\r\n                                  <th width=\"18%\">\r\n                                    Vendor\r\n                                  </th>\r\n                                  <th width=\"5%\">\r\n                                  Unit Cost\r\n                                  </th>\r\n                                  <th width=\"5%\">\r\n                                    Rate <br/>\r\n                                   (Cost+MarkUp)\r\n                                  </th>\r\n                                  <th width=\"5%\">\r\n                                           Extended Cost With Mark Up\r\n                                  </th>                                    \r\n                         \r\n                                  <!-- <th>\r\n                                                Delete\r\n                                              </th> \r\n                                </tr> -->\r\n                          </thead>\r\n                          <tbody>\r\n                            <!-- Row 1 -->\r\n                            <tr>\r\n                              <td>1</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"6\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"6 Inch PVC Connector\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$50.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$65.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$390.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 1 -->\r\n                            <!-- Row 2 -->\r\n                            <tr>\r\n                              <td>2</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"3\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"6 Inch Elbow\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$25.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$35.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$105.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 2 -->\r\n                            <!-- Row 3 -->\r\n                            <tr>\r\n                              <td>3</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Sand and Concrete\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$225.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$225.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 3 -->\r\n                            <!-- Row 4 -->\r\n                            <tr>\r\n                              <td>4</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"16\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Master Tech\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$165.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$165.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$2640.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 4 -->\r\n                            <!-- Row 5 -->\r\n                            <tr>\r\n                              <td>5</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"Raul dgging 3x4' ft hole\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 5 -->\r\n                            <!-- Row 6 -->\r\n                            <tr>\r\n                              <td>6</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\"\r\n                                  value=\"Jose G, dgging tunnel to kitchen\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$420.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 6 -->\r\n                            <!-- Row 7 -->\r\n                            <tr>\r\n                              <td>7</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\" value=\"Permit\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$100.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$150.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 7 -->\r\n                            <!-- Row 8 -->\r\n                            <tr>\r\n                              <td>8</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"70ft, 6 Inch trenchless pull\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                  <option value=\"Other\">Other</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$450.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$675.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$675.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 8 -->\r\n                            <!-- Row 9 -->\r\n                            <tr>\r\n                              <td>9</td>\r\n                              <td>\r\n                                <select class=\"form-control\" required>\r\n                                  <option value=\"OTHER\">OTHER</option>\r\n                                  <option value=\"MATERIAL\">MATERIAL</option>\r\n                                  <option value=\"PERMIT\">PERMIT</option>\r\n                                  <option value=\"LABOR\">LABOR</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"1\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"EACH\">EACH</option>\r\n                                  <option value=\"INCHES\">INCHES</option>\r\n                                  <option value=\"HOUR\">HOUR</option>\r\n                                  <option value=\"DAY\">DAY</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: left;\" placeholder=\"\"\r\n                                  value=\"Subcontracted Service\" class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td><select class=\"form-control\" required>\r\n                                  <option value=\"Other\">Other</option>\r\n                                  <option value=\"Homedepot\">Homedepot</option>\r\n                                  <option value=\"Lowes\">Lowes</option>\r\n                                  <option value=\"Google\">Google</option>\r\n                                  <option value=\"CityOfVentura\">City of Ventura</option>\r\n                                  <option value=\"AngelPlumbing\">Angel Plumbing</option>\r\n                                  <option value=\"LeakDetection\">Leak Detection</option>\r\n                                </select>\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                              <td>\r\n                                <input type=\"text\" style=\"text-align: center;\" placeholder=\"\" value=\"$300.00\"\r\n                                  class=\"form-control input-sm\">\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 9 -->\r\n                            <!-- Row 10 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Material Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $720\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 10 -->\r\n                            <!-- Row 11 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Material Tax</b>\r\n                              </td>\r\n                              <td>\r\n                                $0.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 11 -->\r\n                            <!-- Row 12 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n\r\n                                <b>Labor Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $3,480.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 12 -->\r\n                            <!-- Row 13 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Misc Total</b>\r\n                              </td>\r\n                              <td>\r\n                                $1,125.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 13 -->\r\n                            <!-- Row 13 -->\r\n                            <tr>\r\n                              <td colspan=\"7\"></td>\r\n                              <td>\r\n                                <b>Total Project Direct Cost</b>\r\n                              </td>\r\n                              <td>\r\n                                $5,325.00\r\n                              </td>\r\n                            </tr>\r\n                            <!-- /Row 13 -->\r\n\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-blue\" data-dismiss=\"modal\" (click)=\"saveSelectedLabor()\"><i\r\n                          class=\"fa fa-check\"></i>\r\n                        Save</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3 button-center\">\r\n                    <div class=\"form-group\">\r\n                      <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\" (click)=\"cancelSelectedLabor()\"><i\r\n                          class=\"fa fa-times\"></i>\r\n                        Cancel</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div> <!-- / .modal-content -->\r\n            </div>\r\n          </div>\r\n          <!-- /Custom Labor & Material Popup -->\r\n\r\n\r\n\r\n        </div>\r\n        <!-- /Page Body -->\r\n        <!-- /Page Body -->\r\n      </div>\r\n      <!-- /Page Content -->\r\n    </div>\r\n    <!-- /Page Container -->\r\n  </div>\r\n</div>\r\n<!-- /Main Container -->\r\n<!-- /Main Container -->"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.scss":
/*!************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.scss ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-title {\n  color: #5db2ff;\n  border-bottom: 1px dashed #5db2ff;\n  /*display: block;\r\n     padding: 8px 0;*/\n  font-size: 15px;\n  font-weight: bold;\n  /*  color: #5DB2FF;\r\n    margin-bottom: 15px;*/ }\n\n.mandatory {\n  font-weight: bold;\n  color: #FF0000;\n  font-size: 16px; }\n\n.hr-gray-thick {\n  border-top: 3px solid #333 !important; }\n\n.hr-gray {\n  border-top: 1px solid #333 !important; }\n\ninput {\n  color: black; }\n\n.mock {\n  color: red;\n  text-align: center; }\n\n.mock-conf {\n  color: green;\n  text-align: center; }\n\n.inprogress {\n  color: orangered;\n  text-align: center; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.checkbox, .radio {\n  position: relative;\n  display: block;\n  margin-top: 0px !important;\n  margin-bottom: 0px !important; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.button-center {\n  text-align: center; }\n\n.button-left {\n  text-align: left; }\n\n.button-right {\n  text-align: right; }\n\n.accordion.panel-group .panel-heading .accordion-toggle.collapsed {\n  color: #5db2ff !important;\n  background-color: #333 !important;\n  border-bottom: 1px solid #5db2ff !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:hover:after {\n  color: #FFF !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle {\n  color: #5db2ff !important;\n  background-color: #333 !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:after {\n  color: #5db2ff !important; }\n\n.center {\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.item {\n  text-align: center; }\n\n.body {\n  background-color: white; }\n\n.header-title {\n  font-size: 18px !important; }\n\n.form-heading {\n  font-size: 18px !important; }\n\n/* Buttons */\n\n.btn {\n  font-size: 14px !important;\n  font-weight: bold !important; }\n\n/* /Buttons */\n\n/* Line */\n\n.hr-blue {\n  border-top: 1px solid #869eb4 !important; }\n\n/* /Line */\n\n/* Textbox */\n\n.formcontrol, select {\n  padding-left: 0px !important;\n  padding-right: 0px !important;\n  border-left-width: 1px !important;\n  border-right-width: 1px !important; }\n\n/* /Textbox */\n\n/* Atkore logo */\n\n.text {\n  text-align: center; }\n\n.text img {\n  width: 70px;\n  height: 80px; }\n\n/* /Atkore logo */\n\n/* Labels */\n\n.label {\n  padding: 5px !important; }\n\nlabel .mandatory {\n  color: red;\n  font-size: 16px !important;\n  font-weight: bold !important; }\n\n/* /Labels */\n\n/* Tables    */\n\n.table > tbody > tr > td {\n  padding: 2px !important;\n  line-height: 1.257143 !important;\n  vertical-align: middle; }\n\n/* /Tables    */\n\n/* Vertical Text */\n\n.testrotate p {\n  line-height: 145px !important;\n  font-size: 15px; }\n\n.testrotate .testq {\n  line-height: 483px !important;\n  font-size: 15px; }\n\n.testrotate .testr {\n  line-height: 100px !important;\n  font-size: 15px; }\n\n.testrotate .testp {\n  line-height: 170px !important;\n  font-size: 15px; }\n\n/* /Vertical Text */\n\n/* Textbox input */\n\n/* /Textbox input */\n\n.table-scrollable > .table > thead > tr > th {\n  white-space: wrap !important; }\n\n.form-control[_ngcontent-c3] {\n  padding: 4px 3px !important; }\n\n/* Pin Gap Diagram */\n\n.row .pin img {\n  width: 230px;\n  height: 240px;\n  margin-left: 30px !important;\n  margin-right: auto !important; }\n\n/* /Pin Gap Diagram */\n\n.gap {\n  text-align: center; }\n\n/* Bolt torque specifications */\n\n.adjust {\n  margin-left: 10px !important;\n  margin-bottom: 1040px !important; }\n\n/* /Bolt torque specifications */\n\n/* Imageupload    */\n\ntd .img-adjust {\n  margin-left: auto !important;\n  margin-right: auto !important; }\n\n/* /Imageupload    */\n\n.alert-heading {\n  font-size: 12px; }\n\n.align-text-top {\n  vertical-align: top !important; }\n\n.text-big {\n  font-size: 16px !important;\n  font-weight: bold !important; }\n\n.form-title {\n  color: #5db2ff;\n  border-bottom: 1px dashed #5db2ff;\n  /*display: block;\r\n     padding: 8px 0;\r\n     border-bottom: 1px dashed #7e3794;*/\n  font-size: 15px;\n  font-weight: bold;\n  /*  color: #5DB2FF;\r\n    margin-bottom: 15px;*/ }\n\n.mandatory {\n  font-weight: bold;\n  color: #FF0000;\n  font-size: 16px; }\n\n.hr-gray-thick {\n  border-top: 3px solid #333 !important; }\n\n.hr-gray {\n  border-top: 1px solid #333 !important; }\n\ninput {\n  color: black; }\n\n.mock {\n  color: red;\n  text-align: center; }\n\n.mock-conf {\n  color: green;\n  text-align: center; }\n\n.inprogress {\n  color: orangered;\n  text-align: center; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.text-center {\n  text-align: center; }\n\n.checkbox-center {\n  position: relative;\n  display: block;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.blue {\n  background-color: #5db2ff !important;\n  color: #333 !important;\n  font-weight: bold; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.accordion.panel-group .panel-body {\n  background-color: #fff !important;\n  border-top: none !important;\n  border-left: 2px solid #eee;\n  color: #262626 !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:hover:after {\n  color: #FFF !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle {\n  color: #5db2ff !important;\n  background-color: #333 !important;\n  border-bottom: 1px solid #5db2ff !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:after {\n  color: #5db2ff !important; }\n\n.icon1 {\n  height: auto;\n  width: 120px;\n  width: -moz-fit-content;\n  width: -webkit-fit-content;\n  width: fit-content;\n  font: 400 16px/1.4 \"Source Code Pro\";\n  font-variant: small-caps;\n  padding: 10px;\n  border: 1px solid #103683;\n  border-radius: 10px; }\n\n.text-blue {\n  color: #5db2ff; }\n\n.btn-xs-two {\n  padding: 2px 7px !important;\n  margin: 2px 0px !important; }\n\n.modal-header {\n  padding: 0px 0px 0px 0px !important; }\n\n.well.with-footer {\n  padding-bottom: 10px !important; }\n\n.modal-footer {\n  border-top: 3px solid #333 !important; }\n\n.table-scrollable {\n  width: 100%;\n  height: 200px !important;\n  overflow-x: auto;\n  overflow-y: auto !important;\n  border: 1px solid #ddd; }\n\n.modal-dialog {\n  width: 1200px !important;\n  margin: 40px auto !important; }\n\n#form1 {\n  display: none; }\n\n.form-control, select {\n  font-size: 13px;\n  color: #000000;\n  background-color: #fbfbfb;\n  border: 1px solid #d5d5d5;\n  padding: 6px 12px; }\n\n.text-right {\n  text-align: right; }\n\ninput[type=\"file\"] {\n  display: none; }\n\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer; }\n\n.uploadImage {\n  margin-left: 3em; }\n\n.imageNamecss {\n  height: 140px;\n  width: 220px; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.ts ***!
  \**********************************************************************************/
/*! exports provided: EditEstimateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditEstimateComponent", function() { return EditEstimateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _utilities_beyond__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utilities/beyond */ "./src/utilities/beyond.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var _global_global__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../global/global */ "./src/global/global.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var ng2_completer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ng2-completer */ "./node_modules/ng2-completer/esm5/ng2-completer.js");
/* harmony import */ var ng4_auto_complete__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ng4-auto-complete */ "./node_modules/ng4-auto-complete/index.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var ngx_gallery__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-gallery */ "./node_modules/ngx-gallery/bundles/ngx-gallery.umd.js");
/* harmony import */ var ngx_gallery__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(ngx_gallery__WEBPACK_IMPORTED_MODULE_12__);













var EditEstimateComponent = /** @class */ (function () {
    function EditEstimateComponent(beyond, router, activatedRoute, formBuilder, http, datePipe, toastr, completerService, autoCompleteService) {
        this.beyond = beyond;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.formBuilder = formBuilder;
        this.http = http;
        this.datePipe = datePipe;
        this.toastr = toastr;
        this.completerService = completerService;
        this.autoCompleteService = autoCompleteService;
        this.priceBookListDetails = [];
        this.priceBookServiceResponse = true;
        this.selectedPriceBook = [];
        this.selectedInventory = [];
        this.pricebookTemp = [];
        this.inventoryTemp = [];
        this.listPriceBook = 0;
        this.showTable = false;
        this.listPriceInventory = 0;
        this.servicePriceBook = [];
        this.priceBookFinalValue = 0;
        this.viewCLMDetails = [];
        this.subTotalValue = 0;
        this.quant = 0;
        this.quantCM = 0;
        this.customMaterialListValue = 0;
        this.customLaborListValue = 0;
        this.priceCM = 0;
        this.priceCLM = 0;
        this.taxFinalValue = 0;
        this.promoValue = 0;
        this.otherPromoValue = 0;
        this.totalDiscount = 0;
        this.paymentMethodValue = 0;
        this.reqDisc = 0;
        this.listPrice = 0;
        this.markUpLaborValue = 0;
        this.listPriceOfLabor = 0;
        this.listPriceLaborMarkUp = 0;
        this.creditCardPF = 0;
        this.paymentModeValue = 0;
        this.creditCardPercentage = 0;
        this.totalValueAfterDiscounts = 0;
        this.valueBeforeDicount = 0;
        this.desiredProfitValues = 0;
        this.cmCommission = 0;
        this.channelManagerCommValue = 0;
        this.directJobCostValue = 0;
        this.cmPMValue = 0;
        this.desiredPercentage = 0;
        this.estimatedGrossProfitValue = 0;
        this.overHeadEstimateCostValue = 0;
        this.estimatedTechComm = 0;
        this.workManEstComm = 0;
        this.employeeTaxComm = 0;
        this.employeeCommTaxInc = 0;
        this.afterDiscount = 0;
        this.laborMarkUpValue = 0;
        this.materialMarkUp = 0;
        this.customLaborMarkUpListValue = 0;
        this.customMaterialMarkUpListValue = 0;
        this.filesToUpload = [];
        this.urls = [];
        this.imagePreview = "assets/img/no-image.png";
        this.imageArray = [];
        this.netProfitLabor = 0;
        this.estimatedMarkUpProfit = 0;
        this.netProfit = 0;
        this.netProfitPercent = 0;
        this.editForm = false;
        this.loginStaffCommission = 0;
        this.editSubTotalCM = 0;
        this.taxPercentCal = 0;
        this.totalMaterialCostWithTax = 0;
        this.totalEstPriceBeforeDisc = 0;
        this.empCommissionType = "NA";
        this.laborCost = 0;
        //customLaborRateValue: any;
        this.priceBookHoursValue = 0;
        this.customLaborFieldTechHours = 0;
        this.sumOfPriceBookCustomLaborHours = 0;
        this.workingType = 0;
        this.totalHoursWithWorkingType = 0;
        this.estTechComm = 0;
        this.totalEstTechPay = 0;
        this.estNetProfit = 0;
        this.estNetProfitPercent = 0;
        this.netProfitValue = false;
        this.grossSaleValue = true;
        this.channelManagerCommValueNetProfit = 0;
        this.estNetProfitWithCM = 0;
        this.estNetProfitPercentWithCM = 0;
        this.netProfitMinusCheck = false;
        this.estimateCustomLaborData = [];
        this.estimateCustomMaterialData = [];
        this.estimatePriceBookData = [];
        this.estimateAnalyserViewResponse = false;
        this.totalMarkupValue = 0;
        this.discountAmount = 0;
        this.galleryImages = [];
        this.bellerImage1 = "assets/img/toi.jpg";
        this.bellerImage2 = "assets/img/slideimg1.png";
        this.bellerImage3 = "assets/img/plumbing/pipe1.png";
        this.bellerImage4 = "assets/img/plumbing/plumbing1.png";
        this.customMaterialData1 = [];
        this.chooseStatus = true;
        this.result = [];
        this.imageNameData = [];
        this.newArray = [];
        this.orginalArray = [];
        this.imageName = [];
        this.imageNames = [];
        this.imageValue = [];
        this.imagePreviewDocument = "assets/img/no-image.png";
        this.progressShow1 = false;
        this.progressHide1 = false;
        this.img1 = false;
        this.percentage1 = 0;
        this.arr = [];
        this.displyFlag = false;
        this.uploadFlag = false;
    }
    EditEstimateComponent.prototype.ngOnInit = function () {
        this.beyond.beyondAdmin();
        this.loginData = JSON.parse(localStorage.getItem("login"));
        this.estimateNum = this.activatedRoute.snapshot.params['estimateNumber'];
        this.viewEstimateAnalyserService();
        this.viewEstimateService();
        this.getImagesGallery();
        this.listPromotionCodeValue();
        this.date = new Date();
        this.year = this.date.getFullYear();
        this.month = this.date.getMonth() + 1;
        this.currentDate = this.date.getDate();
        this.fullDate = this.currentDate + "-" + this.month + "-" + this.year;
        this.myDate = this.datePipe.transform(this.date, 'dd-MM-YYYY');
        this.addCustomLaborMaterial = this.formBuilder.group({
            customLaborMaterial: this.formBuilder.array([this.createLaborMaterial()])
        });
        this.galleryOptions = [
            {
                width: '400px',
                height: '400px',
                thumbnailsColumns: 4,
                imageAnimation: ngx_gallery__WEBPACK_IMPORTED_MODULE_12__["NgxGalleryAnimation"].Slide,
                previewZoom: true,
                previewRotate: true
            },
            {
                breakpoint: 800,
                width: '70%',
                height: '600px',
                imagePercent: 80,
                thumbnailsPercent: 20,
                thumbnailsMargin: 20,
                thumbnailMargin: 20
            },
            {
                breakpoint: 400,
                preview: false
            }
        ];
        this.editEstimate = this.formBuilder.group({
            estimateNo: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            workOrderNo: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            date: [''],
            channelManager: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            channelManagerId: [''],
            splitRate: ['None', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            primaryTech: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            secondaryTech: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            companyName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            firstName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            lastName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            emailId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            phoneNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            phoneType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            address: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            state: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            city: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            zipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            invoiceBy: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            invoiceEmail: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            poNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customerSince: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paymentMethod: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            expStartDateTime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            expEndDateTime: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            frequency: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            leadQuantity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            creditCardRequired: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            adminNotes: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobTitle: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            serviceContactEmail: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            serviceContactNumber: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            serviceAddress: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            serviceState: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            serviceCity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            serviceZipcode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            materialGD: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            priceBookListValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customMaterialListValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            customLaborListValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            taxPercentage: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            taxPercentValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            materialTaxValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            materialCostWithTax: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            priceBeforeDiscount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            priceAfterDiscount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paymentMethods: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paymentValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            paymentMethodValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            //paymentValueAfterPercent: ['', Validators.required],
            //  newPromoCode: ['', Validators.required],
            discountPromoCode: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            discountAmount: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            otherPromoCode: ['0', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            otherPromoValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            reqDepositValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            reqDepositCost: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            totalPrice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            // reqDiscount: ['', Validators.required],
            specialInstructions: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            jobSiteNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            estimateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            privateNotice: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            setReminder: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            desiredProfitInEA: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            channelManagerCommission: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            otherCost: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            otherCostValue: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            estimatedTechComm: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            employeeTaxCompany: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            worksmanCompType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            empTaxCompType: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            // laborGD: ['', Validators.required],
            estimateStatus: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            requireManagerApproval: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            pricebookDescription: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            doNotServe: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            images: ['']
        });
        this.editCustomLaborCost = this.formBuilder.group({
            item: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            type: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            staffId: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            staffName: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            quantity: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            units: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            priceMarkUp: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            subTotal: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
        });
        this.addCustomMaterial = this.formBuilder.group({
            customMaterial: this.formBuilder.array([this.createCustomMaterial()])
        });
        this.priceBookSearch = this.formBuilder.group({
            category: [''],
            subCategory: [''],
            description: [''],
        });
    };
    //Estimate Analyser Service
    EditEstimateComponent.prototype.viewEstimateAnalyserService = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getEstimateAnalyserDetails/' + this.estimateNum, options)
            .subscribe(function (data) {
            var response = data.json();
            //console.log("ESTAnresponse" + JSON.stringify(response))
            if (response.status == 200) {
                _this.estimateAnalyser = response.response[0];
                _this.totalValueAfterDiscounts = _this.estimateAnalyser.estGrossSale;
                _this.desiredProfitValues = _this.estimateAnalyser.desiredProfitValue;
                _this.desiredProfitPercent = _this.estimateAnalyser.desiredProfitPercent;
                console.log("  this.desiredProfitValues" + _this.desiredProfitValues);
                console.log(" this.estimateAnalyser.desiredProfitValue" + _this.estimateAnalyser.desiredProfitValue);
                // this.creditCardPF = this.estimateAnalyser.ccProcessingFeePercent
                _this.paymentModeValue = _this.estimateAnalyser.ccProcessingFeeValue;
                _this.toc = _this.estimateAnalyser.toc;
                // this.customMaterialListValue = this.estimateAnalyser.estMaterialCostMarkUp
                //this.customLaborListValue = this.estimateAnalyser.estLaborCostMarkUp
                //this.otherCost = this.estimateAnalyser.otherCostValue
                _this.oCost = _this.estimateAnalyser.otherCost;
                console.log("oCost" + _this.oCost);
                _this.desiredPercentage = _this.estimateAnalyser.directJobCostPercent;
                _this.directJobCostValue = _this.estimateAnalyser.directJobCostValue;
                console.log("directJobCostValue" + _this.directJobCostValue);
                _this.estimatedGrossProfitValue = _this.estimateAnalyser.estGrossProfit;
                _this.overHeadCostValue = _this.estimateAnalyser.overHeadCostPercent;
                _this.overHeadEstimateCostValue = _this.estimateAnalyser.overHeadCostValue;
                _this.empCommissionType = _this.estimateAnalyser.estCommissionType;
                //this.customLaborListValue = this.estimateAnalyser.estTechCommPercent
                _this.channelManagerCommValue = _this.estimateAnalyser.estTechCommValue;
                _this.priceBookHoursValue = _this.estimateAnalyser.priceBookHours;
                _this.customLaborFieldTechHours = _this.estimateAnalyser.fieldTechHours;
                _this.sumOfPriceBookCustomLaborHours = _this.estimateAnalyser.totalHours;
                _this.workingType = _this.estimateAnalyser.workingTypeValue;
                _this.commissionType = _this.estimateAnalyser.estTechPayType;
                _this.totalHoursWithWorkingType = _this.estimateAnalyser.estTechPay;
                _this.worksmanCompType = _this.estimateAnalyser.worksmanCompType;
                _this.workmanCompIns = _this.estimateAnalyser.employeeWorkmanCompValue;
                _this.workManEstComm = _this.estimateAnalyser.employeeWorkmanCompPercent;
                _this.empTaxCompType = _this.estimateAnalyser.empTaxCompType;
                _this.empTaxComp = _this.estimateAnalyser.employeeTaxCompanyValue;
                _this.employeeTaxComm = _this.estimateAnalyser.employeeTaxCompanyPercent;
                _this.employeeCommTaxInc = _this.estimateAnalyser.employeeCommissions;
                _this.totalMarkupValue = _this.estimateAnalyser.estProfitMaterialMarkup;
                _this.netProfitLaborWithCurrency = _this.estimateAnalyser.estNetProfitBeforeTechCommission;
                _this.loginStaffCommissionType = _this.estimateAnalyser.estNetTechCommissionType;
                _this.loginStaffCommission = _this.estimateAnalyser.estTechCommPercent;
                _this.estTechCommWithCurrency = _this.estimateAnalyser.estTechCommValue;
                _this.totalEstTechPay = _this.estimateAnalyser.estTotalTechPay;
                _this.empCommissionType = _this.estimateAnalyser.estCommissionType;
                _this.empCommission = _this.estimateAnalyser.estTechCommPercent;
                _this.channelManagerCommValueNetProfit = _this.estimateAnalyser.estTechCommValue;
                _this.estNetProfitWithCurrency = _this.estimateAnalyser.estNetProfit;
                _this.estNetProfitPercentWithCurrency = _this.estimateAnalyser.estNetProfitPercentage;
                _this.estimateAnalyserViewResponse = true;
                //console.log("empCommission" + this.empCommission)
            }
            else {
                _this.estimateAnalyserViewResponse = false;
            }
            (function (error) {
            });
        });
    };
    //Estimate Analyser Service 
    //Estimate Service
    EditEstimateComponent.prototype.viewEstimateService = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/estimateView/' + this.estimateNum, options)
            .subscribe(function (data) {
            var response = data.json();
            ////console.log(response)
            if (response.status == 200) {
                _this.estimateBasicView = response.response[0];
                //console.log("estimateBasicView" + JSON.stringify(this.estimateBasicView))
                _this.cusResponseStatus = true;
                _this.estimateCustomLaborData = response.customLabourDetails;
                //  this.calculateCustomlabor()
                //console.log("estimateCustomLaborData" + JSON.stringify(this.estimateCustomLaborData))
                _this.estimateCustomMaterialData = response.customMaterialDetails;
                //  this.calculateCustomMaterial()
                _this.estimatePriceBookData = response.pricebookDetails;
                //  this.calculate_pricebookCost()
                _this.totalEstimateCostData = response.totalCostDetails[0];
                _this.customMLDesc = response.customDescriptionDetails[0];
                _this.editEstimate = _this.formBuilder.group({
                    customerId: [_this.estimateBasicView.customerId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    workOrderNo: [_this.estimateBasicView.workOrderNo, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    estimateNo: [_this.estimateBasicView.estimateNo, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    date: [moment__WEBPACK_IMPORTED_MODULE_11__(_this.estimateBasicView.date).format("dd-MM-YYYY"), _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    channelManager: [_this.estimateBasicView.channelManager, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    channelManagerId: [_this.estimateBasicView.channelManagerId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    splitRate: [_this.estimateBasicView.splitRate, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    primaryTech: [_this.estimateBasicView.primaryTech, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    secondaryTech: [_this.estimateBasicView.secondaryTech, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    companyName: [_this.estimateBasicView.companyName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    emailId: [_this.estimateBasicView.emailId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    firstName: [_this.estimateBasicView.firstName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    lastName: [_this.estimateBasicView.lastName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    phoneNumber: [_this.estimateBasicView.phoneNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    phoneType: [_this.estimateBasicView.phoneType, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    address: [_this.estimateBasicView.address, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    state: [_this.estimateBasicView.state, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    city: [_this.estimateBasicView.city, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    zipcode: [_this.estimateBasicView.zipcode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    invoiceBy: [_this.estimateBasicView.invoiceBy, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    invoiceEmail: [_this.estimateBasicView.invoiceEmail, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    poNumber: [_this.estimateBasicView.poNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    customerSince: [_this.estimateBasicView.customerSince, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    paymentMethod: [_this.estimateBasicView.paymentMethod, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    doNotServe: [_this.estimateBasicView.doNotServe, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    source: [_this.estimateBasicView.source, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    frequency: [_this.estimateBasicView.frequency, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    leadQuantity: [_this.estimateBasicView.leadQuantity, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    adminNotes: [_this.estimateBasicView.adminNotes, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobTitle: [_this.estimateBasicView.jobTitle, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    serviceContactEmail: [_this.estimateBasicView.serviceContactEmail, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    serviceContactNumber: [_this.estimateBasicView.serviceContactNumber, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    serviceAddress: [_this.estimateBasicView.serviceAddress, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    serviceState: [_this.estimateBasicView.serviceState, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    serviceCity: [_this.estimateBasicView.serviceCity, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    serviceZipcode: [_this.estimateBasicView.serviceZipcode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    //  priceBookListValue: [this.estimateBasicView.priceBookFinalValue, Validators.required],
                    // customMaterialListValue: [this.estimateBasicView.customMaterialListValue, Validators.required],
                    //  customLaborListValue: [this.estimateBasicView.customLaborListValue, Validators.required],
                    //taxPercentage: [this.estimateBasicView.taxPercentage, Validators.required],
                    //taxPercentValue: [this.estimateBasicView.taxPercentValue, Validators.required],
                    //  materialCostWithTax: [this.totalEstimateCostData.materialCostWithTax, Validators.required],
                    // priceBeforeDiscount: [this.totalEstimateCostData.priceBeforeDiscount, Validators.required],
                    // newPromoCode: ['0', Validators.required],
                    // discountPromoValue: [this.totalEstimateCostData.discountPromoValue, Validators.required],
                    otherPromoCode: [_this.totalEstimateCostData.otherPromoCode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    // otherPromoValue: [this.totalEstimateCostData.otherPromoValue, Validators.required],
                    // totalDiscounts: [this.totalEstimateCostData.totalDiscounts, Validators.required],
                    // priceAfterDiscount: [this.totalEstimateCostData.priceAfterDiscount, Validators.required],
                    paymentMethods: [_this.totalEstimateCostData.paymentMethods, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    // paymentValue: [this.totalEstimateCostData.paymentValue, Validators.required],
                    //paymentValueAfterPercent: [this.totalEstimateCostData.paymentMethodValue, Validators.required],
                    //totalEstimatedPrice: [this.totalEstimateCostData.totalPrice, Validators.required],
                    reqDepositValue: [_this.totalEstimateCostData.reqDepositValue, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    desiredProfitInEA: [_this.estimateAnalyser.desiredProfitPercent, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    channelManagerCommission: [_this.estimateAnalyser.estTechCommPercent, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    otherCost: [_this.estimateAnalyser.otherCost, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    estimatedTechComm: [_this.estimateAnalyser.estimatedTechComm, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    employeeTaxCompany: [_this.estimateAnalyser.employeeTaxCompany, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    worksmanCompType: [_this.estimateAnalyser.worksmanCompType, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    empTaxCompType: [_this.estimateAnalyser.empTaxCompType, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    specialInstructions: [_this.estimateBasicView.specialInstructions, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    jobSiteNotice: [_this.estimateBasicView.jobSiteNotice, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    estimateNotice: [_this.estimateBasicView.estimateNotice, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    privateNotice: [_this.estimateBasicView.privateNotice, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    materialGD: [_this.estimateBasicView.materialGD, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    //laborGD: ['', Validators.required],
                    requireManagerApproval: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    setReminder: [_this.estimateBasicView.setReminder, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    pricebookDescription: [_this.estimateBasicView.pricebookDescription, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    discountPromoCode: [_this.totalEstimateCostData.discountPromoCode, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
                });
                _this.viewEstimateAnalyserService();
                // this.getPromoCodeDiscount(this.totalEstimateCostData.discountPromoCode)
                // this.calculatediscount()
                // this.jobRelatedcost()
                // this.getPaymentMode()
                // this.getPaymentValue()
                //this.calculatediscount()
                _this.getStaffName(_this.estimateBasicView.channelManagerId);
                //console.log("discountPromoCode" + this.totalEstimateCostData.discountPromoCode)
                _this.urls = _this.estimateBasicView.images.split(',');
                //console.log("img" + this.urls)
                if (_this.estimateBasicView.images == "" || _this.estimateBasicView.images == null || _this.estimateBasicView.images == undefined || _this.estimateBasicView.images == "undefined") {
                    _this.imagePreview = '../../assets/img/no-image.png';
                    var index = _this.imagePreview.indexOf(_this.imagePreview);
                    _this.removeSelectedFile(index);
                }
                else {
                    for (var i = 0; i < _this.urls.length; i++) {
                        _this.imageArray.push(_this.urls[i]);
                        _this.imageNames.push({ image: _this.urls[i] });
                        _this.imagePreview = _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + "/" + _this.urls[i];
                        _this.arr.push({ name: _this.imagePreview });
                    }
                    _this.fileName = _this.imageArray.length;
                    //console.log('The execution is fileName ' + JSON.stringify(this.fileName))
                }
                for (var i = 0; i < _this.addCustomLaborMaterial.get('customLaborMaterial').value.length; i++) {
                    for (var j = 0; j < _this.estimateCustomLaborData.length; j++) {
                        //console.log("st" + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName)
                        //console.log("estStaff" + this.estimateCustomLaborData[j].staffId)
                        // if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == undefined || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == null && this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == undefined && this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == undefined) {
                        //   this.errormsgtype = true
                        //   this.errormsg = true
                        //   this.errormsgquant = true
                        // }
                        if (_this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == _this.estimateCustomLaborData[j].staffId && _this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == _this.estimateCustomLaborData[j].type) {
                            alert('Staff Already Added');
                            return false;
                        }
                    }
                }
                _this.priceBookFinalValue = _this.estimateBasicView.priceBookListValue;
                _this.customLaborListValue = _this.estimateBasicView.customLaborListValue;
                _this.totalDiscount = _this.totalEstimateCostData.totalDiscounts;
                _this.totalEstPriceBeforeDisc = _this.totalEstimateCostData.priceBeforeDiscount;
                _this.afterDiscount = _this.totalEstimateCostData.priceAfterDiscount;
                _this.otherPromoValue = _this.totalEstimateCostData.otherPromoValue;
                _this.totalValueAfterDiscounts = _this.totalEstimateCostData.totalPrice;
                _this.creditCardPF = _this.totalEstimateCostData.paymentValue;
                _this.paymentModeValue = _this.totalEstimateCostData.paymentMethodValue;
                _this.discountAmount = _this.totalEstimateCostData.discountPromoValue;
                _this.promoValue = _this.totalEstimateCostData.discountPromoValue;
                _this.finalValue = _this.totalEstimateCostData.reqDepositCost;
                _this.taxPercentage = _this.estimateBasicView.taxPercentage;
                _this.estimateViewResponse = true;
                _this.getChannelManagerList();
                _this.getEmployeeRolesDetails();
                _this.getListOfStates();
                _this.getPriceBookServiceList();
                _this.getCustomMaterialList();
                _this.getRoles();
                _this.listPaymentMethods();
            }
            else {
                _this.estimateViewResponse = false;
                _this.cusResponseStatus = false;
            }
            (function (error) {
            });
        });
    };
    //Estimate Service
    // Pricebook Services
    EditEstimateComponent.prototype.viewServicePriceBookService = function (data) {
        var _this = this;
        //console.log("serviceID" + data.serviceId)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewPriceBook' + '/' + data.serviceId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.priceBookListDetailsService = response.response[0];
                //console.log("priceBookListDetails" + JSON.stringify(this.priceBookListDetailsService))
                if (_this.priceBookListDetailsService.document == "../../assets/img/no-image.png") {
                    _this.imagePreview = _this.priceBookListDetailsService.document;
                    ////console.log("document" + this.imagePreview)
                }
                else {
                    _this.imagePreview = _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + _this.priceBookListDetailsService.document;
                    //////console.log("document1" + this.imagePreview)
                }
                _this.urls = _this.priceBookListDetailsService.picture.split(',');
                for (var i = 0; i < _this.urls.length; i++) {
                    _this.galleryImages.push({
                        small: _this.urls[i],
                        medium: _this.urls[i],
                        big: _this.urls[i],
                    });
                }
                //////console.log
                if (_this.priceBookListDetailsService.picture == "" || _this.priceBookListDetailsService.picture == null || _this.priceBookListDetailsService.picture == undefined || _this.priceBookListDetailsService.picture == "undefined") {
                    _this.imagePreview = '../../assets/img/no-image.png';
                }
                else if (_this.priceBookListDetailsService.picture == "../../assets/img/no-image.png") {
                    _this.imagePreview = _this.priceBookListDetailsService.picture;
                }
                else {
                    _this.imagePreview = _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + _this.priceBookListDetailsService.picture;
                }
                for (var i = 0; i < _this.priceBookListDetailsService.length; i++) {
                    ////console.log("viewItemDetailsTime" + this.viewItemDetails[i].time)
                    _this.priceBookHoursValue = _this.priceBookHoursValue + parseFloat(_this.priceBookListDetailsService[i].time);
                    ////console.log(this.priceBookHoursValue)
                    _this.priceBookFinalValue = _this.priceBookFinalValue + parseFloat(_this.priceBookListDetailsService[i].subTotal);
                    _this.priceBookMaterialValue = _this.priceBookMaterialValue + parseFloat(_this.priceBookListDetailsService[i].materialCost);
                    _this.priceBookLaborValue = _this.priceBookLaborValue + parseFloat(_this.priceBookListDetailsService[i].laborCost);
                }
                _this.viewPriceBookServiceResponse = true;
            }
            else {
                _this.viewPriceBookServiceResponse = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.getImagesGallery = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getListOfProzDetails', options)
            .subscribe(function (dataPDF) {
            var galleryData = dataPDF.json();
            if (galleryData.status == 200) {
                //////console.log(galleryData)
                _this.dataGallery = true;
                for (var i = 0; i < galleryData.response.length; i++) {
                    _this.galleryImages.push({
                        small: galleryData.response[i].image,
                        medium: galleryData.response[i].image,
                        big: galleryData.response[i].image,
                    });
                }
            }
        });
    };
    EditEstimateComponent.prototype.getPriceBookQuantity = function (quantityData) {
        //console.log(quantityData)
        // this.priceBookFinalValue = 0;
        quantityData.subTotal = quantityData.quantity * quantityData.priceMarkUp;
        this.calculate_pricebookCost();
        //this.calculate_totalEstPriceBeforeDisc()
        //this.calculatediscount()
    };
    EditEstimateComponent.prototype.getCategory = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPriceBookCategory' + '/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.priceBookData = response.response;
            }
            else {
                // this.priceBookServiceResponse = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.getSubCategory = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPriceBookSubCategory' + '/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.subcategoryData = response.response;
            }
            else {
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.getPriceBookServiceList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPriceBookService' + '/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.priceBookListDetails = response.response;
                _this.pricebooklist = response.response[0];
                _this.getCategory();
                _this.getSubCategory();
                _this.priceBookListDetails = Array.from(new Set(_this.priceBookListDetails));
                //console.log("pricebook details" + JSON.stringify(this.priceBookListDetails))
                _this.totalPb = _this.priceBookListDetails.length;
                //console.log("total pb" + JSON.stringify(this.totalPb))
                //  this.viewItemData = JSON.parse(localStorage.getItem('itemValues'))
                //////console.log("itemValues" + JSON.stringify(this.viewItemData))     
                _this.priceBookSearchData = true;
                //  this.viewPriceBookService()
                //this.viewServicePriceBookService(this.pricebooklist.serviceId)
                // this.calculatediscount()         ////console.log("if -->")
            }
            else {
                ////console.log("else -->")
                _this.priceBookSearchData = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.getListEstimatePricebookService = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listEstimatePricebookService' + '/' + this.estimateNum, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.estimatePriceBookData = response.response;
                _this.calculate_pricebookCost();
                _this.calculatediscount();
            }
            else {
                // this.priceBookServiceResponse = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.standardButton = function (serviceId) {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/standardViewPriceBook' + '/' + serviceId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.viewItemDetails1 = response.response[0];
                ////console.log("standard" + JSON.stringify(this.viewItemDetails))
                var obj = {
                    "staffId": _this.loginData.loginCode,
                    "customerId": _this.estimateBasicView.customerId,
                    "estimateNo": _this.estimateNum,
                    "serviceId": serviceId,
                    "type": "STANDARD",
                    "name": _this.viewItemDetails1.name,
                    "quty": "1",
                    "units": "EACH",
                    "time": _this.viewItemDetails1.time,
                    "listPrice": _this.viewItemDetails1.listPrice,
                    "subTotal": _this.viewItemDetails1.listPrice * 1,
                    "materialCost": _this.viewItemDetails1.materialCost,
                    "laborCost": _this.viewItemDetails1.laborCost,
                    "proId": _this.viewItemDetails1.proId
                };
                ////console.log("ESTIMATE PriceBook obj" + JSON.stringify(obj))         
                _this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/editEstimatePriceBookSelection', obj)
                    .subscribe(function (data) {
                    var ConsData = data.json();
                    if (ConsData.status == 200) {
                        $("#viewPriceBook").modal("hide");
                        $("#myPriceBook").modal("hide");
                        // this.calculate_pricebookCost()
                        // this.calculate_totalEstPriceBeforeDisc()
                        // this.getPriceBookQuantity(1)
                        _this.getListEstimatePricebookService();
                    }
                    else {
                        //console.log('Failed to Add Record');
                    }
                }, function (error) {
                    ////console.log(error);// Error getting the data
                });
                _this.viewPriceBookServiceResponse = true;
            }
            else {
                _this.viewPriceBookServiceResponse = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.valueButton = function (serviceId) {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/valuesViewPriceBook' + '/' + serviceId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.viewItemDetails1 = response.response[0];
                ////console.log("value" + JSON.stringify(this.viewItemDetails))       
                var obj = {
                    "staffId": _this.loginData.loginCode,
                    "customerId": _this.estimateBasicView.customerId,
                    "estimateNo": _this.estimateNum,
                    "serviceId": serviceId,
                    "type": "VALUE",
                    "name": _this.viewItemDetails1.name,
                    "quty": "1",
                    "units": "EACH",
                    "time": _this.viewItemDetails1.time,
                    "listPrice": _this.viewItemDetails1.listPrice,
                    "subTotal": _this.viewItemDetails1.listPrice * 1,
                    "materialCost": _this.viewItemDetails1.materialCost,
                    "laborCost": _this.viewItemDetails1.laborCost,
                    "proId": _this.viewItemDetails1.proId
                };
                //////console.log("ESTIMATE PriceBook obj" + JSON.stringify(obj))       
                _this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/editEstimatePriceBookSelection', obj)
                    .subscribe(function (data) {
                    var ConsData = data.json();
                    if (ConsData.status == 200) {
                        $("#viewPriceBook").modal("hide");
                        $("#myPriceBook").modal("hide");
                        // this.getPriceBookServiceList()
                        _this.getListEstimatePricebookService();
                        //  this.calculate_totalEstPriceBeforeDisc()
                    }
                    else {
                        //console.log('Failed to Add Record');
                    }
                }, function (error) {
                    ////console.log(error);// Error getting the data
                });
                _this.viewPriceBookServiceResponse = true;
            }
            else {
                _this.viewPriceBookServiceResponse = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.memberButton = function (serviceId) {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/memberViewPriceBook' + '/' + serviceId, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.viewItemDetails1 = response.response[0];
                var obj = {
                    "staffId": _this.loginData.loginCode,
                    "customerId": _this.estimateBasicView.customerId,
                    "estimateNo": _this.estimateNum,
                    "serviceId": serviceId,
                    "type": "MEMBER",
                    "name": _this.viewItemDetails1.name,
                    "quty": "1",
                    "units": "EACH",
                    "time": _this.viewItemDetails1.time,
                    "listPrice": _this.viewItemDetails1.listPrice,
                    "subTotal": _this.viewItemDetails1.listPrice * 1,
                    "materialCost": _this.viewItemDetails1.materialCost,
                    "laborCost": _this.viewItemDetails1.laborCost,
                    "proId": _this.viewItemDetails1.proId,
                    "status": "ACTIVE"
                };
                _this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/editEstimatePriceBookSelection', obj)
                    .subscribe(function (data) {
                    var ConsData = data.json();
                    if (ConsData.status == 200) {
                        $("#viewPriceBook").modal("hide");
                        $("#myPriceBook").modal("hide");
                        _this.getListEstimatePricebookService();
                    }
                    else {
                        //console.log('Failed to Add Record');
                    }
                }, function (error) {
                    ////console.log(error);// Error getting the data
                });
                _this.viewPriceBookServiceResponse = true;
            }
            else {
                _this.viewPriceBookServiceResponse = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.calculate_pricebookCost = function () {
        this.priceBookHoursValue = 0;
        this.priceBookFinalValue = 0;
        for (var i = 0; i < this.estimatePriceBookData.length; i++) {
            //console.log(this.estimatePriceBookData[i].time)
            this.priceBookHoursValue = parseInt(this.priceBookHoursValue) + parseFloat(this.estimatePriceBookData[i].time);
            //console.log("priceBookHoursValue" + this.priceBookHoursValue)
            this.priceBookFinalValue = this.priceBookFinalValue + parseInt(this.estimatePriceBookData[i].subTotal);
            this.getOtherCost();
        }
        this.calculate_totalEstPriceBeforeDisc();
        this.getPromoCodeDiscount(this.promoCode);
        this.getOtherPromoCode();
    };
    EditEstimateComponent.prototype.deletePriceBookItems = function (data) {
        var _this = this;
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteEditPricebookService/' + data.id)
            .subscribe(function (data) {
            var delPBI = data.json();
            if (delPBI.status == 200) {
                _this.priceBookFinalValue = 0;
                _this.getListEstimatePricebookService();
                _this.calculatediscount();
                _this.toastr.success("One Price Book Item has deleted Successfully");
            }
            else {
                _this.toastr.success("Price Book Item Deletion Failed");
            }
        });
    };
    EditEstimateComponent.prototype.cancelSelectedInventory = function () {
        this.getPriceBookServiceList();
    };
    /* serch Price Book Value */
    EditEstimateComponent.prototype.priceBookSearchDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        //let options = new RequestOptions({ headers: headers });
        var obj = {
            "category": this.priceBookSearch.value.category,
            "subCategory": this.priceBookSearch.value.subCategory,
            "description": this.priceBookSearch.value.description,
        };
        //////console.log('this is search obj' + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/priceBookSearchwithproID', [
            { id: 'category', value: obj.category },
            { id: 'subCategory', value: obj.subCategory },
            { id: 'description', value: obj.description },
            { id: 'proId', value: this.loginData.proId },
        ]).subscribe(function (data) {
            _this.priceBook = data.json();
            ////console.log("priceBookListDetails" + JSON.stringify(this.priceBook))
            if (_this.priceBook.status == 200) {
                _this.priceBookListDetails = _this.priceBook.response;
                _this.totalPb = _this.priceBookListDetails.length;
                _this.priceBookServiceResponse = true;
            }
            else {
                _this.totalPb = 0;
                _this.priceBookServiceResponse = false;
            }
        });
    };
    /* serch Price Book Value */
    EditEstimateComponent.prototype.backToPriceBook = function () {
        $("#viewPriceBook").modal("hide");
        $("#myPriceBook").modal("hide");
    };
    // Pricebook Services
    //custom Material Services
    EditEstimateComponent.prototype.createCustomMaterial = function () {
        var val = Math.floor(100 + Math.random() * 900);
        this.randamCMvalue = "CM" + "-" + val;
        return this.formBuilder.group({
            itemCM: '',
            typeCM: '',
            quantityCM: '1',
            unitsCM: '',
            descriptionCM: '',
            listPriceCM: '',
            priceMarkUpCM: '',
            subTotalCM: '0',
        });
    };
    Object.defineProperty(EditEstimateComponent.prototype, "customMaterialValues", {
        get: function () {
            return this.addCustomMaterial.get('customMaterial');
        },
        enumerable: true,
        configurable: true
    });
    EditEstimateComponent.prototype.getQuantityCMValue = function (data) {
        // if (data.quantity == "" || data.quantiy == undefined) {
        //   return false
        // }
        this.subTotalValueCM = 0;
        this.quantCM = data.quantity;
        ////console.log("costPrice", data.price)
        this.subTotalValueCM = this.quantCM * data.priceMarkUp;
        data.subTotal = this.quantCM * data.priceMarkUp;
        ////console.log("subTotal", this.quantCM * data.priceMarkUp)
        //this.subTotalCM = this.quantCM * this.listPrice
        //this.subTotalValueCM = this.subTotalCM.toFixed(2)
        this.calculateCustomMaterial();
        // this.calculate_totalEstPriceBeforeDisc()
    };
    EditEstimateComponent.prototype.getCustomMaterialList = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listCustomMaterial/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.customMaterialListDetails = response.response;
                _this.listPriceCM = response.response[0].listPrice;
                _this.customMaterialListDetails.forEach(function (e) {
                    e.selectedService = false;
                    e.materialSubTotal = 0;
                });
                //this.calculatediscount()
            }
            else {
            }
            (function (error) {
            });
        });
    };
    EditEstimateComponent.prototype.getListEstimateCustomMaterialService = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listEstimateCustomMaterialService' + '/' + this.estimateNum, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.estimateCustomMaterialData = response.response;
            }
            else {
                // this.priceBookServiceResponse = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.saveCustomMaterial = function () {
        var _this = this;
        this.customMaterialData1 = [];
        this.customMaterialListDetails.forEach(function (e) {
            var checkData = _this.customMaterialData1.filter(function (val) { return val.id === e.id; });
            if (e.selectedService == true && checkData.length == 0) {
                _this.customMaterialData1.push(e);
                //       ////console.log("customMAterialValues" + JSON.stringify(this.customMaterialData1))
            }
        });
        this.submitCustomMaterial();
    };
    EditEstimateComponent.prototype.submitCustomMaterial = function () {
        var _this = this;
        var Obj = {
            "customMaterialArray": this.customMaterialData1,
            "proId": this.loginData.loginCode,
            "estimateNo": this.estimateNum,
            "customerId": this.estimateBasicView.customerId,
            "staffId": this.estimateBasicView.staffId,
        };
        ////console.log("obj" + JSON.stringify(Obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/editCustomMaterialService', Obj)
            .subscribe(function (data) {
            var addCustomMaterial = data.json();
            _this.addCustomMaterialDetails = addCustomMaterial.response;
            _this.addCustomMaterialDetails = [];
            _this.getListEstimateCustomMaterialService();
            //this.getChannelManagerComm()
            _this.customMaterialResponse = true;
            _this.AddCustomLaborMaterialRecords = false;
        }, function (error) {
            _this.customMaterialResponse = false;
            //////console.log('The execution is failed ' + JSON.stringify(error))
        });
        // }
    };
    EditEstimateComponent.prototype.calculateCustomMaterial = function () {
        this.customMaterialListValue = 0;
        this.customMaterialResponse = true;
        ////console.log("Custom Material Data 1" + JSON.stringify(this.customMaterialData1))
        for (var i = 0; i < this.estimateCustomMaterialData.length; i++) {
            ////console.log(this.customMaterialData1)
            this.customMaterialListValue = this.customMaterialListValue + parseInt(this.estimateCustomMaterialData[i].subTotal);
            this.totalMarkupValue = this.totalMarkupValue + parseInt(this.estimateCustomMaterialData[i].subTotal) - (parseInt(this.estimateCustomMaterialData[i].costPrice) * parseInt(this.estimateCustomMaterialData[i].quantity));
            ////console.log("list Mark up value" + this.totalMarkupValue)
        }
        this.taxPercentCal = Math.round((this.customMaterialListValue) * (this.taxPercentage / 100) * 100) / 100;
        this.totalMaterialCostWithTax = this.customMaterialListValue + this.taxPercentCal;
        //this.calculate_totalEstPriceBeforeDisc()
        this.calculate_totalEstPriceBeforeDisc();
        this.getPromoCodeDiscount(this.promoCode);
        this.getOtherPromoCode();
        this.getOtherCost();
        //this.calculatediscount()
        //this.getChannelManagerComm()
    };
    EditEstimateComponent.prototype.deleteCustomMaterial = function (data) {
        var _this = this;
        this.customMaterialData1 = this.customMaterialData1.filter(function (val) { return val.id !== data.id; });
        //console.log(this.customMaterialData1)
        data.selectedService = false;
        for (var i = 0; i < this.customMaterialListDetails.length; i++) {
            if (data.itemId === this.customMaterialListDetails[i].itemId) {
                this.customMaterialListDetails[i].selectedService = false;
                // this.customMaterialListDetails = this.customMaterialListDetails.filter(val => val.selectedService == false);
            }
        }
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteEditCustomMaterialService/' + data.id)
            .subscribe(function (data) {
            var delCM = data.json();
            if (delCM.status == 200) {
                _this.customMaterialListValue = 0;
                for (var i = 0; i < _this.customMaterialData1.length; i++) {
                    _this.customMaterialListValue = _this.customMaterialListValue + parseInt(_this.customMaterialData1[i].materialSubTotal);
                    ////console.log("listPriceInventory" + this.listPriceInventory)
                    _this.totalMarkupValue = _this.totalMarkupValue + parseInt(_this.customMaterialData1[i].materialSubTotal) - (parseInt(_this.customMaterialData1[i].costPrice) * parseInt(_this.customMaterialData1[i].quantity));
                }
                _this.taxPercentCal = Math.round((_this.customMaterialListValue) * (_this.taxPercentage / 100) * 100) / 100;
                _this.totalMaterialCostWithTax = _this.customMaterialListValue + _this.taxPercentCal;
                _this.calculatediscount();
                _this.getListEstimateCustomMaterialService();
                //this.calculatediscount()
                _this.toastr.success("One Custom Material has deleted Successfully");
            }
            else {
                _this.toastr.success("Custom Material Deletion Failed");
            }
        });
    };
    //custom Material Services
    //custom Labor Services
    EditEstimateComponent.prototype.createLaborMaterial = function () {
        var val = Math.floor(100 + Math.random() * 900);
        this.randamCLMvalue = "CLM" + "-" + val;
        return this.formBuilder.group({
            item: '',
            type: '',
            staffName: '',
            quantity: 0,
            units: '',
            description: '',
            listPrice: '',
            priceMarkUp: '',
            subTotal: 0,
        });
    };
    // Custom Labor Details
    EditEstimateComponent.prototype.addCustomLaborFieldValue = function () {
        this.items = this.addCustomLaborMaterial.get('customLaborMaterial');
        this.items.push(this.createLaborMaterial());
    };
    Object.defineProperty(EditEstimateComponent.prototype, "customLaborMaterialValues", {
        get: function () {
            return this.addCustomLaborMaterial.get('customLaborMaterial');
        },
        enumerable: true,
        configurable: true
    });
    EditEstimateComponent.prototype.getRoles = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffRoleProSpe' + "/" + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var roles = data.json();
            if (roles.status == 200) {
                _this.roleData = roles.response;
                //////console.log("role data" + JSON.stringify(this.roleData))
                _this.dataRoles = true;
                //////console.log("service category Data" + JSON.stringify(this.roleData))
            }
            else {
                _this.dataRoles = false;
            }
        });
    };
    EditEstimateComponent.prototype.changeRole = function (roleName) {
        var _this = this;
        //////console.log(roleName)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameUsingRolesProSpe/' + roleName + "/" + this.loginData.loginCode, options).subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.staffData = response.response;
            }
            else {
                _this.staffData = [];
                _this.toastr.warning("No Staff For the selected Role");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    EditEstimateComponent.prototype.getDetails = function (employeeId) {
        var _this = this;
        //console.log(employeeId)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffDetailsUsingId/' + employeeId, options).subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.staffNameData = response.response[0];
                ////console.log("staffName Data" + JSON.stringify(this.staffNameData))
                _this.laborHours = "Hours",
                    _this.staffFirstName = _this.staffNameData.firstName + "-" + _this.staffNameData.lastName;
                //this.editEstimate.get('staffName').setValue(this.staffNameData.staffId)
                _this.laborCost = _this.staffNameData.billingRateperHr;
                //console.log("billingrate" + this.laborCost)
            }
            else {
                _this.toastr.warning("No Staff For the selected Role");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    EditEstimateComponent.prototype.viewCustomLabor = function (data) {
        var _this = this;
        //////console.log(data)
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewEditCustomLaborService/' + data)
            .subscribe(function (data) {
            var viewCL = data.json();
            if (viewCL.status == 200) {
                _this.viewCustomLaborData = viewCL.response[0];
                _this.editCustomLaborCost = _this.formBuilder.group({
                    item: [_this.viewCustomLaborData.item, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    type: [_this.viewCustomLaborData.type, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    staffId: [_this.viewCustomLaborData.staffId, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    staffName: [_this.viewCustomLaborData.staffName, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    quantity: [_this.viewCustomLaborData.quantity, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    units: [_this.viewCustomLaborData.units, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    description: [_this.viewCustomLaborData.description, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    priceMarkUp: [_this.viewCustomLaborData.priceMarkUp, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                    subTotal: [_this.viewCustomLaborData.subTotal, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
                });
                _this.changeRole(_this.viewCustomLaborData.type);
                _this.getDetails(_this.viewCustomLaborData.staffId);
                //console.log(this.viewCustomLaborData.staffId)
            }
            else {
            }
        });
    };
    EditEstimateComponent.prototype.cancelCustomLAndM = function () {
        this.customLaborMaterialValues.reset();
        this.errormsgquant = false;
        this.errormsgtype = false;
        this.errormsg = false;
        this.laborCost = 0;
    };
    EditEstimateComponent.prototype.submitCustomLaborMaterial = function () {
        var _this = this;
        for (var i = 0; i < this.addCustomLaborMaterial.get('customLaborMaterial').value.length; i++) {
            for (var j = 0; j < this.estimateCustomLaborData.length; j++) {
                //console.log("st" + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName)
                //console.log("estStaff" + this.estimateCustomLaborData[j].staffId)
                // if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == undefined || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == null && this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == undefined && this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == undefined) {
                //   this.errormsgtype = true
                //   this.errormsg = true
                //   this.errormsgquant = true
                // }
                if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == this.estimateCustomLaborData[j].staffId && this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == this.estimateCustomLaborData[j].type) {
                    alert('Staff Already Added');
                    return false;
                }
            }
            if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == undefined || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type == null) {
                this.errormsgtype = true;
                this.errormsg = false;
                this.errormsgquant = false;
            }
            else if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName == undefined) {
                this.errormsgtype = false;
                this.errormsg = true;
                this.errormsgquant = false;
            }
            else if (this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == "" || this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity == undefined) {
                this.errormsgquant = true;
                this.errormsgtype = false;
                this.errormsg = false;
            }
            else {
                this.errormsgquant = false;
                this.errormsgtype = false;
                this.errormsg = false;
                //console.log(this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName)
                var Obj = {
                    "customerId": this.estimateBasicView.customerId,
                    "proId": this.estimateBasicView.proId,
                    "estimateNo": this.estimateBasicView.estimateNo,
                    "item": this.randamCLMvalue,
                    "type": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].type,
                    "staffName": this.staffFirstName,
                    "staffId": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].staffName,
                    "quantity": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].quantity,
                    "units": this.laborHours,
                    "description": '' + this.addCustomLaborMaterial.get('customLaborMaterial').value[i].description,
                    "listPrice": this.laborCostPrice,
                    "priceMarkUp": this.laborCost,
                    "subTotal": this.subTotalValue,
                };
                //console.log("obj" + JSON.stringify(Obj))
                this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/addEditCustomLaborMaterialService/', Obj)
                    .subscribe(function (data) {
                    var addCustomLaborMaterilData = data.json();
                    _this.customLaborMaterialValues.reset();
                    // this.customLaborMaterialList();
                    _this.getListEstimateCustomLaborService();
                    _this.customLaborMaterialResponse = true;
                    _this.AddCustomLaborMaterialRecords = false;
                }, function (error) {
                    _this.customLaborMaterialResponse = false;
                    //console.log('The execution is failed ' + JSON.stringify(error))
                });
            }
        }
    };
    EditEstimateComponent.prototype.updateCustomLaborMaterial = function () {
        var _this = this;
        //console.log(this.estimateBasicView.estimateNo)
        var obj = {
            "id": this.viewCustomLaborData.id,
            "proId": this.loginData.loginCode,
            "customerId": this.estimateBasicView.customerId,
            "estimateNo": this.estimateBasicView.estimateNo,
            "item": '' + this.editCustomLaborCost.value.item,
            "type": '' + this.editCustomLaborCost.value.type,
            "staffId": '' + this.editCustomLaborCost.value.staffId,
            "staffName": '' + this.staffFirstName,
            "description": '' + this.editCustomLaborCost.value.description,
            "quantity": '' + this.editCustomLaborCost.value.quantity,
            "units": this.laborHours,
            "priceMarkUp": this.laborCost,
            "subTotal": this.subTotalValue.toFixed(2),
        };
        //console.log("Edit OBJ" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/editEditCustomLaborMaterialService', obj)
            .subscribe(function (data) {
            var woData = data.json();
            _this.customLaborMaterialValues.reset();
            _this.getListEstimateCustomLaborService();
            //console.log("woData" + JSON.stringify(woData))
        }, function (error) {
            //////console.log(error);// Error getting the data
        });
    };
    EditEstimateComponent.prototype.calculateCustomlabor = function () {
        this.customLaborListValue = 0;
        this.customFieldTechValue = 0;
        this.customLaborFieldTechHours = 0;
        for (var i = 0; i < this.estimateCustomLaborData.length; i++) {
            if (this.estimateCustomLaborData[i].staffId == this.loginData.loginCode) {
                this.customFieldTechValue = this.customFieldTechValue + parseInt(this.estimateCustomLaborData[i].subTotal);
            }
            else {
                this.customLaborListValue = this.customLaborListValue + parseInt(this.estimateCustomLaborData[i].subTotal);
            }
            if (this.estimateCustomLaborData[i].type == "Field Service Tech") {
                this.customLaborFieldTechHours = this.customLaborFieldTechHours + parseFloat(this.estimateCustomLaborData[i].quantity);
            }
            this.customLaborListValue = this.customLaborListValue + parseInt(this.estimateCustomLaborData[i].subTotal);
        }
        this.staffData = [];
        this.calculate_totalEstPriceBeforeDisc();
        this.getPromoCodeDiscount(this.promoCode);
        this.getOtherPromoCode();
        // this.calculate_totalEstPriceBeforeDisc()
        // this.getOtherPromoCode()
        this.getOtherCost();
        this.calculatediscount();
    };
    EditEstimateComponent.prototype.deleteCustomLabor = function (data) {
        var _this = this;
        this.customLaborListValue = 0;
        this.customLaborMarkUpListValue = 0;
        this.customFieldTechValue = 0;
        this.customLaborFieldTechHours = 0;
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/deleteEditCustomLaborService/' + data.id)
            .subscribe(function (data) {
            var delCM = data.json();
            if (delCM.status == 200) {
                _this.toastr.success("One Custom Labor has deleted Successfully");
                _this.calculate_totalEstPriceBeforeDisc();
                _this.calculatediscount();
                _this.getListEstimateCustomLaborService();
            }
            else {
                _this.toastr.success("Custom Labor Deletion Failed");
            }
        });
    };
    EditEstimateComponent.prototype.getQuantityValue = function (quantityValue) {
        ////console.log(quantityValue)
        this.quant = 0;
        this.subTotalValue = 0;
        this.quant = quantityValue;
        // this.listPriceLaborMarkUp = this.priceCLM * this.listPriceOfLabor
        // this.listPriceLaborMarkUp = this.laborCostPrice * this.laborListPrice
        //this.laborMarkUpValue = this.laborListPrice - this.laborCostPrice
        this.subTotalValue = this.quant * this.laborCost;
        this.calculateCustomlabor();
    };
    EditEstimateComponent.prototype.getListEstimateCustomLaborService = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listEstimateCustomLaborService' + '/' + this.estimateNum, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.estimateCustomLaborData = response.response;
                _this.calculateCustomlabor();
                _this.calculatediscount();
            }
            else {
                // this.priceBookServiceResponse = false;
            }
            (function (error) {
                //////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    //custom Labor 
    //Edit Multiple Images
    EditEstimateComponent.prototype.onSelectFile = function (fileInput) {
        var _this = this;
        // this.arr = []
        //this.imageArray = []
        this.progressHide1 = false;
        //console.log("fileInput.target.files" + fileInput.target.files)
        //console.log("Array checking" + fileInput.target.files.length)
        if (fileInput.target.files.length == 1) {
            this.filesToUpload.push(fileInput.target.files[0]);
            this.chosseTypecount = this.filesToUpload.length;
        }
        else {
            for (var i = 0; i < fileInput.target.files.length; i++) {
                this.filesToUpload.push(fileInput.target.files[i]);
                //console.log("this.filesTOUPLOAD" + JSON.stringify(this.filesToUpload.length))
                this.chosseTypecount = this.filesToUpload.length;
                this.fileName = "files";
                //console.log("this.chosseTypecount" + this.fileName)
            }
        }
        var filesAmount = fileInput.target.files.length;
        //console.log("filesAmount" + filesAmount)
        for (var i_1 = 0; i_1 < filesAmount; i_1++) {
            var reader = new FileReader();
            reader.onload = function (fileInput) {
                //console.log(fileInput.target.result);
                _this.urls.push(fileInput.target.result);
                _this.arr.push({ name: fileInput.target.result });
                // //console.log("checking data" + this.urls.length)
                // //console.log("array names" + JSON.stringify(this.arr))
                _this.imageuploadstatus = true;
            };
            //console.log("array names" + JSON.stringify(this.arr))
            reader.readAsDataURL(fileInput.target.files[i_1]);
        }
        // this.uploadData()
    };
    EditEstimateComponent.prototype.removeSelectedFile = function (i) {
        this.arr.splice(i, 1);
        this.imageArray.splice(i, 1);
        this.filesToUpload.splice(i, 1);
        //console.log(this.imageArray)
        // this.imageArray = []
        // for (var p = 0; p < this.arr.length; p++) {
        //   this.value = this.arr[p].name
        //   this.imageArray.push(this.arr[p].name.substring(25, 50))
        //  
        // }
    };
    EditEstimateComponent.prototype.removeDuplicates = function () {
        var _this = this;
        this.result.filter(function (value, index) { return _this.result.indexOf(value) === index; });
        var number = this.result.indexOf();
        //console.log("IMAGEARRAY" + JSON.stringify(this.result.indexOf()))
        //console.log("number" + number)
        if (number > -1) {
            this.result.splice(number, 1);
        }
        this.imageArray.push(this.result);
        //console.log("imageArrayimageArray" + JSON.stringify(this.imageArray))
    };
    EditEstimateComponent.prototype.upload = function () {
        var _this = this;
        var files = this.filesToUpload;
        this.formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            this.formData.append("fileImage", files[i]);
        }
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/multiPromotionData', this.formData)
            .map(function (files) { return files.json(); })
            .subscribe(function (files) {
            // this.imageArray = []
            for (var i = 0; i < files.imagePath.length; i++) {
                _this.imageArray.push(files.imagePath[i]);
                //console.log("  this.imageArray" + JSON.stringify(this.imageArray))
            }
            _this.uploadFlag = true;
            _this.displyFlag = false;
            _this.progressHide1 = true;
            _this.progressShow1 = false;
            if (_this.percentage1 === 100) {
                _this.progressHide1 = false;
                _this.progressShow1 = true;
                _this.img1 = false;
            }
        });
    };
    EditEstimateComponent.prototype.uploadData = function () {
        var _this = this;
        var files = this.filesToUpload;
        this.formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            this.formData.append("fileImage", files[i]);
        }
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/multiPromotionData', this.formData)
            .map(function (files) { return files.json(); })
            .subscribe(function (files) {
            for (var i = 0; i < files.imagePath.length; i++) {
                _this.newArray.push(files.imagePath[i]);
            }
            var uniqueArray = Array.from(new Set(_this.newArray));
            _this.imageNames = Object.keys(uniqueArray).map(function (key) { return ({ type: key, image: uniqueArray[key] }); });
            _this.arr = Object.keys(uniqueArray).map(function (key) { return ({ type: key, name: _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + "/" + uniqueArray[key] }); });
        });
    };
    //Edit Multiple Images
    //calculations
    // LIST Equip Use jobrelated
    EditEstimateComponent.prototype.jobRelatedcost = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPBJobrelated/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var equipAgreement = data.json();
            if (equipAgreement.status == 200) {
                //////console.log("agreementStatus Details" + JSON.stringify(equipAgreement))
                _this.jobrelated = equipAgreement.response;
                //////console.log("list" + JSON.stringify(this.jobrelated))
                for (var i = 0; i < _this.jobrelated.length; i++) {
                    if (_this.jobrelated[i].settingDesc == "Credit Card Processing Fee") {
                        _this.ccpf = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Truck Operating Cost") {
                        _this.toc = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Workmans Comp Insurance") {
                        _this.workmanCompIns = _this.jobrelated[i].settingValue;
                    }
                    else if (_this.jobrelated[i].settingDesc == "Employee Tax Company") {
                        _this.empTaxComp = _this.jobrelated[i].settingValue;
                    }
                }
                // return false;
                _this.job = true;
                //////console.log("job" + this.job)
            }
            else {
                _this.job = false;
            }
        }, function (error) {
            //  this.toastr.warning('Unable to connect to server');
        });
    };
    EditEstimateComponent.prototype.calculate_totalEstPriceBeforeDisc = function () {
        this.totalEstPriceBeforeDisc = parseInt(this.priceBookFinalValue) + (this.totalMaterialCostWithTax) + parseInt(this.customLaborListValue);
        console.log("totalEstPriceBeforeDisc" + this.totalEstPriceBeforeDisc);
    };
    EditEstimateComponent.prototype.getPaymentValue = function () {
        this.paymentMethodValue = this.editEstimate.value.paymentValue / 100;
    };
    EditEstimateComponent.prototype.calculate_totalValueAfterDiscounts = function () {
        this.totalValueAfterDiscounts = Math.round((parseInt(this.afterDiscount) + parseInt(this.paymentModeValue)) * 100) / 100;
        //console.log("this.afterDiscount" + this.afterDiscount)
        //console.log("this.paymentModeValue" + this.paymentModeValue)
        //console.log(" this.totalValueAfterDiscounts " + this.totalValueAfterDiscounts)
    };
    EditEstimateComponent.prototype.calculate_paymentModeValue = function () {
        this.paymentModeValue = Math.round((parseInt(this.afterDiscount) * (this.creditCardPercentage)) * 100) / 100;
        //console.log("Credit Card" + "" + this.paymentModeValue)
    };
    EditEstimateComponent.prototype.getPaymentMode = function () {
        //console.log("Payment Method Values")
        if (this.editEstimate.value.paymentMethods == "Credit Card") {
            ////console.log("in ccpf")
            this.creditCardPF = this.ccpf;
            console.log(this.creditCardPF);
            this.creditCardPercentage = this.creditCardPF / 100;
            this.calculate_paymentModeValue();
            this.calculate_afterDiscount();
            this.calculate_totalValueAfterDiscounts();
            this.getPaymentValue();
            //console.log("test" + this.totalValueAfterDiscounts)
            this.getReqDiscount();
            this.getOtherCost();
        }
        else {
            this.creditCardPF = 0;
            this.creditCardPercentage = this.creditCardPF / 100;
            this.calculate_paymentModeValue();
            this.calculate_afterDiscount();
            this.calculate_totalValueAfterDiscounts();
            this.getPaymentValue();
            //console.log("test" + this.totalValueAfterDiscounts)
            this.getReqDiscount();
            this.getOtherCost();
        }
    };
    EditEstimateComponent.prototype.getReqDiscount = function () {
        this.reqDisc = this.editEstimate.value.reqDepositValue / 100;
        this.finalValue = Math.round(this.totalValueAfterDiscounts * this.reqDisc * 100) / 100;
        //console.log(this.finalValue)
        if (this.finalValue > 1000) {
            this.finalValue = 1000.00;
        }
        else {
            this.finalValue = this.finalValue;
        }
    };
    EditEstimateComponent.prototype.getOtherCost = function () {
        // this.customTotal = this.customMaterialListValue + this.customLaborListValue
        this.customTotal = this.customMaterialListValue + parseInt(this.customLaborListValue);
        this.oCost = this.editEstimate.value.otherCost;
        this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
        //console.log("otherCost" + this.editEstimate.value.otherCost)
        // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
        this.calculate_directJobCostValue();
        this.calculate_desiredPercentage();
        this.calculate_estimatedGrossProfitValue();
        // this.getStaffName()
        // this.getChannelManagerComm()
        this.calculate_overHeadEstimateCostValue();
        this.getEstimateCommissionValue();
    };
    EditEstimateComponent.prototype.getEstimateCommissionValue = function () {
        this.sumOfPriceBookCustomLaborHours = parseInt(this.customLaborFieldTechHours) + parseInt(this.priceBookHoursValue);
        this.totalHoursWithWorkingType = this.workingType * this.sumOfPriceBookCustomLaborHours;
        this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + parseInt(this.customLaborListValue) + this.totalHoursWithWorkingType) * 100) / 100;
        this.getWorksmanCompValue();
    };
    EditEstimateComponent.prototype.getWorksmanCompValue = function () {
        //console.log("worksman" + this.editEstimate.value.worksmanCompType)
        if (this.editEstimate.value.worksmanCompType == "YES") {
            this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + parseInt(this.customLaborListValue) + this.totalHoursWithWorkingType) * 100) / 100;
            this.getEmployeeTaxCompType();
        }
        else if (this.editEstimate.value.worksmanCompType == "NO") {
            this.workManEstComm = 0;
            this.getEmployeeTaxCompType();
        }
    };
    EditEstimateComponent.prototype.getEmployeeTaxCompType = function () {
        //console.log("worksman" + this.addEstimate.value.empTaxCompType)
        if (this.editEstimate.value.empTaxCompType == "YES") {
            this.getEmployeeTaxCompany();
        }
        else if (this.editEstimate.value.empTaxCompType == "NO") {
            //console.log("in no type");
            this.employeeTaxComm = 0;
            // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
            this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
            //this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue
            this.netProfitLabor = Math.round((parseInt(this.totalValueAfterDiscounts) - parseInt(this.directJobCostValue) - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
            //console.log("netProfitLabor" + this.netProfitLabor)
            if (this.netProfitLabor < 0) {
                this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                console.log(this.netProfitLaborWithCurrency);
                this.netProfitMinusCheck = true;
            }
            else {
                this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                console.log(this.netProfitLaborWithCurrency);
                this.netProfitMinusCheck = false;
            }
            if (this.loginStaffCommissionType == "Net Profit") {
                this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = true;
                }
                else {
                    this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = false;
                }
            }
            else if (this.loginStaffCommissionType == "Gross Sales") {
                this.estTechComm = Math.round(parseInt(this.totalValueAfterDiscounts) * (this.loginStaffCommission / 100) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = true;
                }
                else {
                    this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = false;
                }
            }
            else if (this.loginStaffCommissionType == "Gross Profit") {
                this.estTechComm = Math.round((this.estimatedGrossProfitValue) * (this.loginStaffCommission / 100) * 100) / 100;
                if (this.estTechComm < 0) {
                    this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = true;
                }
                else {
                    this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                    console.log(this.estTechCommWithCurrency);
                    this.redEstTechComm = false;
                }
            }
            this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
            //console.log("totalEstTechPay" + this.totalEstTechPay)
            this.estNetProfit = Math.round((this.netProfitLabor - this.totalEstTechPay) * 100) / 100;
            if (this.estNetProfit < 0) {
                //console.log("checking minus change to red color")
                this.estNetProfitWithCurrency = "-$" + Math.abs(this.estNetProfit);
                console.log(this.estNetProfitWithCurrency);
                this.red = true;
            }
            else {
                this.red = false;
                this.estNetProfitWithCurrency = "$" + Math.abs(this.estNetProfit);
                console.log(this.estNetProfitWithCurrency);
                //console.log("no minus change to green color")
            }
            this.estNetProfitPercent = Math.round(((this.estNetProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
            if (this.estNetProfitPercent < 0) {
                this.estNetProfitPercentWithCurrency = "-$" + Math.abs(this.estNetProfitPercent);
                console.log(this.estNetProfitPercentWithCurrency);
                //console.log("checking minus change to red color")
                this.redPer = true;
            }
            else {
                this.estNetProfitPercentWithCurrency = "$" + Math.abs(this.estNetProfitPercent);
                console.log(this.estNetProfitPercentWithCurrency);
                this.redPer = false;
                //console.log("no minus change to green color")
            }
            // this.netProfit = Math.round(((this.estimatedMarkUpProfit) + (this.netProfitLabor)) * 100) / 100
            // this.netProfitPercent = Math.round(((this.netProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
        }
    };
    EditEstimateComponent.prototype.getEmployeeTaxCompany = function () {
        //console.log("estimated Tech Comm Cost" + this.empTaxComp)
        this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + parseInt(this.customLaborListValue) + this.totalHoursWithWorkingType) * 100) / 100;
        //console.log(this.employeeTaxComm)
        this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
        //console.log(this.employeeCommTaxInc)
        this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
        this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.estimatedMarkUpProfit) * 100) / 100;
        //console.log("netProfitLabor" + this.netProfitLabor)
        if (this.netProfitLabor < 0) {
            this.netProfitMinusCheck = true;
        }
        else {
            this.netProfitMinusCheck = false;
        }
        if (this.loginStaffCommissionType == "Net Profit") {
            this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.redEstTechComm = true;
            }
            else {
                this.redEstTechComm = false;
            }
        }
        else if (this.loginStaffCommissionType == "Gross Sales") {
            this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.redEstTechComm = true;
            }
            else {
                this.redEstTechComm = false;
            }
        }
        else if (this.loginStaffCommissionType == "Gross Profit") {
            this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
            if (this.estTechComm < 0) {
                this.redEstTechComm = true;
            }
            else {
                this.redEstTechComm = false;
            }
        }
        this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
        //console.log("totalEstTechPay" + this.totalEstTechPay)
        this.estNetProfit = Math.round((this.netProfitLabor - this.totalEstTechPay) * 100) / 100;
        if (this.estNetProfit < 0) {
            //console.log("checking minus change to red color")
            this.red = true;
        }
        else {
            this.red = false;
            //console.log("no minus change to green color")
        }
        this.estNetProfitPercent = Math.round(((this.estNetProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
        if (this.estNetProfitPercent < 0) {
            //console.log("checking minus change to red color")
            this.redPer = true;
        }
        else {
            this.redPer = false;
            //console.log("no minus change to green color")
        }
    };
    EditEstimateComponent.prototype.listPaymentMethods = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listPaymentMethods', options)
            .subscribe(function (data) {
            var listPay = data.json();
            if (listPay.status == 200) {
                _this.payMethods = listPay.response;
                _this.payment = true;
            }
            else {
                _this.payment = false;
                _this.toastr.warning('Unable to connect to server');
            }
        });
    };
    EditEstimateComponent.prototype.getChannelManagerList = function () {
        var _this = this;
        ////console.log(this.billingAddressData.proId)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffChannelManager/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.channelManagerList = response.response;
                //console.log("in staff channel manager" + JSON.stringify(this.channelManagerList))
                _this.channelManagerResponse = true;
            }
            else {
                _this.channelManagerResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.getEmployeeRolesDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getEmployeeRole/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.employeeRole = response.response;
                ////console.log("employeeRole" + JSON.stringify(this.employeeRole))
                return false;
            }
            else {
                _this.toastr.warning("No Records Found");
            }
        }, function (error) {
            _this.toastr.warning("Unable to connect to server");
        });
    };
    EditEstimateComponent.prototype.getLoginStaffDetails = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameDetails/' + this.estimateBasicView.staffId, options)
            .subscribe(function (data) {
            var response = data.json();
            ////console.log("in staff channel manager")
            if (response.status == 200) {
                _this.loginStaffDetailsList = response.response[0];
                _this.loginStaffCommission = _this.loginStaffDetailsList.compValue;
                _this.loginStaffCommissionType = _this.loginStaffDetailsList.compType;
                _this.loginStaffGroup = _this.loginStaffDetailsList.empgroup;
                _this.loginStaffManagerId = _this.loginStaffDetailsList.managerId;
                if (_this.loginStaffDetailsList.hourlyRate == "true") {
                    _this.commissionType = "HOURLY";
                    _this.workingType = _this.loginStaffDetailsList.hourlyRateValue;
                    //console.log("working type" + this.workingType)
                }
                else if (_this.loginStaffDetailsList.weeklyRate == "true") {
                    _this.commissionType = "WEEKLY";
                    _this.weeklyType = _this.loginStaffDetailsList.weeklyRateValue;
                    _this.workingType = _this.weeklyType / 40;
                }
                _this.loginStaffDetailsResponse = true;
                //this.listGroupDetails();
            }
            else {
                _this.loginStaffDetailsResponse = false;
            }
            (function (error) {
                ////console.log('The execution is failed ' + JSON.stringify(error))
            });
        });
    };
    EditEstimateComponent.prototype.getListOfStates = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getListOfStates', options)
            .subscribe(function (data) {
            var response = data.json();
            _this.statesData = response.response;
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    EditEstimateComponent.prototype.getStaffName = function (channelManagerId) {
        var _this = this;
        if (this.editEstimate.value.channelManagerId == "-1") {
            this.empCommission = 0;
            this.channelManagerCommValue = 0;
            return;
        }
        else {
            //console.log("getName" + this.editEstimate.value.channelManagerId)
            var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
            headers.append("Accept", 'application/json');
            headers.append('Content-Type', 'application/json');
            var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
            this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getStaffNameDetails/' + this.editEstimate.value.channelManagerId, options)
                .subscribe(function (data) {
                var response = data.json();
                //////console.log("in staff channel manager")
                if (response.status == 200) {
                    _this.channelManagerDetailsList = response.response[0];
                    ////console.log("channelManagerID" + JSON.stringify(this.channelManagerDetailsList))
                    _this.netProfitValue = false;
                    _this.grossSaleValue = true;
                    _this.channelManagerId = _this.channelManagerDetailsList.employeeId;
                    _this.editEstimate.get('channelManagerId').setValue(_this.channelManagerDetailsList.employeeId);
                    _this.channelManagerEmail = _this.channelManagerDetailsList.email;
                    _this.empName = _this.channelManagerDetailsList.firstName + "-" + _this.channelManagerDetailsList.lastName;
                    _this.empCommission = _this.channelManagerDetailsList.compValue;
                    ////console.log("comp value" + JSON.stringify(this.empCommission))
                    _this.empCommissionType = _this.channelManagerDetailsList.compType;
                    // this.getChannelManagerComm()
                    _this.channelManagerDetailsResponse = true;
                }
                else {
                    _this.channelManagerDetailsResponse = false;
                }
                (function (error) {
                    //////console.log('The execution is failed ' + JSON.stringify(error))
                });
            });
        }
    };
    EditEstimateComponent.prototype.calculate_directJobCostValue = function () {
        this.directJobCostValue = parseFloat(this.paymentModeValue + parseInt(this.toc) + this.customMaterialListValue + parseInt(this.customLaborListValue) + parseInt(this.editEstimate.value.otherCost));
        // this.directJobCostValue = this.directJobCostValue
        //console.log(" this.directJobCostValue" + this.directJobCostValue)
    };
    EditEstimateComponent.prototype.calculate_desiredPercentage = function () {
        this.desiredPercentage = Math.round((this.directJobCostValue / this.totalValueAfterDiscounts) * 100 * 100) / 100;
        //console.log(" this.desiredPercentage" + this.desiredPercentage)
    };
    EditEstimateComponent.prototype.calculate_estimatedGrossProfitValue = function () {
        this.estimatedGrossProfitValue = Math.round(((this.totalValueAfterDiscounts) - (this.directJobCostValue)) * 100) / 100;
        //console.log(" this.estimatedGrossProfitValue" + this.estimatedGrossProfitValue)
    };
    EditEstimateComponent.prototype.calculate_overHeadEstimateCostValue = function () {
        this.overHeadEstimateCostValue = Math.round(this.totalValueAfterDiscounts * (this.overHeadCostValue / 100) * 100) / 100;
        //console.log(" this.overHeadEstimateCostValue" + this.overHeadEstimateCostValue)
    };
    EditEstimateComponent.prototype.calculate_afterDiscount = function () {
        this.afterDiscount = Math.round((this.totalEstPriceBeforeDisc - (this.totalDiscount)) * 100) / 100;
        console.log(" this.afterDiscount" + this.afterDiscount);
    };
    //calculations
    EditEstimateComponent.prototype.getChannelManagerComm = function () {
        //console.log("Coming from pricebook", this.empCommissionType)
        //console.log("Net Profit", this.netProfitLabor)
        // this.channelManagerCommValue = Math.round(this.totalValueAfterDiscounts * this.empCommission / 100 * 100) / 100
        if (this.empCommissionType == "Net Profit") {
            this.netProfitValue = true;
            this.grossSaleValue = false;
            this.channelManagerCommValue = 0;
            this.customTotal = this.customMaterialListValue + parseInt(this.customLaborListValue);
            this.oCost = this.editEstimate.value.otherCost;
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
            this.calculate_directJobCostValue();
            this.calculate_desiredPercentage();
            this.calculate_estimatedGrossProfitValue();
            this.calculate_overHeadEstimateCostValue();
            this.sumOfPriceBookCustomLaborHours = this.customLaborFieldTechHours + this.priceBookHoursValue;
            this.totalHoursWithWorkingType = this.workingType * this.sumOfPriceBookCustomLaborHours;
            // this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.totalHoursWithWorkingType) * 100) / 100
            this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + parseInt(this.customLaborListValue) + this.totalHoursWithWorkingType) * 100) / 100;
            if (this.editEstimate.value.worksmanCompType == "YES") {
                this.workManEstComm = Math.round(this.workmanCompIns / 100 * (this.channelManagerCommValue + parseInt(this.customLaborListValue) + this.totalHoursWithWorkingType) * 100) / 100;
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + parseInt(this.customLaborListValue) + this.totalHoursWithWorkingType) * 100) / 100;
                ////console.log("channelmanagercommissionvalue" + this.channelManagerCommValue)
                ////console.log("custom labor" + this.customLaborListValue)
                ////console.log("total working" + this.totalHoursWithWorkingType)
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                //  this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100
                if (this.netProfitLabor < 0) {
                    this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                    //console.log(this.netProfitLaborWithCurrency)
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                    //console.log(this.netProfitLaborWithCurrency)
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.estNetProfitWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.red = true;
                }
                else {
                    this.estNetProfitWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.estNetProfitPercentWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitPercentWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.redPer = true;
                }
                else {
                    this.estNetProfitPercentWithCMWithCurrency = "$" + Math.abs(this.estNetProfitPercentWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.redPer = false;
                }
            }
            else if (this.editEstimate.value.worksmanCompType == "NO") {
                this.workManEstComm = 0;
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + parseInt(this.customLaborListValue) + this.totalHoursWithWorkingType) * 100) / 100;
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
                console.log(this.netProfitLabor);
                if (this.netProfitLabor < 0) {
                    this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                    //console.log(this.netProfitLaborWithCurrency)
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                    //console.log(this.netProfitLaborWithCurrency)
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.red = true;
                    this.estNetProfitWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                }
                else {
                    this.estNetProfitWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.estNetProfitPercentWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitPercentWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.redPer = true;
                }
                else {
                    this.estNetProfitPercentWithCMWithCurrency = "$" + Math.abs(this.estNetProfitPercentWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.redPer = false;
                }
            }
            if (this.editEstimate.value.empTaxCompType == "YES") {
                ////console.log("estimated Tech Comm Cost" + this.empTaxComp)
                // this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + this.customLaborListValue + this.estimatedTechComm) * 100) / 100
                this.employeeTaxComm = Math.round(this.empTaxComp / 100 * (this.channelManagerCommValue + parseInt(this.customLaborListValue) + this.totalHoursWithWorkingType) * 100) / 100;
                ////console.log(this.employeeTaxComm)
                // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                ////console.log(this.employeeCommTaxInc)
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
                ////console.log("netProfitLabor" + this.netProfitLabor)
                if (this.netProfitLabor < 0) {
                    this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                    //console.log(this.netProfitLaborWithCurrency)
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                    //console.log(this.netProfitLaborWithCurrency)
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.redEstTechComm = false;
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.estNetProfitWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.red = true;
                }
                else {
                    this.estNetProfitWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.estNetProfitPercentWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitPercentWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.redPer = true;
                }
                else {
                    this.estNetProfitPercentWithCMWithCurrency = "$" + Math.abs(this.estNetProfitPercentWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.redPer = false;
                }
            }
            else if (this.editEstimate.value.empTaxCompType == "NO") {
                ////console.log("in no type");
                this.employeeTaxComm = 0;
                // this.employeeCommTaxInc = Math.round((this.estimatedTechComm + this.workManEstComm + this.employeeTaxComm) * 100) / 100
                this.employeeCommTaxInc = Math.round((this.totalHoursWithWorkingType + this.workManEstComm + this.employeeTaxComm) * 100) / 100;
                this.estimatedMarkUpProfit = this.customMaterialMarkUpListValue + this.customLaborMarkUpListValue;
                this.netProfitLabor = Math.round((this.totalValueAfterDiscounts - this.directJobCostValue - this.overHeadEstimateCostValue - this.employeeCommTaxInc + this.totalMarkupValue) * 100) / 100;
                ////console.log("netProfitLabor" + this.netProfitLabor)
                if (this.netProfitLabor < 0) {
                    this.netProfitLaborWithCurrency = "-$" + Math.abs(this.netProfitLabor);
                    //console.log(this.netProfitLaborWithCurrency)
                    this.netProfitMinusCheck = true;
                }
                else {
                    this.netProfitLaborWithCurrency = "$" + this.netProfitLabor;
                    //console.log(this.netProfitLaborWithCurrency)
                    this.netProfitMinusCheck = false;
                }
                if (this.loginStaffCommissionType == "Net Profit") {
                    this.estTechComm = Math.round((this.netProfitLabor * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Sales") {
                    this.estTechComm = Math.round((this.totalValueAfterDiscounts * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                else if (this.loginStaffCommissionType == "Gross Profit") {
                    this.estTechComm = Math.round((this.estimatedGrossProfitValue * (this.loginStaffCommission / 100)) * 100) / 100;
                    if (this.estTechComm < 0) {
                        this.estTechCommWithCurrency = "-$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = true;
                    }
                    else {
                        this.estTechCommWithCurrency = "$" + Math.abs(this.estTechComm);
                        //console.log(this.estTechCommWithCurrency)
                        this.redEstTechComm = false;
                    }
                }
                this.totalEstTechPay = Math.round((this.estTechComm + this.totalHoursWithWorkingType) * 100) / 100;
                this.channelManagerCommValueNetProfit = Math.round(this.netProfitLabor * this.empCommission / 100 * 100) / 100;
                this.estNetProfitWithCM = Math.round((this.netProfitLabor - this.totalEstTechPay - this.channelManagerCommValueNetProfit) * 100) / 100;
                if (this.estNetProfitWithCM < 0) {
                    this.estNetProfitWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.red = true;
                }
                else {
                    this.estNetProfitWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitWithCMWithCurrency)
                    this.red = false;
                }
                this.estNetProfitPercentWithCM = Math.round(((this.estNetProfitWithCM / this.totalValueAfterDiscounts) * 100) * 100) / 100;
                if (this.estNetProfitPercentWithCM < 0) {
                    this.estNetProfitPercentWithCMWithCurrency = "-$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitPercentWithCMWithCurrency)
                    this.redPer = true;
                }
                else {
                    this.estNetProfitPercentWithCMWithCurrency = "$" + Math.abs(this.estNetProfitWithCM);
                    //console.log(this.estNetProfitPercentWithCMWithCurrency)
                    this.redPer = false;
                }
                // this.netProfit = Math.round(((this.estimatedMarkUpProfit) + (this.netProfitLabor)) * 100) / 100
                // this.netProfitPercent = Math.round(((this.netProfit / this.totalValueAfterDiscounts) * 100) * 100) / 100;
            }
        }
        else if (this.empCommissionType == "Gross Sales") {
            this.netProfitValue = false;
            this.grossSaleValue = true;
            this.channelManagerCommValueNetProfit = 0;
            this.channelManagerCommValue = Math.round(this.totalValueAfterDiscounts * this.empCommission / 100 * 100) / 100;
            //console.log("channelManagerCommValue", this.channelManagerCommValue)
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            this.calculate_directJobCostValue();
            this.calculate_desiredPercentage();
            this.calculate_estimatedGrossProfitValue();
            this.calculate_overHeadEstimateCostValue();
            this.getOtherCost();
            this.getEstimateCommissionValue();
        }
        else if (this.empCommissionType == "Gross Profit") {
            //console.log("in Gross Profit" + this.estimatedGrossProfitValue)
            this.netProfitValue = false;
            this.grossSaleValue = true;
            this.channelManagerCommValueNetProfit = 0;
            this.channelManagerCommValue = Math.round(this.estimatedGrossProfitValue * this.empCommission / 100 * 100) / 100;
            //console.log("channelManagerCommValue" + this.channelManagerCommValue)
            //console.log("estimatedGrossProfitValue" + this.estimatedGrossProfitValue)
            //console.log("empCommission" + this.empCommission)
            this.cmPMValue = Math.round((this.channelManagerCommValue + this.paymentModeValue) * 100) / 100;
            this.calculate_directJobCostValue();
            this.calculate_desiredPercentage();
            this.calculate_estimatedGrossProfitValue();
            this.calculate_overHeadEstimateCostValue();
            this.getOtherCost();
            this.getEstimateCommissionValue();
        }
    };
    // ESTIMATE ANALYSIER
    EditEstimateComponent.prototype.getDesiredProfit = function () {
        this.desiredValue = this.editEstimate.value.desiredProfitInEA;
        this.desiredProfitValues = Math.round(this.totalValueAfterDiscounts * this.desiredValue / 100 * 100) / 100;
        // this.getChannelManagerComm()
    };
    EditEstimateComponent.prototype.calculatediscount = function () {
        this.calculate_totalEstPriceBeforeDisc();
        this.otherPromoValue = this.editEstimate.value.otherPromoCode;
        if (this.promoValue == 0) {
            this.totalDiscount = this.otherPromoValue;
            // this.paymentModeValue = 0
            this.jobRelatedcost();
            this.getPaymentMode();
            console.log("pay" + this.paymentModeValue);
            this.calculate_afterDiscount();
            this.calculate_totalValueAfterDiscounts();
            this.getReqDiscount();
            // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
            this.calculate_directJobCostValue();
            this.calculate_desiredPercentage();
            // this.estimatedGrossProfitValue = parseFloat(this.totalValueAfterDiscounts) - parseFloat(this.directJobCostValue)
            this.calculate_estimatedGrossProfitValue();
            this.calculate_overHeadEstimateCostValue();
            this.getEstimateCommissionValue();
            this.getChannelManagerComm();
            this.getOtherCost();
        }
        else {
            this.totalDiscount = parseInt(this.promoValue) + parseInt(this.otherPromoValue);
            console.log("pay" + this.paymentModeValue);
            //this.paymentModeValue = 0
            this.jobRelatedcost();
            this.getPaymentMode();
            this.calculate_afterDiscount();
            this.calculate_totalValueAfterDiscounts();
            this.getReqDiscount();
            // this.directJobCostValue = this.cmPMValue + parseInt(this.toc) + this.customMaterialListValue + this.customLaborListValue + parseInt(this.addEstimate.value.otherCost)
            this.calculate_directJobCostValue();
            this.calculate_desiredPercentage();
            // this.estimatedGrossProfitValue = parseFloat(this.totalValueAfterDiscounts) - parseFloat(this.directJobCostValue)
            this.calculate_estimatedGrossProfitValue();
            this.calculate_overHeadEstimateCostValue();
            this.getEstimateCommissionValue();
            this.getChannelManagerComm();
            this.getOtherCost();
        }
    };
    EditEstimateComponent.prototype.getPromoCodeDiscount = function (promoCode) {
        var _this = this;
        if (parseInt(promoCode) == 0) {
            this.discountAmount = 0, this.promoValue = 0;
            this.calculatediscount();
            return;
        }
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getPromoDiscount' + '/' + this.loginData.proId + '/' + promoCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.promoDiscountListDetails1 = response.response;
                _this.promoDiscountValue1 = response.response[0];
                ////console.log("promoDiscountListDetails" + JSON.stringify(this.promoDiscountListDetails1))
                ////console.log("promoDiscountList" + JSON.stringify(this.promoDiscountValue1))
                if (_this.promoDiscountValue1.type == "$") {
                    _this.discountAmount = _this.promoDiscountValue1.promotionValues;
                    _this.promoValue = _this.discountAmount;
                    ////console.log("type=$" + JSON.stringify(this.discountAmount))
                }
                if (_this.promoDiscountValue1.type == "%") {
                    _this.discountAmount = (_this.promoDiscountValue1.promotionValues * _this.promoDiscountValue1.totalTicket) / 100;
                    _this.promoValue = _this.discountAmount;
                    ////console.log("type=%" + JSON.stringify(this.discountAmount))
                }
                _this.calculatediscount();
            }
            else {
            }
            (function (error) {
            });
        });
    };
    EditEstimateComponent.prototype.listPromotionCodeValue = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listOfActivePromotions/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var promotion = data.json();
            if (promotion.status == 200) {
                ////console.log("promotion Details" + JSON.stringify(promotion))
                _this.promotionData = promotion.response;
                _this.promotionData1 = promotion.response[0];
                _this.promotion = true;
                return false;
            }
            else {
                _this.promotion = false;
            }
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    /* -- /Add Customer Material Auto pappulated Name --*/
    EditEstimateComponent.prototype.getOtherPromoCode = function () {
        this.otherPromoValue = this.editEstimate.value.otherPromoCode;
        this.calculatediscount();
        if (this.editEstimate.value.paymentMethods == "Credit Card") {
            ////console.log("in ccpf")
            this.creditCardPF = this.ccpf;
            this.creditCardPercentage = this.creditCardPF / 100;
            console.log("ccpertange1" + this.creditCardPercentage);
            console.log("afterDiscount" + this.afterDiscount);
            this.calculate_paymentModeValue();
            console.log("payment" + this.paymentModeValue);
            // this.getReqDiscount()
            // this.getOtherCost()
        }
        else {
            this.creditCardPF = 0;
            this.creditCardPercentage = this.creditCardPF / 100;
            this.calculate_paymentModeValue();
            console.log("ccpertange" + this.creditCardPercentage);
            ////console.log(this.paymentModeValue)   
            ////console.log(this.totalValueAfterDiscounts)
            this.getReqDiscount();
            this.getOtherCost();
        }
        this.calculatediscount();
    };
    EditEstimateComponent.prototype.listEstimate = function () {
        this.router.navigate(['/staff/listEstim1ate']);
    };
    EditEstimateComponent.prototype.updateEstimate = function () {
        var _this = this;
        if (this.filesToUpload.length > 0 && this.uploadFlag == false) {
            this.displyFlag = true;
            return false;
        }
        var editObj = {
            "proId": this.loginData.loginCode,
            "staffId": this.estimateBasicView.staffId,
            "managerId": this.loginStaffManagerId,
            "estimateNo": this.estimateNum,
            "workOrderNo": this.estimateBasicView.workOrderNo,
            "dateCreated": this.fullDate,
            "modifiedOn": this.fullDate,
            "modifiedBy": this.loginData.loginCode,
            "channelManager": this.empName,
            "channelManagerId": this.channelManagerId,
            "customerId": this.estimateBasicView.customerId,
            "splitRate": this.editEstimate.value.splitRate,
            "primaryTech": this.estimateBasicView.primaryTech,
            "secondaryTech": this.editEstimate.value.secondaryTech,
            "companyName": this.editEstimate.value.companyName,
            "emailId": this.editEstimate.value.emailId,
            "firstName": this.estimateBasicView.firstName,
            "lastName": this.estimateBasicView.lastName,
            "phoneNumber": this.estimateBasicView.phoneNumber,
            "phoneType": this.estimateBasicView.phoneType,
            "address": this.estimateBasicView.address,
            "state": this.estimateBasicView.state,
            "city": this.estimateBasicView.city,
            "zipcode": this.estimateBasicView.zipcode,
            "invoiceBy": this.estimateBasicView.invoiceBy,
            "invoiceEmail": this.estimateBasicView.invoiceEmail,
            "poNumber": this.estimateBasicView.poNumber,
            "customerSince": this.estimateBasicView.customerSince,
            // "stateName": this.addEstimate.value.stateName,
            // "crossSt1": this.estimateBasicView.firstName,
            // "crossSt2": this.estimateBasicView.firstName,
            "source": this.estimateBasicView.source,
            "paymentMethod": this.estimateBasicView.paymentMethod,
            "expStartDateTime": this.estimateBasicView.expStartDateTime,
            "expEndDateTime": this.estimateBasicView.expEndDateTime,
            "frequency": this.editEstimate.value.frequency,
            "leadQuantity": this.estimateBasicView.leadQuantity,
            "creditCardRequired": this.estimateBasicView.creditCardRequired,
            "adminNotes": this.estimateBasicView.adminNotes,
            "doNotServe": this.estimateBasicView.doNotServe,
            "jobTitle": this.estimateBasicView.jobTitle,
            "serviceContactEmail": this.estimateBasicView.serviceContactEmail,
            "serviceContactNumber": this.estimateBasicView.serviceContactNumber,
            // "jobPhoneType": this.estimateBasicView.jobPhoneType,
            "serviceAddress": this.estimateBasicView.serviceAddress,
            "serviceState": this.estimateBasicView.serviceState,
            "serviceCity": this.estimateBasicView.serviceCity,
            "serviceZipcode": this.estimateBasicView.serviceZipcode,
            "materialGD": this.editEstimate.value.materialGD,
            // "laborGD": this.addEstimate.value.laborGD,
            "priceBookListValue": this.priceBookFinalValue,
            "customMaterialListValue": this.customMaterialListValue,
            "taxPercentage": this.taxPercentage,
            "taxPercentValue": this.taxPercentCal,
            "customLaborListValue": this.customLaborListValue,
            "requireManagerApproval": this.editEstimate.value.requireManagerApproval,
            // "paymentMethods": this.addEstimate.value.paymentMethods,
            // "paymentValue": this.addEstimate.value.paymentValue,
            // "newPromoCode": this.addEstimate.value.newPromoCode,
            // "otherPromoCode": this.addEstimate.value.otherPromoCode,
            // "reqDiscount": this.addEstimate.value.reqDiscount,
            "specialInstructions": this.editEstimate.value.specialInstructions,
            "jobSiteNotice": this.editEstimate.value.jobSiteNotice,
            "estimateNotice": this.editEstimate.value.estimateNotice,
            "privateNotice": this.editEstimate.value.privateNotice,
            "setReminder": this.editEstimate.value.setReminder,
            "pricebookDescription": this.editEstimate.value.pricebookDescription,
            "estimateStatus": this.estimateBasicView.estimateStatus,
            "images": this.imageArray
        };
        //console.log("Edit OBJ" + JSON.stringify(editObj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateEstimateBasicDetails', editObj)
            .subscribe(function (data) {
            var estData = data.json();
            //console.log("edit Estimate Data" + JSON.stringify(estData))
            if (estData.status == 200) {
                //this.router.navigate(['/staff/listEstim1ate'])
                _this.estimatePriceBook();
                if (_this.editEstimate.value.images == '' || _this.editEstimate.value.images == null || _this.editEstimate.value.images == "undefined") {
                    _this.imagePreview = "../../assets/img/no-image.png";
                }
                else {
                    for (var i = 0; i < _this.urls.length; i++) {
                        _this.imagePreview = _global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + "/" + _this.urls[i];
                        _this.arr.push({ name: _this.imagePreview });
                        _this.arr.push(_this.urls[i]);
                        _this.imageArray.push(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + "/" + _this.urls[i]);
                        //console.log("THSISSSSS" + JSON.stringify(this.arr))
                        //  this.imageArray.push(Global.url + files.imagePath[i])
                    }
                }
            }
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    EditEstimateComponent.prototype.estimatePriceBook = function () {
        var _this = this;
        var obj = {
            "pricebookArray": this.estimatePriceBookData,
            "proId": this.loginData.loginCode,
            "staffId": this.estimateBasicView.staffId,
            "estimateNo": this.estimateNum,
            "customerId": this.estimateBasicView.customerId,
        };
        //////console.log("obj in estimate pricebook" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateEstimatePriceBookDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.estimatedCustomMaterial();
                //////console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                //////console.log('Failed to Add Record');
            }
        }, function (error) {
            //////console.log(error);// Error getting the data
        });
    };
    EditEstimateComponent.prototype.estimatedCustomMaterial = function () {
        var _this = this;
        var obj = {
            "customMaterialArray": this.estimateCustomMaterialData,
            "proId": this.loginData.loginCode,
            "staffId": this.estimateBasicView.staffId,
            "estimateNo": this.estimateNum,
            "customerId": this.estimateBasicView.customerId,
        };
        //////console.log("obj in estimate Material" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateEstimateCustomMaterialDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.estimatedCustomLabor();
                //////console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                //////console.log('Failed to Add Record');
            }
        }, function (error) {
            //////console.log(error);// Error getting the data
        });
    };
    EditEstimateComponent.prototype.estimatedCustomLabor = function () {
        var _this = this;
        var obj = {
            "customLaborArray": this.estimateCustomLaborData,
            "proId": this.loginData.loginCode,
            "staffId": this.estimateBasicView.staffId,
            "estimateNum": this.estimateNum,
            "customerId": this.estimateBasicView.customerId,
        };
        //////console.log("obj in estimate Material" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateEstimateCustomLaborDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                _this.totalEstimateCost();
                _this.customMaterialLaborDescription();
                //////console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                //////console.log('Failed to Add Record');
            }
        }, function (error) {
            //////console.log(error);// Error getting the data
        });
    };
    EditEstimateComponent.prototype.customMaterialLaborDescription = function () {
        var obj = {
            "proId": this.loginData.loginCode,
            "staffId": this.estimateBasicView.staffId,
            "estimateNum": this.estimateNum,
            "customerId": this.estimateBasicView.customerId,
            "materialGD": this.editEstimate.value.materialGD,
            "type": "Custom Labor And Material",
            "quantity": "1",
            "units": "EACH",
            // "listPrice": (this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue),
            // "subTotal": (this.priceBookListValue + this.totalMaterialCostWithTax + this.customLaborListValue) * 1
            "listPrice": (this.totalMaterialCostWithTax + parseInt(this.customLaborListValue)),
            "subTotal": (this.totalMaterialCostWithTax + parseInt(this.customLaborListValue)) * 1
        };
        //////console.log("obj in estimate CustomDetails" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateEstimateCustomDetails', obj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                //////console.log("price data" + JSON.stringify(ConsData))
            }
            else {
                //////console.log('Failed to Add Record');
            }
        }, function (error) {
            //////console.log(error);// Error getting the data
        });
    };
    EditEstimateComponent.prototype.totalEstimateAnalyser = function () {
        var _this = this;
        var estimateCostObj = {
            "proId": this.loginData.loginCode,
            "staffId": this.estimateBasicView.staffId,
            "estimateNo": this.estimateNum,
            "customerId": this.estimateBasicView.customerId,
            "estGrossSale": this.totalValueAfterDiscounts,
            "desiredProfitPercent": this.editEstimate.value.desiredProfitInEA,
            "desiredProfitValue": this.desiredProfitValues,
            "estCMCommValue": this.channelManagerCommValue,
            "estCMCommPercent": this.empCommission,
            "estCMCommValueNetProfit": this.channelManagerCommValueNetProfit,
            "ccProcessingFeePercent": this.creditCardPF,
            "ccProcessingFeeValue": this.paymentModeValue,
            "toc": this.toc,
            "estMaterialCostMarkUp": this.customMaterialListValue,
            // "estLaborCostMarkUp": this.customLaborListValue,
            "estLaborCostMarkUp": this.customLaborListValue,
            "otherCostValue": this.editEstimate.value.otherCost,
            "otherCost": this.oCost,
            "directJobCostPercent": this.desiredPercentage,
            "directJobCostValue": this.directJobCostValue,
            "estGrossProfit": this.estimatedGrossProfitValue,
            "overHeadCostPercent": this.overHeadCostValue,
            "overHeadCostValue": this.overHeadEstimateCostValue,
            "priceBookHours": this.priceBookHoursValue,
            "fieldTechHours": this.customLaborFieldTechHours,
            "totalHours": this.sumOfPriceBookCustomLaborHours,
            "workingTypeValue": this.workingType,
            "estTechPayType": this.commissionType,
            "estTechPay": this.totalHoursWithWorkingType,
            "worksmanCompType": this.editEstimate.value.worksmanCompType,
            "employeeWorkmanCompValue": this.workmanCompIns,
            "employeeWorkmanCompPercent": this.workManEstComm,
            "empTaxCompType": this.editEstimate.value.empTaxCompType,
            "employeeTaxCompanyValue": this.empTaxComp,
            "employeeTaxCompanyPercent": this.employeeTaxComm,
            "employeeCommissions": this.employeeCommTaxInc,
            "estProfitMaterialMarkup": this.totalMarkupValue,
            "estProfitLaborMarkup": this.customLaborMarkUpListValue,
            "totalEstProfitMaterialLaborMarkup": this.estimatedMarkUpProfit,
            "estNetProfitBeforeTechCommission": this.netProfitLabor,
            "estNetTechCommissionType": this.loginStaffCommissionType,
            "estNetTechCommission": this.estTechComm,
            "estTotalTechPay": this.totalEstTechPay,
            "estNetProfit": this.estNetProfit,
            "estNetProfitPercentage": this.estNetProfitPercent,
            "estNetProfitWithCM": this.estNetProfitWithCM,
            "estNetProfitPercentageWithCM": this.estNetProfitPercentWithCM,
            "estTechCommPercent": this.loginStaffCommission,
            "estCommissionType": this.empCommissionType,
            "estTechCommValue": this.estTechComm,
            "actualNetProfitFromLabor": 0,
            "actualNetProfitValue": 0,
            "actualNetProfitPercent": 0,
        };
        console.log("estimateCostObj" + JSON.stringify(estimateCostObj));
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateEstimateAnalyserDetails', estimateCostObj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                //////console.log("price data" + JSON.stringify(ConsData))
                _this.router.navigate(['/estimate/listEstimates']);
                // this.router.navigate(['/staff/listEstimate'])
            }
            else {
                //////console.log('Failed to Add Record');
            }
        }, function (error) {
            //////console.log(error);// Error getting the data
        });
    };
    EditEstimateComponent.prototype.totalEstimateCost = function () {
        var _this = this;
        var estimateCostObj = {
            "proId": this.loginData.loginCode,
            "staffId": this.estimateBasicView.staffId,
            "estimateNo": this.estimateNum,
            "customerId": this.estimateBasicView.customerId,
            "materialTaxValue": this.taxPercentage,
            "materialCostWithTax": this.totalMaterialCostWithTax,
            "priceBeforeDiscount": this.totalEstPriceBeforeDisc,
            "discountPromoCode": this.editEstimate.value.discountPromoCode,
            "discountPromoValue": this.promoValue,
            "otherPromoCode": this.editEstimate.value.otherPromoCode,
            "otherPromoValue": this.otherPromoValue,
            "totalDiscounts": this.totalDiscount,
            "priceAfterDiscount": this.afterDiscount,
            "paymentMethods": this.editEstimate.value.paymentMethods,
            "paymentValue": this.creditCardPF,
            "paymentMethodValue": this.paymentModeValue,
            "totalPrice": this.totalValueAfterDiscounts,
            "reqDepositValue": this.editEstimate.value.reqDepositValue,
            "reqDepositCost": this.finalValue
        };
        //////console.log("estimateCostObj" + JSON.stringify(estimateCostObj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateEstimateCostDetails', estimateCostObj)
            .subscribe(function (data) {
            var ConsData = data.json();
            if (ConsData.status == 200) {
                //////console.log("price data" + JSON.stringify(ConsData))
                _this.totalEstimateAnalyser();
            }
            else {
                //////console.log('Failed to Add Record');
            }
        }, function (error) {
            //////console.log(error);// Error getting the data
        });
    };
    EditEstimateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            providers: [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"]],
            selector: 'app-edit-estimate',
            template: __webpack_require__(/*! ./edit-estimate.component.html */ "./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.html"),
            styles: [__webpack_require__(/*! ./edit-estimate.component.scss */ "./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"],
            _angular_http__WEBPACK_IMPORTED_MODULE_5__["Http"],
            _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"],
            ng2_completer__WEBPACK_IMPORTED_MODULE_9__["CompleterService"],
            ng4_auto_complete__WEBPACK_IMPORTED_MODULE_10__["AutoCompleteService"]])
    ], EditEstimateComponent);
    return EditEstimateComponent;
}());



/***/ }),

/***/ "./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.html":
/*!**************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-commonvanlynkheader></app-commonvanlynkheader>\r\n<app-prozadmin-sidemenu></app-prozadmin-sidemenu>\r\n\r\n<!-- Page Content -->\r\n<div class=\"page-content\">\r\n\r\n  <!-- Page Breadcrumb -->\r\n  <div class=\"page-breadcrumbs\">\r\n    <ul class=\"breadcrumb\">\r\n      <li>\r\n        <i class=\"fa fa-home\"></i>\r\n        <a (click)=\"home()\">Home</a>\r\n      </li>\r\n      <li> <a>Estimates</a></li>\r\n      <li class=\"active\">List of Estimates</li>\r\n    </ul>\r\n  </div>\r\n  <!-- /Page Breadcrumb -->\r\n\r\n  <!-- Page Header -->\r\n  <div class=\"page-header position-relative\">\r\n    <div class=\"header-title\">\r\n      <h1>\r\n        List of Estimates\r\n      </h1>\r\n    </div>\r\n  </div>\r\n  <!-- /Page Header -->\r\n\r\n  <!-- Page Body -->\r\n  <div class=\"page-body\">\r\n    <!-- Main Row -->\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n\r\n        <!-- Search By -->\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n            <div class=\"widget three-bordered\">\r\n              <div class=\"widget-header header gray\">\r\n                <span class=\"widget-caption\">Search Estimate By</span>\r\n              </div>\r\n              <!-- <form [formGroup]=\"searchEstimate\"> -->\r\n              <div class=\"widget-body\">\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"fromDateLbl\">\r\n                        <b>From Date </b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                      <input class=\"form-control date-picker\" type=\"date\" data-date-format=\"dd-mm-yyyy\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"toDateLbl\">\r\n                        <b>To Date</b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                      <input class=\"form-control date-picker\" type=\"date\" data-date-format=\"dd-mm-yyyy\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"searchByLbl\">\r\n                        <b>Search By</b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                      <select class=\"form-control\">\r\n                        <option value=\"\">--Search By--</option>\r\n                        <option value=\"Name\">Name</option>\r\n                        <option value=\"StreetAddress\">Street Address</option>\r\n                        <option value=\"Work-Order#\">Work Order #</option>\r\n                        <option value=\"Estimate#\">Estimate #</option>\r\n                        <option value=\"Invoice#\">Invoice #</option>\r\n                        <option value=\"ShowByTech\">Show By Tech</option>\r\n                        <option value=\"ShowBySource\">Show By Source</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                      <input class=\"form-control date-picker\" type=\"text\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                      &nbsp;&nbsp;&nbsp;&nbsp; <button type=\"submit\" class=\"btn btn-blue\" (click)=\"search()\"><i\r\n                          class=\"fa fa-search\"></i>&nbsp;\r\n                        Search</button>\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <button type=\"submit\" class=\"btn btn-gray\" (click)=\"reset()\"><i class=\"fa fa-repeat\"></i>&nbsp;\r\n                        Reset</button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- </form> -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- /Search By -->\r\n\r\n        <!-- Estimate Dashboard -->\r\n        <div class=\"row\">\r\n          <!--Databox 1-->\r\n          <div class=\"col-lg-1 col-md-1 col-sm-6 col-xs-12\">\r\n            <div class=\"databox bg-success radius-bordered\">\r\n              <div class=\"databox-right\">\r\n                <span class=\"databox-number black\"><b class=\"databox-value\">0</b></span>\r\n                <div class=\"databox-text black\"><b class=\"databox-field\">TOTAL</b></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--/Databox 1-->\r\n          <!--Databox 2-->\r\n          <div class=\"col-lg-1 col-md-1 col-sm-6 col-xs-12\">\r\n            <div class=\"databox bg-magenta radius-bordered\">\r\n              <div class=\"databox-right\">\r\n                <span class=\"databox-number black\"><b class=\"databox-value\">0</b></span>\r\n                <div class=\"databox-text black\"><b class=\"databox-field\">Draft</b></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--/Databox 2-->\r\n          <!--Databox 3-->\r\n          <div class=\"col-lg-1 col-md-1 col-sm-6 col-xs-12\">\r\n            <div class=\"databox bg-purple radius-bordered\">\r\n              <div class=\"databox-right\">\r\n                <span class=\"databox-number black\"><b class=\"databox-value\">0</b></span>\r\n                <div class=\"databox-text black\"><b class=\"databox-field\">Sent</b></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--/Databox 3-->\r\n          <!--Databox 4-->\r\n          <div class=\"col-lg-1 col-md-1 col-sm-6 col-xs-12\">\r\n            <div class=\"databox bg-pink radius-bordered\">\r\n              <div class=\"databox-right\">\r\n                <span class=\"databox-number black\"><b class=\"databox-value\">0</b></span>\r\n                <div class=\"databox-text black\"><b class=\"databox-field\">Approved</b></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--/Databox 4-->\r\n          <!--Databox 5-->\r\n          <div class=\"col-lg-1 col-md-1 col-sm-6 col-xs-12\">\r\n            <div class=\"databox bg-darkorange radius-bordered\">\r\n              <div class=\"databox-right\">\r\n                <span class=\"databox-number black\"><b class=\"databox-value\">0</b></span>\r\n                <div class=\"databox-text black\"><b class=\"databox-field\">Rejected</b></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--/Databox 5-->\r\n          <!--Databox 6-->\r\n          <div class=\"col-lg-1 col-md-1 col-sm-6 col-xs-12\">\r\n            <div class=\"databox bg-palegreen radius-bordered\">\r\n              <div class=\"databox-right\">\r\n                <span class=\"databox-number black\"><b class=\"databox-value\">0</b></span>\r\n                <div class=\"databox-text black\"><b class=\"databox-field\">FollowUps</b></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--/Databox 6-->\r\n          <!--Databox 7-->\r\n          <div class=\"col-lg-1 col-md-1 col-sm-6 col-xs-12\">\r\n            <div class=\"databox bg-warning radius-bordered\">\r\n              <div class=\"databox-right\">\r\n                <span class=\"databox-number black\"><b class=\"databox-value\">0</b></span>\r\n                <div class=\"databox-text black\"><b class=\"databox-field\">Canceled</b></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--/Databox 7-->\r\n\r\n        </div>\r\n        <!-- /Estimate Dashboard -->\r\n        <br />\r\n\r\n        <!-- Button -->\r\n        <!-- <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-blue\" (click)=\"addEstimate()\"><i class=\"fa fa-user-plus\"></i>&nbsp;\r\n                  Add Estimate</button>\r\n              </div>\r\n            </div>\r\n          </div> -->\r\n        <!-- /Button -->\r\n\r\n        <!-- List of Estimates -->\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n            <div class=\"widget three-bordered\">\r\n              <div class=\"widget-header header gray\">\r\n                <span class=\"widget-caption\">List of Estimates</span>\r\n              </div>\r\n              <div class=\"widget-body\">\r\n                <div class=\"table-scrollable\">\r\n                  <table class=\"table table-bordered table-striped table-condensed flip-content\"\r\n                    *ngIf=\"estimateListResponse\">\r\n                    <thead class=\"flip-content bordered-palegreen\">\r\n                      <tr>\r\n                        <th>\r\n                          Estimate #\r\n                        </th>\r\n                        <th>\r\n                          Job Title\r\n                        </th>\r\n                        <th>\r\n                          Assigned To Tech\r\n                        </th>\r\n                        <th>\r\n                          Customer Name\r\n                        </th>\r\n                        <th>\r\n                          Source\r\n                        </th>\r\n                        <th>\r\n                          WO #\r\n                        </th>\r\n                        <th>\r\n                          Invoice #\r\n                        </th>\r\n                        <th>\r\n                          Status\r\n                        </th>\r\n                        <th>\r\n                          Amount\r\n                        </th>\r\n                        <th>\r\n                          Created On\r\n                        </th>\r\n                        <th>\r\n                          Last Updated On\r\n                        </th>\r\n                        <!-- <th>\r\n                            View\r\n                          </th>\r\n                          <th>\r\n                            Edit\r\n                          </th> -->\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr *ngFor=\"let data of estimateListDetails\">\r\n                        <td>\r\n                          <a (click)=\"viewEstimate(data.estimateNo)\">\r\n                            {{data.estimateNo}}\r\n                          </a>\r\n\r\n                        </td>\r\n                        <td>\r\n                          {{data.jobTitle}}\r\n                        </td>\r\n                        <td>\r\n                          {{data.primaryTech}}\r\n                        </td>\r\n                        <td>\r\n                          {{data.firstName}}\r\n                        </td>\r\n                        <td>\r\n                          {{data.source}}\r\n                        </td>\r\n                        <td>\r\n                          {{data.workOrderNo}}\r\n                        </td>\r\n                        <td>\r\n\r\n                        </td>\r\n                        <td class=\"center\">\r\n                          <span class=\"label bg-purple\"\r\n                            *ngIf=\"data.estimateStatus == 'SENT TO MANAGER'\">{{data.estimateStatus}}</span>\r\n                          <span class=\"label bg-purple\"\r\n                            *ngIf=\"data.estimateStatus == 'SENT TO CUSTOMER'\">{{data.estimateStatus}}</span>\r\n                          <span class=\"label bg-magenta\"\r\n                            *ngIf=\"data.estimateStatus == 'DRAFT'\">{{data.estimateStatus}}</span>\r\n                          <span class=\"label bg-pink\"\r\n                            *ngIf=\"data.estimateStatus == 'PENDING CUSTOMER APPROVAL'\">{{data.estimateStatus}}</span>\r\n                          <span class=\"label bg-darkorange\"\r\n                            *ngIf=\"data.estimateStatus == 'REJECTED'\">{{data.estimateStatus}}</span>\r\n                          <span class=\"label bg-palegreen\"\r\n                            *ngIf=\"data.estimateStatus == 'APPROVED'\">{{data.estimateStatus}}</span>\r\n                          <span class=\"label bg-warning\"\r\n                            *ngIf=\"data.estimateStatus == 'MODIFY & RESUBMIT'\">{{data.estimateStatus}}</span>\r\n\r\n                        </td>\r\n                        <td>\r\n                          ${{data.totalPrice}}\r\n                        </td>\r\n                        <td>\r\n                          {{data.createdOn}}\r\n                        </td>\r\n                        <td>\r\n                          {{data.modifiedOn}}\r\n                        </td>\r\n                        <!-- <td class=\"center\">\r\n                            <a class=\"btn btn-xs btn-success\" (click)=\"viewEstimate(data.estimateNo)\">\r\n                              <i class=\"fa fa-eye\"></i>\r\n                            </a>\r\n                          </td> -->\r\n                        <!-- <td class=\"center\">\r\n                            <a class=\"btn btn-xs btn-primary\" (click)=\"editEstimate(data.estimateNo)\">\r\n                              <i class=\"fa fa-pencil\"></i>\r\n                            </a>\r\n                          </td> -->\r\n                      </tr>\r\n\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <br>\r\n                <div *ngIf=\"!estimateListResponse\">\r\n                  <span>Go to WorkOrder to generate A New Estimate</span>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- List of Estimates -->\r\n\r\n      </div>\r\n    </div>\r\n    <!-- Main Row -->\r\n  </div>\r\n  <!-- Page Body -->\r\n\r\n</div>\r\n<!-- /Page Content -->"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.scss":
/*!**************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.scss ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".center {\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.item {\n  text-align: center; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.databox {\n  display: inline-block !important;\n  width: 100% !important;\n  height: 75px !important;\n  padding: 0 !important;\n  margin-bottom: 30px !important;\n  vertical-align: top !important;\n  min-width: 75px !important; }\n\n.databox-value {\n  color: #000 !important;\n  font-size: 20px !important; }\n\n.databox-field {\n  color: #000 !important;\n  font-size: 11px !important; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvei1lc3RpbWF0ZS9lc3RpbWF0ZXMvbGlzdC1lc3RpbWF0ZXMvRDpcXFRvcHByb3pcXFRvcFByb3pfQWR2YW5jZV9DbGllbnQvc3JjXFxhcHBcXHByb3otZXN0aW1hdGVcXGVzdGltYXRlc1xcbGlzdC1lc3RpbWF0ZXNcXGxpc3QtZXN0aW1hdGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ssbUJBQWtCLEVBQ3JCOztBQUVEO0VBQ0ksa0NBQWlDO0VBQ2pDLDBCQUF5QixFQUM1Qjs7QUFFRDtFQUNJLG1CQUFpQixFQUNwQjs7QUFFRDtFQUNHLGtDQUFpQztFQUNqQywwQkFBeUIsRUFDNUI7O0FBRUQ7RUFDSSx1QkFBc0I7RUFDdEIscUNBQW9DLEVBQ3ZDOztBQU9EO0VBQ0ksNEJBQTJCO0VBQzNCLDZCQUE0QjtFQUM1Qiw4QkFBNkI7RUFDOUIsb0NBQW9DLEVBQ3RDOztBQUVEO0VBQ0ksaUNBQWdDO0VBQ2hDLHVCQUFzQjtFQUN0Qix3QkFBdUI7RUFDdkIsc0JBQXFCO0VBQ3JCLCtCQUE4QjtFQUM5QiwrQkFBOEI7RUFDOUIsMkJBQTBCLEVBQzdCOztBQUVEO0VBQ0ksdUJBQXNCO0VBQ3RCLDJCQUEwQixFQUM3Qjs7QUFFRDtFQUNJLHVCQUFzQjtFQUN0QiwyQkFBMEIsRUFDN0IiLCJmaWxlIjoic3JjL2FwcC9wcm96LWVzdGltYXRlL2VzdGltYXRlcy9saXN0LWVzdGltYXRlcy9saXN0LWVzdGltYXRlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXJ7XHJcbiAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gfVxyXG4gXHJcbiAuZ3JheXsgICAgXHJcbiAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMyAhaW1wb3J0YW50O1xyXG4gICAgIGNvbG9yOiAjNWRiMmZmICFpbXBvcnRhbnQ7XHJcbiB9XHJcbiBcclxuIC5pdGVte1xyXG4gICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG4gfVxyXG5cclxuIC5idG4tZ3JheXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiAjNWRiMmZmICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5idG4tYmx1ZXsgICAgXHJcbiAgICBjb2xvcjogIzMzMyAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzVkYjJmZiAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyAuZGF0YWJveHtcclxuLy8gICAgIG1hcmdpbjogMCAxMCUgICFpbXBvcnRhbnQ7XHJcbi8vIH1cclxuXHJcblxyXG4udGhyZWUtYm9yZGVyZWR7XHJcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICMzMzM7XHJcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjMzMzO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzM7XHJcbiAgIC8qIGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzdlMzc5NDsqL1xyXG59XHJcblxyXG4uZGF0YWJveCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDc1cHggIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHggIWltcG9ydGFudDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3AgIWltcG9ydGFudDtcclxuICAgIG1pbi13aWR0aDogNzVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZGF0YWJveC12YWx1ZXtcclxuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XHJcbiAgICBmb250LXNpemU6IDIwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmRhdGFib3gtZmllbGR7XHJcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xyXG4gICAgZm9udC1zaXplOiAxMXB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.ts ***!
  \************************************************************************************/
/*! exports provided: ListEstimatesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListEstimatesComponent", function() { return ListEstimatesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _utilities_beyond__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utilities/beyond */ "./src/utilities/beyond.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var _global_global__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../global/global */ "./src/global/global.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");








var ListEstimatesComponent = /** @class */ (function () {
    function ListEstimatesComponent(beyond, router, activatedRoute, formBuilder, http, toastr) {
        this.beyond = beyond;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.formBuilder = formBuilder;
        this.http = http;
        this.toastr = toastr;
    }
    ListEstimatesComponent.prototype.ngOnInit = function () {
        this.beyond.beyondAdmin();
        this.loginData = JSON.parse(localStorage.getItem("login"));
        console.log(this.loginData.loginCode);
        this.getListOfEstimates();
    };
    ListEstimatesComponent.prototype.getStaffRole = function (selectRole) {
        //console.log(selectRole)
        if (selectRole == 'Staff') {
            this.getListOfEstimates();
        }
        else {
            this.getListOfManagerEstimates();
        }
    };
    ListEstimatesComponent.prototype.addEstimate = function () {
        this.router.navigate(['/staff/createEstimateNew']);
    };
    ListEstimatesComponent.prototype.getListOfEstimates = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listOfProEstimates' + '/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            console.log("estimateListDetails" + JSON.stringify(response));
            if (response.status == 200) {
                _this.estimateListDetails = response.response;
                _this.estimateListResponse = true;
            }
            else {
                _this.estimateListResponse = false;
            }
            (function (error) {
            });
        });
    };
    ListEstimatesComponent.prototype.getListOfManagerEstimates = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/listOfManagerEstimates' + '/' + this.loginData.loginCode, options)
            .subscribe(function (data) {
            var response = data.json();
            if (response.status == 200) {
                _this.estimateListDetails = response.response;
                //console.log("estimateListDetails" + JSON.stringify(this.estimateListDetails))
                _this.estimateListResponse = true;
            }
            else {
                _this.estimateListResponse = false;
            }
            (function (error) {
            });
        });
    };
    ListEstimatesComponent.prototype.viewEstimate = function (estimateNumber) {
        this.router.navigate(['/estimate/viewEstimate', estimateNumber]);
    };
    ListEstimatesComponent.prototype.editEstimate = function (estimateNumber) {
        this.router.navigate(['/estimate/editEstimate', estimateNumber]);
    };
    ListEstimatesComponent.prototype.home = function () {
        this.router.navigate(['/proz-dashboard/prozDashboard/', this.loginData.loginCode]);
    };
    ListEstimatesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            providers: [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"]],
            selector: 'app-list-estimates',
            template: __webpack_require__(/*! ./list-estimates.component.html */ "./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.html"),
            styles: [__webpack_require__(/*! ./list-estimates.component.scss */ "./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"],
            _angular_http__WEBPACK_IMPORTED_MODULE_5__["Http"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"]])
    ], ListEstimatesComponent);
    return ListEstimatesComponent;
}());



/***/ }),

/***/ "./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-commonvanlynkheader></app-commonvanlynkheader>\r\n<app-prozadmin-sidemenu></app-prozadmin-sidemenu>\r\n<!-- Main Container -->\r\n<!-- Main Container -->\r\n<div class=\"main-container container-fluid\">\r\n  <!-- Page Container -->\r\n  <div class=\"page-container\">\r\n    <!-- Page Content -->\r\n    <div class=\"page-content\">\r\n      <!-- Page Breadcrumb -->\r\n      <div class=\"page-breadcrumbs\">\r\n        <ul class=\"breadcrumb\">\r\n          <li>\r\n            <i class=\"fa fa-home\"></i>\r\n            <a href=\"#\">Home</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Estimates</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">List of Estimates</a>\r\n          </li>\r\n          <li class=\"active\">View Estimate</li>\r\n        </ul>\r\n      </div>\r\n      <!-- /Page Breadcrumb -->\r\n      <!-- Page Header -->\r\n      <div class=\"page-header position-relative\">\r\n        <div class=\"header-title\">\r\n          <h1>View Estimate</h1>\r\n        </div>\r\n      </div>\r\n      <!-- /Page Header -->\r\n      <!-- Page Body -->\r\n      <div class=\"page-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-12 col-md-12 col-md-12 col-xs-12 \">\r\n                <div class=\"well with-header with-footer three-bordered \">\r\n                  <div class=\"header gray\">\r\n                    View Estimate\r\n                  </div>\r\n                  <!-- form1 -->\r\n                  <div id=\"registration-form\" *ngIf=\"estimateViewResponse\">\r\n                    <!-- <form [formGroup]=\"viewEstimate\"> -->\r\n                    <!-- View Estimate -->\r\n                    <div class=\"row\">\r\n                      <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"estimateNumLbl\">\r\n                                <b>CustomerId</b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.customerId}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"dobLbl\">\r\n                                <b>WorkOrder # </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.workOrderNo}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"estimateNumLbl\">\r\n                                <b>Estimate # </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.estimateNo}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"dobLbl\">\r\n                                <b>Date Created </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.date}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <!-- NOTES: This Row is visible to Pro Only not to Customer -->\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"channelManagerLbl\">\r\n                                <b>Channel Manager </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.channelManager}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"splitRateLbl\">\r\n                                <b>Split Rate </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.splitRate}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <!-- /NOTES: This Row is visible to Pro Only not to Customer -->\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"primaryTechLbl\">\r\n                                <b>Primary Tech </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.primaryTech}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"secondaryTechLbl\">\r\n                                <b>Secondary Tech </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.secondaryTech}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"statusLbl\">\r\n                                <b>Status </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"statusVal\">\r\n                                <span class=\"label bg-purple\"\r\n                                  *ngIf=\"estimateBasicView.estimateStatus == 'SENT TO MANAGER'\">{{estimateBasicView.estimateStatus}}</span>\r\n                                <span class=\"label bg-purple\"\r\n                                  *ngIf=\"estimateBasicView.estimateStatus == 'SENT TO CUSTOMER'\">{{estimateBasicView.estimateStatus}}</span>\r\n                                <span class=\"label bg-magenta\"\r\n                                  *ngIf=\"estimateBasicView.estimateStatus == 'DRAFT'\">{{estimateBasicView.estimateStatus}}</span>\r\n                                <span class=\"label bg-pink\"\r\n                                  *ngIf=\"estimateBasicView.estimateStatus == 'PENDING CUSTOMER APPROVAL'\">{{estimateBasicView.estimateStatus}}</span>\r\n                                <span class=\"label bg-darkorange\"\r\n                                  *ngIf=\"estimateBasicView.estimateStatus == 'REJECTED'\">{{estimateBasicView.estimateStatus}}</span>\r\n                                <span class=\"label bg-palegreen\"\r\n                                  *ngIf=\"estimateBasicView.estimateStatus == 'APPROVED'\">{{estimateBasicView.estimateStatus}}</span>\r\n                                <span class=\"label bg-warning\"\r\n                                  *ngIf=\"estimateBasicView.estimateStatus == 'MODIFY & RESUBMIT'\">{{estimateBasicView.estimateStatus}}</span>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"cityLbl\">\r\n                                <b>PO# </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.poNumber}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <!-- View Estimate -->\r\n\r\n\r\n                    <!-- Billing Address Details -->\r\n                    <div class=\"row\">\r\n                      <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                        <div class=\"form-title\">\r\n                          Billing Details\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"companyNameLbl\">\r\n                                <b>Company/Customer Name </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.companyName}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"emailIDLbl\">\r\n                                <b>Email ID </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <span class=\"input-icon icon-right\">\r\n                                <label>\r\n                                  {{estimateBasicView.emailId}}\r\n                                </label>\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"firstNameLbl\">\r\n                                <b>First Name </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.firstName}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"lastNameLbl\">\r\n                                <b>Last Name </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.lastName}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"phoneNumberLbl\">\r\n                                <b>Phone Number </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.phoneNumber}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"paymentMethod\">\r\n                                <b>Payment Method</b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.paymentMethod}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"serviceAddressLbl\">\r\n                                <b>Address </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.address}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"sendInvoiceToLbl\">\r\n                                <b>Send Invoice By </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.invoiceBy}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"cityLbl\">\r\n                                <b>City </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.city}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"invoiceEmailLbl\">\r\n                                <b>Invoice Email </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.emailId}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"stateLbl\">\r\n                                <b>State </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.state}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"customerSinceLbl\">\r\n                                <b>Customer Since </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.customerSince}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"zipCodeLbl\">\r\n                                <b>Zip Code </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.zipcode}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"frequency\">\r\n                                <b>Frequency </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.frequency}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"adminNotes\">\r\n                                <b>Admin Notes</b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.adminNotes}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"leadQuality\">\r\n                                <b>Lead Quality</b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.leadQuantity}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <!-- <div class=\"row\">\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label for=\"source\">\r\n                                  <b>Source</b>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-sm-3\">\r\n                              <div class=\"form-group\">\r\n                                <label >\r\n                                 {{estimateBasicView.source}}\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                            \r\n                          </div>\r\n                          <div class=\"row\">\r\n                           \r\n                            \r\n                          </div>\r\n                          <div class=\"row\">\r\n                           \r\n                            \r\n                          </div>\r\n                          -->\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                      <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                        <div class=\"form-title\">\r\n                          Service Location\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"jobTitleLbl\">\r\n                                <b>Job Title </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.jobTitle}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"firstNameLbl\">\r\n                                <b>First Name </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.firstName}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"lastNameLbl\">\r\n                                <b>Last Name </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.lastName}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"jobEmailLbl\">\r\n                                <b>Email </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.serviceContactEmail}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"jobPhoneNumberLbl\">\r\n                                <b>Phone Number </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.serviceContactNumber}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"jobAddressLbl\">\r\n                                <b>Address </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.serviceAddress}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"jobStateLbl\">\r\n                                <b>State </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.serviceState}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"jobCityLbl\">\r\n                                <b>City </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.serviceCity}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"jobZipCodeLbl\">\r\n                                <b>Zip Code </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.serviceZipcode}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"expectedStartDateTime\">\r\n                                <b>Expected Start Date/Time </b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.expStartDateTime}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"paymentMethod\">\r\n                                <b>Expected End Date/Time</b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                              <label>\r\n                                {{estimateBasicView.expEndDateTime}}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\" *ngIf=\"estimateBasicView.doNotServe == ''\">\r\n                              <input type=\"checkbox\" class=\"colored-success\" disabled>\r\n                              <span class=\"text\">Do Not Serve</span>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\"\r\n                              *ngIf=\"estimateBasicView.doNotServe == 'true'||estimateBasicView.doNotServe == 1\">\r\n                              <div class=\"checkbox\">\r\n                                <label>\r\n                                  <input type=\"checkbox\" class=\"colored-success\" checked=\"checked\" disabled>\r\n                                  <span class=\"text\">Do Not Serve</span>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-3\">\r\n                            <div class=\"form-group\">\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <!-- </form> -->\r\n                  </div>\r\n\r\n                  <!-- /Billing Address Details -->\r\n\r\n                  <!-- Add PriceBook Item -->\r\n                  <div class=\"row\" *ngIf=\"estimateViewResponse\">\r\n                    <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                      <div class=\"form-title\">\r\n                        Service Description\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-xs-12 col-md-12\">\r\n\r\n                          <div class=\"flip-scroll\">\r\n                            <!-- Form 2 -->\r\n                            <!-- <form [formGroup]=\"addInventoryItem\"> -->\r\n\r\n                            <table class=\"table table-bordered table-striped table-condensed flip-content\">\r\n                              <thead class=\"flip-content bordered-palegreen\">\r\n                                <tr>\r\n                                  <!-- <th width=\"10%\">\r\n                                    Item #\r\n                                  </th> -->\r\n                                  <th width=\"15%\">\r\n                                    Type\r\n                                  </th>\r\n                                  <th width=\"30%\">\r\n                                    Description\r\n                                  </th>\r\n                                  <th width=\"10%\" class=\"center\">\r\n                                    QTY\r\n                                  </th>\r\n                                  <th width=\"10%\" class=\"center\">\r\n                                    Units\r\n                                  </th>\r\n                                  <th width=\"10%\" class=\"center\">\r\n                                    List Price($)\r\n                                  </th>\r\n                                  <th width=\"10%\" class=\"center\">\r\n                                    Sub Total($)\r\n                                  </th>\r\n                                </tr>\r\n                              </thead>\r\n                              <ng-container>\r\n                                <tbody>\r\n                                  <tr *ngFor=\"let data of finalArray\">\r\n                                    <!-- <td>{{data.id}}</td> -->\r\n                                    <td>{{data.type}}</td>\r\n                                    <td>{{data.name}}</td>\r\n                                    <td class=\"center\">{{data.quantity}}</td>\r\n                                    <td class=\"center\">{{data.units}}</td>\r\n                                    <td class=\"center\">${{data.priceMarkUp}}</td>\r\n                                    <td class=\"center\">${{data.subTotal}}</td>\r\n                                  </tr>\r\n                                  <!-- <tr>\r\n                                    <td>PB-1000</td>\r\n                                    <td>STANDARD</td>\r\n                                    <td>Install Water Pumps</td>\r\n                                    <td class=\"center\">1</td>\r\n                                    <td class=\"center\">Each</td>\r\n                                    <td class=\"center\">$932.10</td>\r\n                                    <td class=\"center\">$932.10</td>\r\n                                  </tr> -->\r\n                                  <!-- <tr>\r\n                                      <td>Custom L&M</td>\r\n                                      <td>LABOR & MATERIAL</td>\r\n                                      <td>Contractor will provide the following scope of work. Digging & Excavation.</td>\r\n                                      <td class=\"center\">1</td>\r\n                                      <td class=\"center\">Each</td>\r\n                                      <td class=\"center\">$6,762.75</td>\r\n                                      <td class=\"center\">$6,762.75</td>\r\n                                    </tr> -->\r\n                                </tbody>\r\n                              </ng-container>\r\n                            </table>\r\n\r\n                            <br />\r\n\r\n                            <!-- <div class=\"row\">\r\n                              <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"materialCostLbl\">\r\n                                    <h5><b>PriceBook Item Cost</b></h5>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"materialCostVal\">\r\n                                    <h5><b class=\"text-right\">${{estimateBasicView.priceBookListValue}}</b></h5>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div> -->\r\n                            <!-- <br> -->\r\n                            <!-- </form> -->\r\n                            <!-- /Form 2 -->\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <br>\r\n                    </div>\r\n                  </div>\r\n                  <!-- / PriceBook Item -->\r\n\r\n                  <!-- /Total Estimate Cost -->\r\n                  <div class=\"row\" *ngIf=\"estimateViewResponse\">\r\n                    <div class=\"col-xs-12 col-md-12\">\r\n                      <table class=\"table table-bordered table-hover\" style=\"border-color: 3px solid black;\">\r\n                        <tbody>\r\n\r\n                          <tr>\r\n                            <td width=\"40%\"><b>Total Estimated Price Before Discount ($)</b></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td style=\"width:20%; text-align: right; background-color: yellow;\">\r\n                              <b>${{totalEstimateCostData.priceBeforeDiscount}}</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td width=\"40%\"><b>Discount</b></td>\r\n                            <td width=\"20%\">{{totalEstimateCostData.discountPromoCode}}</td>\r\n                            <td width=\"20%\">\r\n                              ${{totalEstimateCostData.discountPromoValue}}\r\n                            </td>\r\n                            <td style=\"width:20%; text-align: right;  background-color: red; color: white\">-\r\n                              ${{totalEstimateCostData.discountPromoValue}}.00</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td width=\"40%\"><b>Other Promos</b></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td width=\"20%\">\r\n                              ${{totalEstimateCostData.otherPromoCode}}\r\n                            </td>\r\n                            <td style=\"width:20%; text-align: right; background-color: red; color: white\">-\r\n                              ${{totalEstimateCostData.otherPromoValue}}.00</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td width=\"40%\"><b>Total Discounts ($)</b></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td style=\"width:20%; text-align: right; background-color: red; color: white\"><b>-\r\n                                ${{totalEstimateCostData.totalDiscounts}}</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td width=\"40%\"><b>Total Estimated Price After Discount ($)</b></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td style=\"width:20%; text-align: right; background-color: yellow;\">\r\n                              <b>${{totalEstimateCostData.priceAfterDiscount}}</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td width=\"40%\"><b>Payment Methods</b></td>\r\n                            <td width=\"20%\">\r\n                              {{totalEstimateCostData.paymentMethods}}\r\n                            </td>\r\n                            <td width=\"20%\">\r\n                              {{totalEstimateCostData.paymentValue}}%\r\n                            </td>\r\n                            <td style=\"width:20%; text-align: right;background-color: yellow;  \">\r\n                              <b>${{totalEstimateCostData.paymentMethodValue}}</b></td>\r\n                          </tr>\r\n                          <tr style=\"background-color: green;\">\r\n                            <td width=\"40%\">\r\n                              <h5><b>Total Price ($)</b></h5>\r\n                            </td>\r\n                            <td width=\"20%\"></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td style=\"width:20%; text-align: right;\">\r\n                              <h5><b>${{totalEstimateCostData.totalPrice}}</b></h5>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td width=\"40%\"><b>Required Deposit</b></td>\r\n                            <td width=\"20%\"></td>\r\n                            <td width=\"20%\">\r\n                              {{totalEstimateCostData.reqDepositValue}}%\r\n                            </td>\r\n                            <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                              <b>${{totalEstimateCostData.reqDepositCost}}</b></td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                      <br />\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <!-- /Total Estimate Cost -->\r\n\r\n\r\n                  <!-- Special Instructions -->\r\n                  <div class=\"row\" *ngIf=\"estimateViewResponse\">\r\n                    <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                      <div class=\"form-title\">\r\n                        Special Instructions\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label>\r\n                              {{estimateBasicView.specialInstructions}}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- /Special Instructions -->\r\n\r\n                  <!-- Job Site Notice -->\r\n                  <div class=\"row\" *ngIf=\"estimateViewResponse\">\r\n                    <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                      <div class=\"form-title\">\r\n                        Job Site Notice\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label>\r\n                              {{estimateBasicView.jobSiteNotice}}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label for=\"addPicturesLbl\">\r\n                              <b>Pictures</b>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <img src=\"assets/img/proz/Estimate1.png\" height=\"100px\" width=\"100px\">\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            <img src=\"assets/img/proz/Estimate2.png\" height=\"100px\" width=\"100px\">\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            <img src=\"assets/img/proz/Estimate1.png\" height=\"100px\" width=\"100px\">\r\n                            &nbsp;&nbsp;&nbsp;\r\n                            <img src=\"assets/img/proz/Estimate2.png\" height=\"100px\" width=\"100px\">\r\n                          </div>\r\n                        </div>\r\n                      </div> -->\r\n\r\n                      <div class=\"col-sm-9\" *ngIf=\"withImg\">\r\n                        <div class=\"form-group\">\r\n\r\n                          <!-- Creates the bootstrap modal where the image will appear -->\r\n                          <div *ngFor='let x of arr;let i = index'>\r\n                            <figure style=\"height:140px;width:220px;\" class=\"icon1\">\r\n                              <figcaption>\r\n                                {{ imageName[i]?.image }}\r\n                              </figcaption>\r\n                              <img (click)=\"show(x)\" src=\"{{x.name}}\" height=\"100px\" width=\"120px\">\r\n                              <!-- <img (click)=\"show(x)\" src=\"{{x.name}}\" [zoom]=\"5\" [lenSize]=\"20\" [imgWidth]=\"100\" [divZoomed]=\"divZoomed\"></app-zoom> -->\r\n                            </figure>\r\n\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"col-sm-3\" *ngIf=\"withOutImg\">\r\n                        <div class=\"form-group\">\r\n                          <img [src]=\"imagePreview\" height=\"100px\" width=\"120px\">\r\n                        </div>\r\n\r\n                      </div>\r\n                      <!-- Creates the bootstrap modal where the image will appear -->\r\n                      <div id=\"myModal0\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\"\r\n                        style=\"margin-right: 350px;margin-left: 350px;margin-bottom: 5px\">\r\n\r\n                        <!-- <div id=\"myModal0\" class=\"modal\" id=\"imagemodal\" tabindex=\"-1\" role=\"dialog\"\r\naria-labelledby=\"myModalLabel\" aria-hidden=\"true\"> -->\r\n                        <div class=\"modal-dialog1\">\r\n                          <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                              <h4 class=\"modal-title\" id=\"myModalLabel\">\r\n                                Image preview</h4>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                              <div data-dismiss=\"modal\">\r\n                                {{ Image}}<i style=\"margin-left:10px;color: red\" (click)=\"hide()\"\r\n                                  class=\"fa fa-times\"></i>\r\n                              </div>\r\n                              <!-- <figure style=\"height:140px;width:220px;margin-right: 20px;\" > -->\r\n                              <!-- height=\"150px\" width=\"130px\"<app-zoom [img]=\"imageData\" [zoom]=\"5\" [lenSize]=\"20\" [imgWidth]=\"100\" [divZoomed]=\"divZoomed\"></app-zoom> -->\r\n                              <img [src]=\"imagePreview\" height=\"100%\" width=\"100%\">\r\n                              <hr>\r\n                              <!-- <ngx-image-zoom\r\n[thumbImage]=myThumbnail\r\n[fullImage]=myFullresImage\r\n[magnification]=\"1\"\r\n[enableScrollZoom]=\"true\"\r\n[enableLens]=\"true\"\r\n[lensWidth]=\"200\">\r\n</ngx-image-zoom> -->\r\n                              <!-- </figure> -->\r\n                              <!-- <div #divZoomed class=\"img-zoom-result\"></div> -->\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                              <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"\r\n                                (click)=\"hide()\">Close</button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- Creates the bootstrap modal where the image will appear -->\r\n                    </div>\r\n                  </div>\r\n                  <!-- /Job Site Notice -->\r\n\r\n                  <!-- Estimate Notice -->\r\n                  <div class=\"row\" *ngIf=\"estimateViewResponse\">\r\n                    <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                      <div class=\"form-title\">\r\n                        Estimate Notice\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label>\r\n                              {{estimateBasicView.estimateNotice}}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- /Estimate Notice -->\r\n\r\n                  <!-- NOTES: This Section is visible to Pro Only not to Customer -->\r\n                  <!-- Private Notice -->\r\n                  <div class=\"row\" *ngIf=\"estimateViewResponse\">\r\n                    <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                      <div class=\"form-title\" style=\"color:  #FF0000; border-bottom: 1px dashed #FF0000;\">\r\n                        Private Notice\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                          <div class=\"form-group\">\r\n                            <label>\r\n                              {{estimateBasicView.privateNotice}}\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- /Private Notice -->\r\n                  <!-- /NOTES: This Section is visible to Pro Only not to Customer -->\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                      <div class=\"form-group\">\r\n                        <hr class=\"hr-gray-thick\">\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <!-- PRO Buttons -->\r\n                  <!-- <div class=\"row\" >\r\n                    <div class=\"col-sm-3 button-center\">\r\n                      <div class=\"form-group\">\r\n                        <button type=\"submit\" (click)=\"backEstimate()\" class=\"btn btn-gray\"><i class=\"fa fa-arrow-left\"></i>\r\n                          Back to Estimates</button>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 button-center\">\r\n                      <div class=\"form-group\">\r\n                        <a id=\"formButton\" class=\"btn btn-purple\"><i class=\"fa fa-file\"></i>\r\n                          Estimate Analyzer</a>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div> -->\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-3 button-center\">\r\n                      <div class=\"form-group\">\r\n                        <button type=\"submit\" (click)=\"backEstimate()\" class=\"btn btn-gray\"><i\r\n                            class=\"fa fa-arrow-left\"></i>\r\n                          Back to Estimates</button>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 button-center\" *ngIf=\"matchedStatus\">\r\n                      <div class=\"form-group\">\r\n                        <button type=\"submit\" (click)=\"approveEstimate()\" class=\"btn btn-success\"><i\r\n                            class=\"fa fa-check\"></i>\r\n                          Approve & Send To Customer</button>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 button-center\" *ngIf=\"matchedStatus\">\r\n                      <div class=\"form-group\">\r\n                        <button type=\"submit\" class=\"btn btn-blue\"><i class=\"fa fa-edit\"></i>\r\n                          Modify & Send To Customer</button>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2 button-center\" *ngIf=\"!matchedStatus\">\r\n                      <div class=\"form-group\">\r\n                        <button type=\"submit\" (click)=\"editEstimate(estimateBasicView.estimateNo)\"\r\n                          class=\"btn btn-blue\"><i class=\"fa fa-edit\"></i>\r\n                          Edit Estimate</button>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 button-center\">\r\n                      <div class=\"form-group\">\r\n                        <a id=\"formButton\" class=\"btn btn-purple\"><i class=\"fa fa-file\"></i>\r\n                          Estimate Analyzer </a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2 button-center\" *ngIf=\"!matchedStatus\">\r\n                      <div class=\"form-group\" *ngIf=\"enable\">\r\n                        <a type=\"submit\" class=\"btn btn-purple\" data-toggle=\"modal\" data-target=\"#getPaid\"><i\r\n                            class=\"fa fa-plus\"></i>\r\n                          Get Paid </a>\r\n                      </div>\r\n                      <div class=\"form-group\" *ngIf=\"!enable\">\r\n                        <button class=\"btn btn-purple\" disabled data-toggle=\"modal\" data-target=\"#getPaid\"><i\r\n                            class=\"fa fa-plus\"></i>\r\n                          Get Paid </button>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-2 button-center\" *ngIf=\"!matchedStatus\">\r\n                      <div class=\"form-group\" *ngIf=\"enable\">\r\n                        <button class=\"btn btn-success\"\r\n                          (click)=\"viewInvoice(estimateBasicView.estimateNo,estimateBasicView.customerId)\"\r\n                          data-toggle=\"modal\" data-target=\"#inspectionpostCheck\"><i class=\"fa fa-file\"></i>\r\n                          Generate Invoice</button>\r\n                      </div>\r\n                      <div class=\"form-group\" *ngIf=\"!enable\">\r\n                        <button class=\"btn btn-success\" disabled (click)=\"viewInvoice(estimateBasicView.estimateNo)\"><i\r\n                            class=\"fa fa-file\"></i>\r\n                          Generate Invoice</button>\r\n                      </div>\r\n                    </div>\r\n                    <!-- <div class=\"col-sm-2 button-center\" *ngIf=\"!matchedStatus\">\r\n                      <div class=\"form-group\">\r\n                        <a id=\"formButton\" (click) = \"createInvoice(estimateBasicView.estimateNo)\" class=\"btn btn-primary\"><i class=\"fa fa-file\"></i>\r\n                          Modify Invoice</a>\r\n                      </div>\r\n                    </div> -->\r\n                  </div>\r\n\r\n                  <br />\r\n                  <!-- <div class=\"row\">\r\n                    <div class=\"col-sm-2 button-center\">\r\n                      <div class=\"form-group\">\r\n                        <button type=\"submit\"  class=\"btn btn-blue\"><i class=\"fa fa-arrow-left\"></i>\r\n                          Back To Estimates</button>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 button-center\">\r\n                      <div class=\"form-group\">\r\n                        <a id=\"formButton\" class=\"btn btn-purple\"><i class=\"fa fa-file\"></i>\r\n                          Estimate Analyzer</a>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3 button-center\">\r\n                      <div class=\"form-group\">\r\n                        <button type=\"submit\" (click)=\"saveEstimate()\" class=\"btn btn-warning\"><i class=\"fa fa-edit\"></i>\r\n                          Edit Estimate</button>\r\n                      </div>\r\n                    </div>\r\n                  </div> -->\r\n                  <!-- /PRO Buttons -->\r\n\r\n                  <!-- Set Reminder -->\r\n                  <div class=\"row\" *ngIf=\"estimateViewResponse\">\r\n                    <div class=\"col-sm-12\">\r\n                      <div class=\"form-group\">\r\n                        <label for=\"setReminderLbl\">\r\n                          <b>Set Automatic Reminder to Follow up with Customer </b>\r\n                        </label>\r\n\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                      <div class=\"form-group\">\r\n                        {{estimateBasicView.setReminder}}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- /Set Reminder -->\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-12\">\r\n                      <div class=\"form-group\">\r\n                        <hr class=\"hr-gray-thick\">\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Estimate Analyzer -->\r\n                  <div id=\"form1\" *ngIf=\"estimateAnalyserViewResponse\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-lg-12 col-sm-12 col-xs-12\">\r\n                        <div class=\"form-title\">\r\n                          Estimate Analyzer\r\n                        </div>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-xs-12 col-md-12\">\r\n                            <table class=\"table table-bordered table-hover\" style=\"border-color: 3px solid black;\">\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td width=\"40%\">Estimated Gross Sale(A) = Direct Cost(B) + Overhead Cost(C) + Tech\r\n                                    Commssions (E) + Desired Profit (F)</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td style=\"width:20%; text-align: right;\">${{estimateAnalyser.estGrossSale}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Desired Profit</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                    {{estimateAnalyser.desiredProfitPercent}}%\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;\"> ${{estimateAnalyser.desiredProfitValue}}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Direct Cost</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                  </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td width=\"40%\">Credit Card Processing Fees</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                    {{estimateAnalyser.ccProcessingFeePercent}}%\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;\">${{estimateAnalyser.ccProcessingFeeValue}}\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Truck Operating Cost(TOC)</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;\">${{estimateAnalyser.toc}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Estimated Material Cost With Markup</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td style=\"width:20%; text-align: right; \">\r\n                                    ${{estimateAnalyser.estMaterialCostMarkUp}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Estimated Labor Cost With Markup</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td style=\"width:20%; text-align: right; \">\r\n                                    ${{estimateAnalyser.estLaborCostMarkUp}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Other Cost</td>\r\n                                  <td width=\"20%\">Describe</td>\r\n                                  <td width=\"20%\">\r\n                                    ${{estimateAnalyser.otherCostValue}}\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right; \">\r\n                                    ${{estimateAnalyser.otherCost}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Total Direct Job Cost(B)</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">{{estimateAnalyser.directJobCostPercent}}%</td>\r\n                                  <td style=\"width:20%; text-align: right;background-color: palegreen; \">\r\n                                    <b>${{estimateAnalyser.directJobCostValue}}</b>\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Estimated Gross Profit = Bid Price (A)-Direct Cost (B)</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td style=\"width:20%; text-align: right;background-color: yellow;\"><b>\r\n                                      ${{estimateAnalyser.estGrossProfit}}</b></td>\r\n                                </tr>\r\n                                <tr style=\"border-top-color: 2px solid black\"\r\n                                  *ngIf=\"estimateAnalyser.estCommissionType == 'Gross Sale' || estimateAnalyser.estCommissionType == 'Gross Profit'\">\r\n                                  <td width=\"40%\">Estimated Channel Manager Commissions</td>\r\n                                  <td width=\"20%\"><b>{{estimateAnalyser.estCommissionType}}</b></td>\r\n                                  <td width=\"20%\">{{estimateAnalyser.estCMCommPercent}}%</td>\r\n                                  <td style=\"width:20%; text-align: right;\">${{estimateAnalyser.estCMCommValue}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Overhead Cost Estimate (C) = Set % *A\r\n                                    </b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                    {{estimateAnalyser.overHeadCostPercent}}%\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;background-color: palegreen;\"><b>\r\n                                      ${{estimateAnalyser.overHeadCostValue}}</b></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Employee Commission and Taxes</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td style=\"width:20%; text-align: right;\"><b>\r\n                                    </b></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">PriceBook Hours (In Hours)</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                    {{estimateAnalyser.priceBookHours}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Custom Field Tech Hours (In Hours)</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                    {{estimateAnalyser.fieldTechHours}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Total Hours (In Hours)</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                    {{estimateAnalyser.totalHours}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Working Value</td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                    ${{estimateAnalyser.workingTypeValue}}</td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <td width=\"40%\">Estimated Tech Pay</td>\r\n                                  <td width=\"20%\"><b>{{estimateAnalyser.estTechPayType}}</b></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                    ${{estimateAnalyser.estTechPay}}</td>\r\n                                </tr>\r\n                                <!-- <tr>\r\n                                  <td width=\"40%\">Estimated Tech Commissions / Pay</td>\r\n                                  <td width=\"20%\">{{estimateAnalyser.estCommissionType}}\r\n                                  </td>\r\n                                  <td width=\"20%\">\r\n                                    {{estimateAnalyser.estTechCommPercent}}%\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                    ${{estimateAnalyser.estTechCommValue}}</td>\r\n                                </tr> -->\r\n                                <tr>\r\n                                  <td width=\"40%\">Employee Worksman Comp Ins</td>\r\n                                  <td width=\"20%\">{{estimateAnalyser.worksmanCompType}}\r\n                                  </td>\r\n                                  <td width=\"20%\">\r\n                                    {{estimateAnalyser.employeeWorkmanCompValue}}%\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right; \">\r\n                                    ${{estimateAnalyser.employeeWorkmanCompPercent}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">Employee Tax Company</td>\r\n                                  <td width=\"20%\">\r\n                                    {{estimateAnalyser.empTaxCompType}}\r\n                                  </td>\r\n                                  <td width=\"20%\">\r\n                                    {{estimateAnalyser.employeeTaxCompanyValue}}%\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right; \">\r\n                                    ${{estimateAnalyser.employeeTaxCompanyPercent}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\">\r\n                                    <b>Employee Commissions, Taxes and Ins (E) </b>\r\n                                  </td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td style=\"width:20%; text-align: right;background-color: palegreen;\">\r\n                                    <b>${{estimateAnalyser.employeeCommissions}}</b>\r\n                                  </td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Estimated Profit from Material Mark ups</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                    <b>${{estimateAnalyser.estProfitMaterialMarkup}}.00</b></td>\r\n                                </tr>\r\n                                <!-- <tr>\r\n                                  <td width=\"40%\"><b>Estimated Profit from Labor Mark ups</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                    <b>${{estimateAnalyser.estProfitLaborMarkup}}.00</b></td>\r\n                                </tr> -->\r\n                                <!-- <tr>\r\n                                  <td width=\"40%\"><b>Total Estimated Profit from Material & Labor Mark ups</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                    <b>${{estimateAnalyser.totalEstProfitMaterialLaborMarkup}}.00</b></td>\r\n                                </tr> -->\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Estimated Net Profit Before tech commission</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td *ngIf=\"!netProfitMinusCheck\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color:green;\">\r\n                                    <b>{{estimateAnalyser.estNetProfitBeforeTechCommission}}</b></td>\r\n                                  <td *ngIf=\"netProfitMinusCheck\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color:red;\">\r\n                                    <b>{{estimateAnalyser.estNetProfitBeforeTechCommission}}</b></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Estimated Tech Commissions</b></td>\r\n                                  <td width=\"20%\"><b>{{estimateAnalyser.estNetTechCommissionType}}</b></td>\r\n                                  <td width=\"20%\">\r\n                                    <input type=\"text\" readonly\r\n                                      style=\"text-align: center; color: white; background-color: gray\"\r\n                                      value={{estimateAnalyser.estTechCommPercent}}% class=\"form-control input-sm\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                    ${{estimateAnalyser.estTechCommValue}}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Estimated Total Tech Pay</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;  \">\r\n                                    ${{estimateAnalyser.estTotalTechPay}}</td>\r\n                                </tr>\r\n                                <tr style=\"border-top-color: 2px solid black\"\r\n                                  *ngIf=\"estimateAnalyser.estCommissionType == 'Net Profit'\">\r\n                                  <td width=\"40%\"><b>Estimated Channel Manager Commissions</b></td>\r\n                                  <td width=\"20%\"><b>{{estimateAnalyser.estCommissionType}}</b></td>\r\n                                  <td width=\"20%\"> {{estimateAnalyser.estTechCommPercent}}</td>\r\n                                  <td style=\"width:20%; text-align: right;\">${{estimateAnalyser.estTechCommValue}}</td>\r\n                                </tr>\r\n                                <tr\r\n                                  *ngIf=\"estimateAnalyser.estCommissionType == 'Gross Sale' || estimateAnalyser.estCommissionType == 'Gross Profit'\">\r\n                                  <td width=\"40%\"><b>Estimated Net Profit</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td *ngIf=\"!red\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: green;\">\r\n                                    <b>{{estimateAnalyser.estNetProfit}}</b></td>\r\n                                  <td *ngIf=\"red\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                    <b>{{estimateAnalyser.estNetProfit}}</b></td>\r\n                                </tr>\r\n                                <tr *ngIf=\"estimateAnalyser.estCommissionType == 'NA'\">\r\n                                  <td width=\"40%\"><b>Estimated Net Profit</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td *ngIf=\"!red\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: green;\">\r\n                                    <b>${{estimateAnalyser.estNetProfit}}</b></td>\r\n                                  <td *ngIf=\"red\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                    <!-- <b>${{estimateAnalyser.estNetProfit}}</b></td> -->\r\n                                    <b>${{estimateAnalyser.estNetProfit}}</b></td>\r\n\r\n                                </tr>\r\n                                <tr\r\n                                  *ngIf=\"estimateAnalyser.estCommissionType == 'Gross Sale' || estimateAnalyser.estCommissionType == 'Gross Profit'\">\r\n                                  <td width=\"40%\"><b>Estimated Net Profit (%)</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td *ngIf=\"!redPer\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: green;\">\r\n                                    <b>{{estimateAnalyser.estNetProfitPercentage}}%</b></td>\r\n                                  <td *ngIf=\"redPer\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                    <b>{{estimateAnalyser.estNetProfitPercentage}}%</b></td>\r\n                                </tr>\r\n                                <tr *ngIf=\"estimateAnalyser.estCommissionType == 'NA'\">\r\n                                  <td width=\"40%\"><b>Estimated Net Profit (%)</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td *ngIf=\"!redPer\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: green;\">\r\n                                    <b>{{estimateAnalyser.estNetProfitPercentage}}%</b></td>\r\n                                  <td *ngIf=\"redPer\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                    <b>{{estimateAnalyser.estNetProfitPercentage}}%</b></td>\r\n                                </tr>\r\n                                <tr *ngIf=\"estimateAnalyser.estCommissionType == 'Net Profit'\">\r\n                                  <td width=\"40%\"><b>Estimated Net Profit</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td *ngIf=\"!red\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: green;\">\r\n                                    <b>${{estimateAnalyser.estNetProfitWithCM}}</b></td>\r\n                                  <td *ngIf=\"red\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                    <b>${{estimateAnalyser.estNetProfitWithCM}}</b></td>\r\n                                </tr>\r\n                                <tr *ngIf=\"estimateAnalyser.estCommissionType == 'Net Profit'\">\r\n                                  <td width=\"40%\"><b>Estimated Net Profit (%)</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td *ngIf=\"!redPer\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: green;\">\r\n                                    <b>${{estimateAnalyser.estNetProfitPercentageWithCM}}%</b></td>\r\n                                  <td *ngIf=\"redPer\"\r\n                                    style=\"width:20%; text-align: right; color: white; background-color: red;\">\r\n                                    <b>${{estimateAnalyser.estNetProfitPercentageWithCM}}</b></td>\r\n                                </tr>\r\n                                <!-- <tr>\r\n                                  <td width=\"40%\"><b>Actual Net Profit from Labor</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;\">\r\n                                    <b>${{estimateAnalyser.actualNetProfitFromLabor}}</b></td>\r\n                                </tr> -->\r\n                                <!-- <tr>\r\n                                  <td width=\"40%\"><b>Actual Net Profit</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;background-color: yellow;\">\r\n                                    <b>${{estimateAnalyser.actualNetProfitValue}}</b></td>\r\n                                </tr>\r\n                                <tr>\r\n                                  <td width=\"40%\"><b>Actual Net Profit (%)</b></td>\r\n                                  <td width=\"20%\"></td>\r\n                                  <td width=\"20%\">\r\n                                  </td>\r\n                                  <td style=\"width:20%; text-align: right;\">\r\n                                    <b>{{estimateAnalyser.actualNetProfitPercent}}%</b></td>\r\n                                </tr> -->\r\n                              </tbody>\r\n                            </table>\r\n                            <br />\r\n                            <div class=\"col-sm-12\">\r\n                              <div class=\"col-sm-4 \">\r\n                              </div>\r\n\r\n                              <div class=\"col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                  <a id=\"formButton1\" class=\"btn btn-purple\"><i class=\"fa fa-arrow-left\"></i>\r\n                                    Back to Estimate </a>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-sm-4 \">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- /Estimate Analyzer -->\r\n\r\n                  <!----Get Paid Pop Up-->\r\n                  <div id=\"getPaid\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog modal-lg\">\r\n                      <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                          <form [formGroup]=\"EstimatePayment\">\r\n                            <div class=\"widget-header blue\">\r\n                              <span class=\"widget-caption\"><b>Please Pay Your Estimate</b> </span>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                              <br />\r\n                              <div class=\"row\">\r\n                                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-lg-3\">\r\n                                      <div class=\"form-group\">\r\n                                        <label for=\"paymentMethod\"><b>Payment Method</b></label>\r\n                                        <span class=\"input-icon icon-right\">\r\n                                          <!-- Chandu:Removed formcontrolName,because change event not working -->\r\n                                          <select formControlName=\"paymentMethod\" [(ngModel)]=\"selectedPaymentType\"\r\n                                            (ngModelChange)=\"paymentTypeSelection(selectedPaymentType)\"\r\n                                            class=\"form-control\" required>\r\n                                            <option value=\"Cash\">CASH</option>\r\n                                            <option value=\"Check\">Check</option>\r\n                                            <option value=\"CreditCard\">Credit Card</option>\r\n                                            <option value=\"APPLEPAY\">Apple Pay</option>\r\n                                            <option value=\"VENMO\">Venmo</option>\r\n                                          </select>\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-3\">\r\n                                      <div class=\"form-group\">\r\n                                        <label for=\"balanceAmount\"><b>Advance Amount ($) :</b></label>\r\n                                        <span class=\"input-icon icon-right\">\r\n                                          <input type=\"text\" class=\"form-control input-sm\" value=\"{{AdvanceAmount}}\"\r\n                                            readonly>\r\n\r\n                                        </span>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-3\">\r\n                                      <div class=\"form-group\">\r\n                                        <label for=\"paymentAmount\"><b>Payment Amount ($) :</b></label>\r\n                                        <span class=\"input-icon icon-right\">\r\n                                          <input type=\"text\" placeholder=\"\" value=\"\" class=\"form-control input-sm\"\r\n                                            formControlName=\"paymentAmount\" [(ngModel)]=\"paymentAmount\"\r\n                                            (ngModelChange)=\"paymentAmountValue(paymentAmount)\">\r\n                                        </span>\r\n                                        <span style=\"color: red\" *ngIf=\"paymentValue\"> Payment amount should be less\r\n                                          than Adavance amount / equal </span>\r\n                                        <span style=\"color: red\" *ngIf=\"!paymentValue\"> </span>\r\n                                      </div>\r\n                                    </div>\r\n                                    <div id=\"isDisabled\" *ngIf=\"isDisabled\">\r\n                                      <div class=\"col-lg-3\">\r\n                                        <div class=\"form-group\">\r\n                                          <label for=\"referenceNumber\"><b>Reference Number :</b></label>\r\n                                          <span class=\"input-icon icon-right\">\r\n                                            <input type=\"text\" placeholder=\"\" value=\"\" class=\"form-control input-sm\"\r\n                                              formControlName=\"referenceNumber \">\r\n                                          </span>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                  </div>\r\n                                  <div class=\"row\">\r\n                                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                                      <label for=\"\"><b>Description</b></label>\r\n                                      <span class=\"input-icon icon-right\">\r\n                                        <textarea rows=\"4\" formControlName=\"description\" class=\"form-control\"\r\n                                          placeholder=\"Description\">\r\n\r\n                                    </textarea>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                  <br />\r\n                                  <div class=\"row\" *ngIf=\"chequeDetails\">\r\n                                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                      <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                          <label for=\"checkDate\"><b>Check Date</b></label>\r\n                                          <span class=\"input-icon icon-right\">\r\n                                            <input type=\"date\" class=\"form-control\"\r\n                                              placeholder=\"Enter Payment Capture Date\" formControlName=\"checkDate\"\r\n                                              [ngClass]=\"{ 'is-invalid': submitted && f.paymentCaptureDate.errors }\"\r\n                                              required data-bv-notempty-message=\"Payment Capture Date is required\">\r\n                                            <i class=\"fa fa-file\"></i>\r\n                                          </span>\r\n                                          <div *ngIf=\"submitted && f.checkDate.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.checkDate.errors.required\">\r\n                                              <p style=\"color: red;  font-size: 11px\">* Check Date</p>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                          <label for=\"companyProfileDesc\"><b>Check Number </b></label>\r\n                                          <span class=\"input-icon icon-right\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"cheque\"\r\n                                              placeholder=\"Enter Check Number\" formControlName=\"checkNumber\"\r\n                                              [ngClass]=\"{ 'is-invalid': submitted && f.checkNumber.errors }\" required>\r\n                                            <i class=\"fa fa-file\"></i>\r\n                                          </span>\r\n                                          <div *ngIf=\"submitted && f.checkNumber.errors\" class=\"invalid-feedback\">\r\n                                            <div *ngIf=\"f.checkNumber.errors.required\">\r\n                                              <p style=\"color: red;  font-size: 11px\">* Required Check Number</p>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div class=\"col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                          <label for=\"chequeImage\"><b>Check Image</b></label>\r\n                                          <div class=\"controls\">\r\n                                            <div data-provides=\"fileupload\" class=\"fileupload fileupload-new\">\r\n                                              <div style=\"width: 100px; height: 120px;\"\r\n                                                class=\"fileupload-new thumbnail\">\r\n                                                <img [src]=\"imagePreview\" style=\"height:120px;width:100px;\">\r\n                                              </div>\r\n                                              <!-- <div style=\"max-width: 90px; max-height: 110px; line-height: 20px;\"\r\n                                                      class=\"fileupload-preview fileupload-exists thumbnail\"></div> -->\r\n                                              <div>\r\n                                                <input #imageUpload type=\"file\" accept=\"image/*\" id=\"avatar\"\r\n                                                  (change)=\"select($event)\" #fileInput>\r\n                                                <button type=\"button\" class=\"btn btn-blue\" [disabled]=\"!img\"\r\n                                                  (click)=\"imgfileUpload()\">Upload</button>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div *ngIf=\"progressShow\" class=\"progress-bar1 blue stripes\">\r\n                                            <span [style.width.%]=\"percentage\">\r\n                                              <p style=\"text-align: center;color:black;font-size:18px;\">\r\n                                                {{percentage}}%</p>\r\n                                            </span>\r\n                                          </div>\r\n                                          <br>\r\n                                          <div *ngIf=\"progressHide\" class=\"alert alert-block alert-success\"\r\n                                            style=\"height:3px;\">\r\n                                            <h4 class=\"alert-heading\" style=\"margin-top:-5px;text-align:center;\">Image\r\n                                              Uploaded\r\n                                              Successfully</h4>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class=\"row\" *ngIf=\"creditCardDetails\">\r\n                                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                      <!-- <div class=\"widget\">\r\n                    <div class=\"widget-body\"> -->\r\n                                      <!-- <form [formGroup]=\"serProzPaymentInfoDetails\" *ngIf=\"showForm\"> -->\r\n                                      <!-- DYNAMIC NGX STRIPE[NOMADS] PLUGIN -->\r\n                                      <!-- <div class=\"row\">\r\n                          <div class=\"col-sm-2\"></div>\r\n                          <div class=\"col-sm-8\"><b style=\"color: rgb(56, 57, 58);\">TopProz Credit card validation and\r\n                              processing is provided by Stripe(www.stripe.com)</b></div>\r\n                          <div class=\"col-sm-2\"></div>\r\n                        </div><br /> -->\r\n                                      <!-- <div class=\"row\">\r\n                          <div class=\"col-sm-12\"> -->\r\n                                      <!-- <div class=\"form-group\">\r\n                              <label for=\"name\">Email<span class=\"mandatory\"></span></label>\r\n                              <span class=\"input-icon icon-right\">\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your email\" formControlName=\"email\"\r\n                                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" value = {{email}} required disabled>\r\n                                <i class=\"fa fa-envelope\"></i>\r\n                              </span>\r\n                              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                                <div *ngIf=\"f.email.errors.required\">\r\n                                  <p style=\"color: red;  font-size: 11px\">* Required Email</p>\r\n                                </div>\r\n                              </div>\r\n                            </div> -->\r\n                                      <ngx-stripe-card [options]=\"cardOptions\" [elementsOptions]=\"elementsOptions\"\r\n                                        (change)=\"cardUpdated($event)\" formControlName=\"creditCardAuthNumbers\"\r\n                                        (error)=\"error = $event\"></ngx-stripe-card>\r\n                                      <div class=\"invalid-feedback\">\r\n                                        {{error?.message}}\r\n                                      </div>\r\n                                      <!-- </div>\r\n                        </div> -->\r\n                                      <!-- <br /> -->\r\n                                      <!-- <div class=\"row\">\r\n                          <div class=\"col-sm-2\">\r\n                            <div class=\"form-group\">\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-4\">\r\n                            <div class=\"form-group\">\r\n                              <input type=\"button\" class=\"btn btn-primary shiny btn-block\" value=\"<&nbsp;&nbsp;Back\"\r\n                                (click)=\"goBack()\">\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-4\">\r\n                            <div class=\"form-group\">\r\n                              <input type=\"button\" class=\"btn btn-success shiny btn-block\" value=\"Continue\" (click)=\"validate()\"\r\n                                [disabled]=\"!complete\">\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-sm-2\">\r\n                            <div class=\"form-group\">\r\n                            </div>\r\n                          </div>\r\n                        </div> -->\r\n                                      <!-- DYNAMIC NGX STRIPE[NOMADS] PLUGIN -->\r\n                                      <!-- </form> -->\r\n\r\n\r\n                                      <!-- </div>\r\n                  </div> -->\r\n                                      <!-- <div class=\"col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"companyProfileDesc\"><b>Credit Card Number</b></label>\r\n                      <span class=\"input-icon icon-right\">\r\n                        <input type=\"text\" class=\"form-control\" id=\"creditCardNumber\" placeholder=\"Enter Credit Card Number\"\r\n                          formControlName=\"creditCardNumber\" [dropSpecialCharacters]=\"false\" mask=\"0000-0000-0000-0000\"\r\n                          [ngClass]=\"{ 'is-invalid': submitted && f.creditCardNumber.errors }\" required\r\n                          data-bv-notempty-message=\"Card Number is required\">\r\n                        <i class=\"fa fa-file\"></i>\r\n                      </span>\r\n                      <div *ngIf=\"submitted && f.creditCardNumber.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.creditCardNumber.errors.required\">\r\n                          <p style=\"color: red;  font-size: 11px\">* Required Credit Card Number</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div> -->\r\n                                      <!-- <div class=\"col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"companyProfileDesc\"><b>CVV Number</b></label>\r\n                      <span class=\"input-icon icon-right\">\r\n                        <input type=\"text\" class=\"form-control\" id=\"ccvNumber\" placeholder=\"Enter CVV Number\"\r\n                          formControlName=\"cvvNumber\" [dropSpecialCharacters]=\"false\" mask=\"000\"\r\n                          [ngClass]=\"{ 'is-invalid': submitted && f.cvvNumber.errors }\" required>\r\n                        <i class=\"fa fa-file\"></i>\r\n                      </span>\r\n                      <div *ngIf=\"submitted && f.ccvNumber.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.ccvNumber.errors.required\">\r\n                          <p style=\"color: red;  font-size: 11px\">* Required Cvv Number</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div> -->\r\n                                      <!-- <div class=\"col-sm-4\">\r\n                    <div class=\"form-group\"> -->\r\n                                      <!-- <div class=\"col-sm-12\">\r\n                        <label for=\"expiresOn\"><b>Expires On</b></label>\r\n                      </div> -->\r\n                                      <!-- <div class=\"col-sm-6\"> -->\r\n                                      <!-- <select class=\"form-control\" id=\"selectMonth\" name=\"status\" data-bv-field=\"row-title\"\r\n                          formControlName=\"selectMonth\" [ngClass]=\"{ 'is-invalid': submitted && f.selectMonth.errors }\"\r\n                          required>\r\n                          <option value=\"\">--Select Month--</option>\r\n                          <option value=\"JAN\">JAN</option>\r\n                          <option value=\"FEB\">FEB</option>\r\n                          <option value=\"MAR\">MAR</option>\r\n                          <option value=\"APR\">APR</option>\r\n                          <option value=\"MAY\">MAY</option>\r\n                          <option value=\"JUN\">JUN</option>\r\n                          <option value=\"JUL\">JUL</option>\r\n                          <option value=\"AUG\">AUG</option>\r\n                          <option value=\"SEP\">SEP</option>\r\n                          <option value=\"OCT\">OCT</option>\r\n                          <option value=\"NOV\">NOV</option>\r\n                          <option value=\"DEC\">DEC</option>\r\n                        </select> -->\r\n                                      <!-- <div *ngIf=\"submitted && f.selectMonth.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.selectMonth.errors.required\">\r\n                            <p style=\"color: red;  font-size: 11px\">* Select Month</p>\r\n                          </div>\r\n                        </div> -->\r\n                                      <!-- </div> -->\r\n                                      <!-- <div class=\"col-sm-6\"> -->\r\n                                      <!-- <select class=\"form-control\" id=\"selectYear\" name=\"status\" data-bv-field=\"row-title\"\r\n                          formControlName=\"selectYear\" [ngClass]=\"{ 'is-invalid': submitted && f.selectYear.errors }\"\r\n                          required>\r\n                          <option value=\"\">--Select Year--</option>\r\n                          <option value=\"2030\">2030</option>\r\n                          <option value=\"2029\">2029</option>\r\n                          <option value=\"2028\">2028</option>\r\n                          <option value=\"2027\">2027</option>\r\n                          <option value=\"2026\">2026</option>\r\n                          <option value=\"2025\">2025</option>\r\n                          <option value=\"2024\">2024</option>\r\n                          <option value=\"2023\">2023</option>\r\n                          <option value=\"2022\">2022</option>\r\n                          <option value=\"2021\">2021</option>\r\n                          <option value=\"2020\">2020</option>\r\n                          <option value=\"2019\">2019</option>\r\n                        </select> -->\r\n                                      <!-- <div *ngIf=\"submitted && f.selectYear.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"f.selectYear.errors.required\">\r\n                            <p style=\"color: red;  font-size: 11px\">* Select Year</p>\r\n                          </div>\r\n                        </div> -->\r\n                                      <!-- </div> -->\r\n                                      <!-- </div> -->\r\n                                      <!-- </div>\r\n                </div> -->\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                              <div class=\"row\">\r\n                                <div class=\"col-lg-4\">\r\n                                  <div class=\"form-group\">\r\n                                  </div>\r\n                                </div>\r\n                                <div class=\"col-lg-2 button-center\">\r\n                                  <div class=\"form-group\">\r\n                                    <button *ngIf=\"creditCardDetails\" type=\"button\" class=\"btn btn-blue\"\r\n                                      data-dismiss=\"modal\" (click)=\"EstimatePaidDetailss()\" [disabled]=\"!complete\"><i\r\n                                        class=\"fa fa-check\"></i>\r\n                                      Proceed For Payment</button>\r\n                                    <button *ngIf=\"!creditCardDetails\" type=\"button\" class=\"btn btn-blue\"\r\n                                      data-dismiss=\"modal\" (click)=\"EstimatePaidDetails()\"><i class=\"fa fa-check\"></i>\r\n                                      Proceed For Payment</button>\r\n                                  </div>\r\n                                </div>\r\n                                <div class=\"col-lg-4 button-center\">\r\n                                  <div class=\"form-group\">\r\n                                    <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"\r\n                                      (click)=\"cancelSelectedInventory()\"><i class=\"fa fa-arrow-left\"></i>\r\n                                      Back to View Estimate</button>\r\n                                  </div>\r\n                                </div>\r\n                                <div class=\"col-lg-4\">\r\n                                  <div class=\"form-group\">\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </form>\r\n                        </div> <!-- / .modal-content -->\r\n                      </div>\r\n                    </div>\r\n                    <!-- End getPaid Popup -->\r\n                    <!-- /form1 -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div id=\"inspectionpostCheck\" class=\"modal fade\" style=\"display: none;\" role=\"dialog\" aria-hidden=\"true\"\r\n                data-backdrop=\"false\" *ngIf=\"showPopup\">\r\n                <div class=\"modal-dialog1\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <div class=\"widget-header blue\">\r\n                        <span class=\"widget-caption\"><b> Post-work Inspection Checklist</b> </span>\r\n                      </div>\r\n                      <div class=\"modal-body\">\r\n                        <br />\r\n                        <div class=\"row\">\r\n                          <div class=\"col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"woStatusLbl\">\r\n\r\n                                <b>\"This Invoice generation requires you to complete Post-Work inspection Checklist.\r\n                                  Continue to the Checklist ?\"</b>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <div class=\"modal-footer\">\r\n                          <div class=\"col-lg-3\">\r\n                          </div>\r\n                          <div class=\"col-lg-3 button-center\">\r\n                            <button type=\"button\" class=\"btn btn-blue\"\r\n                              (click)=\"generatepostInvoice(estimateBasicView)\"><i class=\"fa fa-check\"></i>\r\n                              Yes</button>\r\n                          </div>\r\n                          <div class=\"col-lg-3 button-center\">\r\n                            <button type=\"button\" class=\"btn btn-gray\" data-dismiss=\"modal\"\r\n                              (click)=\"gotoInvoice(estimateBasicView.estimateNo)\"><i class=\"fa fa-times\"></i>\r\n                              No</button>\r\n                          </div>\r\n                          <div class=\"col-lg-3\">\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- inspection status is Assigned -->\r\n\r\n                </div>\r\n                <!-- /Page Content -->\r\n              </div>\r\n\r\n            </div>\r\n            <!-- /Page Body -->\r\n          </div>\r\n          <!-- /Page Content -->\r\n        </div>\r\n        <!-- /Page Container -->\r\n      </div>\r\n      <!-- /Main Container -->\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.scss":
/*!************************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.scss ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-title {\n  color: #5db2ff;\n  border-bottom: 1px dashed #5db2ff;\n  /*display: block;\r\n     padding: 8px 0;*/\n  font-size: 15px;\n  font-weight: bold;\n  /*  color: #5DB2FF;\r\n    margin-bottom: 15px;*/ }\n\n.mandatory {\n  font-weight: bold;\n  color: #FF0000;\n  font-size: 16px; }\n\n.hr-gray-thick {\n  border-top: 3px solid #333 !important; }\n\n.hr-gray {\n  border-top: 1px solid #333 !important; }\n\ninput {\n  color: black; }\n\n.mock {\n  color: red;\n  text-align: center; }\n\n.mock-conf {\n  color: green;\n  text-align: center; }\n\n.inprogress {\n  color: orangered;\n  text-align: center; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.checkbox, .radio {\n  position: relative;\n  display: block;\n  margin-top: 0px !important;\n  margin-bottom: 0px !important; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.button-center {\n  text-align: center; }\n\n.button-left {\n  text-align: left; }\n\n.button-right {\n  text-align: right; }\n\n.accordion.panel-group .panel-heading .accordion-toggle.collapsed {\n  color: #5db2ff !important;\n  background-color: #333 !important;\n  border-bottom: 1px solid #5db2ff !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:hover:after {\n  color: #FFF !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle {\n  color: #5db2ff !important;\n  background-color: #333 !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:after {\n  color: #5db2ff !important; }\n\n.center {\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.item {\n  text-align: center; }\n\n.body {\n  background-color: white; }\n\n.header-title {\n  font-size: 18px !important; }\n\n.form-heading {\n  font-size: 18px !important; }\n\n/* Buttons */\n\n.btn {\n  font-size: 14px !important;\n  font-weight: bold !important; }\n\n/* /Buttons */\n\n/* Line */\n\n.hr-blue {\n  border-top: 1px solid #869eb4 !important; }\n\n/* /Line */\n\n/* Textbox */\n\n.formcontrol, select {\n  padding-left: 0px !important;\n  padding-right: 0px !important;\n  border-left-width: 1px !important;\n  border-right-width: 1px !important; }\n\n/* /Textbox */\n\n/* Atkore logo */\n\n.text {\n  text-align: center; }\n\n.text img {\n  width: 70px;\n  height: 80px; }\n\n/* /Atkore logo */\n\n/* Labels */\n\n.label {\n  padding: 5px !important; }\n\nlabel .mandatory {\n  color: red;\n  font-size: 16px !important;\n  font-weight: bold !important; }\n\n/* /Labels */\n\n/* Tables    */\n\n.table > tbody > tr > td {\n  padding: 2px !important;\n  line-height: 1.257143 !important;\n  vertical-align: right; }\n\n/* /Tables    */\n\n/* Vertical Text */\n\n.testrotate p {\n  line-height: 145px !important;\n  font-size: 15px; }\n\n.testrotate .testq {\n  line-height: 483px !important;\n  font-size: 15px; }\n\n.testrotate .testr {\n  line-height: 100px !important;\n  font-size: 15px; }\n\n.testrotate .testp {\n  line-height: 170px !important;\n  font-size: 15px; }\n\n/* /Vertical Text */\n\n/* Textbox input */\n\n/* /Textbox input */\n\n.table-scrollable > .table > thead > tr > th {\n  white-space: wrap !important; }\n\n.form-control[_ngcontent-c3] {\n  padding: 4px 3px !important; }\n\n/* Pin Gap Diagram */\n\n.row .pin img {\n  width: 230px;\n  height: 240px;\n  margin-left: 30px !important;\n  margin-right: auto !important; }\n\n/* /Pin Gap Diagram */\n\n.gap {\n  text-align: center; }\n\n/* Bolt torque specifications */\n\n.adjust {\n  margin-left: 10px !important;\n  margin-bottom: 1040px !important; }\n\n/* /Bolt torque specifications */\n\n/* Imageupload    */\n\ntd .img-adjust {\n  margin-left: auto !important;\n  margin-right: auto !important; }\n\n/* /Imageupload    */\n\n.alert-heading {\n  font-size: 12px; }\n\n.align-text-top {\n  vertical-align: top !important; }\n\n.text-big {\n  font-size: 16px !important;\n  font-weight: bold !important; }\n\n.form-title {\n  color: #5db2ff;\n  border-bottom: 1px dashed #5db2ff;\n  /*display: block;\r\n     padding: 8px 0;\r\n     border-bottom: 1px dashed #7e3794;*/\n  font-size: 15px;\n  font-weight: bold;\n  /*  color: #5DB2FF;\r\n    margin-bottom: 15px;*/ }\n\n.mandatory {\n  font-weight: bold;\n  color: #FF0000;\n  font-size: 16px; }\n\n.hr-gray-thick {\n  border-top: 3px solid #333 !important; }\n\n.hr-gray {\n  border-top: 1px solid #333 !important; }\n\ninput {\n  color: black; }\n\n.mock {\n  color: red;\n  text-align: center; }\n\n.mock-conf {\n  color: green;\n  text-align: center; }\n\n.inprogress {\n  color: orangered;\n  text-align: center; }\n\n.three-bordered {\n  border-left: 1px solid #333;\n  border-right: 1px solid #333;\n  border-bottom: 1px solid #333;\n  /* border-left: 3px solid #7e3794;*/ }\n\n.text-center {\n  text-align: center; }\n\n.checkbox-center {\n  position: relative;\n  display: block;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-align: center; }\n\n.gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.blue {\n  background-color: #5db2ff !important;\n  color: #333 !important;\n  font-weight: bold; }\n\n.btn-gray {\n  background-color: #333 !important;\n  color: #5db2ff !important; }\n\n.btn-blue {\n  color: #333 !important;\n  background-color: #5db2ff !important; }\n\n.accordion.panel-group .panel-body {\n  background-color: #fff !important;\n  border-top: none !important;\n  border-left: 2px solid #eee;\n  color: #262626 !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:hover:after {\n  color: #FFF !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle {\n  color: #5db2ff !important;\n  background-color: #333 !important;\n  border-bottom: 1px solid #5db2ff !important; }\n\n.accordion.panel-group .panel-heading .accordion-toggle:after {\n  color: #5db2ff !important; }\n\n.icon1 {\n  height: auto;\n  width: 120px;\n  width: -moz-fit-content;\n  width: -webkit-fit-content;\n  width: fit-content;\n  font: 400 16px/1.4 \"Source Code Pro\";\n  font-variant: small-caps;\n  padding: 10px;\n  border: 1px solid #103683;\n  border-radius: 10px; }\n\n.text-blue {\n  color: #5db2ff; }\n\n.btn-xs-two {\n  padding: 2px 7px !important;\n  margin: 2px 0px !important; }\n\n.modal-header {\n  padding: 0px 0px 0px 0px !important; }\n\n.well.with-footer {\n  padding-bottom: 10px !important; }\n\n.modal-footer {\n  border-top: 3px solid #333 !important; }\n\n.table-scrollable {\n  width: 100%;\n  height: 200px !important;\n  overflow-x: auto;\n  overflow-y: auto !important;\n  border: 1px solid #ddd; }\n\n.modal-dialog {\n  width: 1200px !important;\n  margin: 40px auto !important; }\n\n#form1 {\n  display: none; }\n\n.form-control, select {\n  font-size: 13px;\n  color: #000000;\n  background-color: #fbfbfb;\n  border: 1px solid #d5d5d5;\n  padding: 6px 12px; }\n\n.text-right {\n  text-align: right; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.ts ***!
  \**********************************************************************************/
/*! exports provided: ViewEstimateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewEstimateComponent", function() { return ViewEstimateComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _utilities_beyond__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utilities/beyond */ "./src/utilities/beyond.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/http */ "./node_modules/@angular/http/fesm5/http.js");
/* harmony import */ var _global_global__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../global/global */ "./src/global/global.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm5/ngx-toastr.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);









var ViewEstimateComponent = /** @class */ (function () {
    function ViewEstimateComponent(beyond, router, activatedRoute, formBuilder, http, toastr) {
        this.beyond = beyond;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.formBuilder = formBuilder;
        this.http = http;
        this.toastr = toastr;
        this.estimateAnalyserViewResponse = false;
    }
    ViewEstimateComponent.prototype.ngOnInit = function () {
        this.beyond.beyondAdmin();
        this.loginData = JSON.parse(localStorage.getItem("login"));
        this.estimateNum = this.activatedRoute.snapshot.params['estimateNumber'];
        //console.log(this.estimateNum)
        this.viewEstimateService();
        this.viewEstimateAnalyserService();
    };
    ViewEstimateComponent.prototype.viewEstimateService = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/estimateView/' + this.estimateNum, options)
            .subscribe(function (data) {
            var response = data.json();
            //console.log(response)
            if (response.status == 200) {
                _this.estimateBasicView = response.response[0];
                //console.log("estimateBasicView"+JSON.stringify(this.estimateBasicView))
                _this.estimateCustomLaborData = response.customLabourDetails;
                _this.estimateCustomMaterialData = response.customMaterialDetails;
                _this.estimatePriceBookData = response.pricebookDetails;
                _this.totalEstimateCostData = response.totalCostDetails[0];
                _this.customMLDesc = response.customDescriptionDetails;
                // var newArray = this.estimateCustomLaborData.concat(this.estimatePriceBookData);
                // this.totalarrays= newArray.concat(this.estimateCustomMaterialData);
                _this.finalArray = _this.estimatePriceBookData.concat(_this.customMLDesc);
                // console.log("totalarrays" + JSON.stringify(this.totalarrays))
                console.log("finalArray" + JSON.stringify(_this.finalArray));
                _this.checkingStaffIdentity();
                _this.customerDetailsData();
                _this.enableGenerateInvoice();
                _this.estimateViewResponse = true;
            }
            else {
                _this.estimateViewResponse = false;
            }
            (function (error) {
            });
        });
    };
    ViewEstimateComponent.prototype.viewEstimateAnalyserService = function () {
        var _this = this;
        //console.log(this.estimateNum)
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/getEstimateAnalyserDetails/' + this.estimateNum, options)
            .subscribe(function (data) {
            var response = data.json();
            //console.log("response"+ JSON.stringify(response))
            if (response.status == 200) {
                _this.estimateAnalyser = response.response[0];
                _this.estimateAnalyserViewResponse = true;
            }
            else {
                _this.estimateAnalyserViewResponse = false;
            }
            (function (error) {
            });
        });
    };
    ViewEstimateComponent.prototype.checkingStaffIdentity = function () {
        //console.log(this.loginData.loginCode)
        //console.log(this.estimateBasicView.managerId)
        if (this.loginData.loginCode == this.estimateBasicView.managerId) {
            this.matchedStatus = true;
            //console.log("matched")
        }
        else {
            this.matchedStatus = false;
            //console.log("Not matched")
        }
    };
    ViewEstimateComponent.prototype.backEstimate = function () {
        this.router.navigate(['/estimate/listEstimates']);
    };
    ViewEstimateComponent.prototype.customerDetailsData = function () {
        var _this = this;
        var headers = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["Headers"]();
        headers.append("Accept", 'application/json');
        headers.append('Content-Type', 'application/json');
        var options = new _angular_http__WEBPACK_IMPORTED_MODULE_5__["RequestOptions"]({ headers: headers });
        this.http.get(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/viewStaffWorkOrder/' + this.estimateBasicView.workOrderNo, options)
            .subscribe(function (data) {
            var woResponse = data.json();
            if (woResponse.status == 200) {
                _this.billingAddressData = woResponse.billingAddress[0];
                //console.log("billingAddressData"+JSON.stringify(this.billingAddressData))    
                _this.cusResponseStatus = true;
            }
            else {
                _this.cusResponseStatus = false;
            }
        }, function (error) {
            _this.toastr.warning('Unable to connect to server');
        });
    };
    ViewEstimateComponent.prototype.approveEstimate = function () {
        var _this = this;
        var obj = {
            "estimateNum": this.estimateNum,
            "customerId": this.billingAddressData.customerId,
            "workOrderNum": this.billingAddressData.workOrderNumber,
            "customerName": this.billingAddressData.firstName + "-" + this.billingAddressData.lastName,
            "customerMail": this.billingAddressData.emailId,
            "customerPhone": this.billingAddressData.phoneNumber,
            "url": 'http://topproz.com.s3-website-us-east-1.amazonaws.com/auth/login/0',
            "estimateStatus": "PENDING CUSTOMER APPROVAL",
            "modifiedBy": this.loginData.name,
            "modifiedOn": moment__WEBPACK_IMPORTED_MODULE_8__().format("MM-DD-YYYY HH:mm:ss")
        };
        //console.log("Edit OBJ" + JSON.stringify(obj))
        this.http.post(_global_global__WEBPACK_IMPORTED_MODULE_6__["Global"].url + '/updateManagerApproveStatus', obj)
            .subscribe(function (data) {
            var woData = data.json();
            //console.log("woData" + JSON.stringify(woData))
            _this.router.navigate(['/estimate/listEstimates']);
        }, function (error) {
            //console.log(error);// Error getting the data
        });
    };
    ViewEstimateComponent.prototype.editEstimate = function (estimateNumber) {
        this.router.navigate(['/estimate/editEstimate', estimateNumber]);
    };
    ViewEstimateComponent.prototype.enableGenerateInvoice = function () {
        if (this.estimateBasicView.estimateStatus == 'APPROVED') {
            this.enable = true;
        }
        else {
            this.enable = false;
        }
    };
    ViewEstimateComponent.prototype.viewInvoice = function (estimateNo) {
        this.router.navigate(['/staff/generateInvoice', estimateNo]);
    };
    //Chandu:22-07-2020
    ViewEstimateComponent.prototype.paymentTypeSelection = function (x) {
        this.paymentType = x;
        console.log("Payment Type = " + this.paymentType);
        //alert("Payment Type = "+this.paymentType)
    };
    ViewEstimateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            providers: [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"]],
            selector: 'app-view-estimate',
            template: __webpack_require__(/*! ./view-estimate.component.html */ "./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.html"),
            styles: [__webpack_require__(/*! ./view-estimate.component.scss */ "./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_utilities_beyond__WEBPACK_IMPORTED_MODULE_2__["Beyond"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"],
            _angular_http__WEBPACK_IMPORTED_MODULE_5__["Http"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"]])
    ], ViewEstimateComponent);
    return ViewEstimateComponent;
}());



/***/ }),

/***/ "./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.scss":
/*!****************************************************************************************!*\
  !*** ./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.scss ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb3otZXN0aW1hdGUvcHJvei1lc3RpbWF0ZS1sYXlvdXQvcHJvei1lc3RpbWF0ZS1sYXlvdXQuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.ts ***!
  \**************************************************************************************/
/*! exports provided: ProzEstimateLayoutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProzEstimateLayoutComponent", function() { return ProzEstimateLayoutComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ProzEstimateLayoutComponent = /** @class */ (function () {
    function ProzEstimateLayoutComponent() {
    }
    ProzEstimateLayoutComponent.prototype.ngOnInit = function () {
    };
    ProzEstimateLayoutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-proz-estimate-layout',
            template: __webpack_require__(/*! ./proz-estimate-layout.component.html */ "./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.html"),
            styles: [__webpack_require__(/*! ./proz-estimate-layout.component.scss */ "./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.scss")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ProzEstimateLayoutComponent);
    return ProzEstimateLayoutComponent;
}());



/***/ }),

/***/ "./src/app/proz-estimate/proz-estimate-routing.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/proz-estimate/proz-estimate-routing.module.ts ***!
  \***************************************************************/
/*! exports provided: ProzEstimateRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProzEstimateRoutingModule", function() { return ProzEstimateRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _estimates_add_estimate_add_estimate_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./estimates/add-estimate/add-estimate.component */ "./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.ts");
/* harmony import */ var _estimates_edit_estimate_edit_estimate_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./estimates/edit-estimate/edit-estimate.component */ "./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.ts");
/* harmony import */ var _estimates_view_estimate_view_estimate_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./estimates/view-estimate/view-estimate.component */ "./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.ts");
/* harmony import */ var _estimates_list_estimates_list_estimates_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./estimates/list-estimates/list-estimates.component */ "./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.ts");
/* harmony import */ var _estimates_add_estimate1_add_estimate1_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./estimates/add-estimate1/add-estimate1.component */ "./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.ts");
/* harmony import */ var _proz_estimate_layout_proz_estimate_layout_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./proz-estimate-layout/proz-estimate-layout.component */ "./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.ts");









var routes = [
    {
        path: '', component: _proz_estimate_layout_proz_estimate_layout_component__WEBPACK_IMPORTED_MODULE_8__["ProzEstimateLayoutComponent"],
        children: [
            /* -- Estimates -- */
            {
                path: 'addEstimate',
                component: _estimates_add_estimate_add_estimate_component__WEBPACK_IMPORTED_MODULE_3__["AddEstimateComponent"]
            },
            {
                path: 'editEstimate/:estimateNumber',
                component: _estimates_edit_estimate_edit_estimate_component__WEBPACK_IMPORTED_MODULE_4__["EditEstimateComponent"]
            },
            {
                path: 'viewEstimate/:estimateNumber',
                component: _estimates_view_estimate_view_estimate_component__WEBPACK_IMPORTED_MODULE_5__["ViewEstimateComponent"]
            },
            {
                path: 'listEstimates',
                component: _estimates_list_estimates_list_estimates_component__WEBPACK_IMPORTED_MODULE_6__["ListEstimatesComponent"]
            },
            {
                path: 'addEstimate1/:workOrderNumber',
                component: _estimates_add_estimate1_add_estimate1_component__WEBPACK_IMPORTED_MODULE_7__["AddEstimate1Component"]
            },
        ]
    }
];
var ProzEstimateRoutingModule = /** @class */ (function () {
    function ProzEstimateRoutingModule() {
    }
    ProzEstimateRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
        })
    ], ProzEstimateRoutingModule);
    return ProzEstimateRoutingModule;
}());



/***/ }),

/***/ "./src/app/proz-estimate/proz-estimate.module.ts":
/*!*******************************************************!*\
  !*** ./src/app/proz-estimate/proz-estimate.module.ts ***!
  \*******************************************************/
/*! exports provided: ProzEstimateModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProzEstimateModule", function() { return ProzEstimateModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _proz_estimate_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./proz-estimate-routing.module */ "./src/app/proz-estimate/proz-estimate-routing.module.ts");
/* harmony import */ var _proz_estimate_layout_proz_estimate_layout_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./proz-estimate-layout/proz-estimate-layout.component */ "./src/app/proz-estimate/proz-estimate-layout/proz-estimate-layout.component.ts");
/* harmony import */ var _estimates_add_estimate_add_estimate_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./estimates/add-estimate/add-estimate.component */ "./src/app/proz-estimate/estimates/add-estimate/add-estimate.component.ts");
/* harmony import */ var _estimates_edit_estimate_edit_estimate_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./estimates/edit-estimate/edit-estimate.component */ "./src/app/proz-estimate/estimates/edit-estimate/edit-estimate.component.ts");
/* harmony import */ var _estimates_view_estimate_view_estimate_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./estimates/view-estimate/view-estimate.component */ "./src/app/proz-estimate/estimates/view-estimate/view-estimate.component.ts");
/* harmony import */ var _estimates_list_estimates_list_estimates_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./estimates/list-estimates/list-estimates.component */ "./src/app/proz-estimate/estimates/list-estimates/list-estimates.component.ts");
/* harmony import */ var _estimates_add_estimate1_add_estimate1_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./estimates/add-estimate1/add-estimate1.component */ "./src/app/proz-estimate/estimates/add-estimate1/add-estimate1.component.ts");
/* harmony import */ var _common_prozadmin_sidemenu_proz_sidemenu_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../common/prozadmin-sidemenu/proz-sidemenu.module */ "./src/app/common/prozadmin-sidemenu/proz-sidemenu.module.ts");
/* harmony import */ var _common_commonvanlynkheader_commonvanlynkheader_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../common/commonvanlynkheader/commonvanlynkheader.module */ "./src/app/common/commonvanlynkheader/commonvanlynkheader.module.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-mask */ "./node_modules/ngx-mask/fesm5/ngx-mask.js");














var ProzEstimateModule = /** @class */ (function () {
    function ProzEstimateModule() {
    }
    ProzEstimateModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["CUSTOM_ELEMENTS_SCHEMA"]],
            declarations: [_proz_estimate_layout_proz_estimate_layout_component__WEBPACK_IMPORTED_MODULE_4__["ProzEstimateLayoutComponent"],
                _estimates_add_estimate_add_estimate_component__WEBPACK_IMPORTED_MODULE_5__["AddEstimateComponent"],
                _estimates_add_estimate1_add_estimate1_component__WEBPACK_IMPORTED_MODULE_9__["AddEstimate1Component"],
                _estimates_edit_estimate_edit_estimate_component__WEBPACK_IMPORTED_MODULE_6__["EditEstimateComponent"],
                _estimates_view_estimate_view_estimate_component__WEBPACK_IMPORTED_MODULE_7__["ViewEstimateComponent"],
                _estimates_list_estimates_list_estimates_component__WEBPACK_IMPORTED_MODULE_8__["ListEstimatesComponent"],],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _proz_estimate_routing_module__WEBPACK_IMPORTED_MODULE_3__["ProzEstimateRoutingModule"],
                _common_prozadmin_sidemenu_proz_sidemenu_module__WEBPACK_IMPORTED_MODULE_10__["ProzSidemenuModule"],
                _common_commonvanlynkheader_commonvanlynkheader_module__WEBPACK_IMPORTED_MODULE_11__["CommonvanlynkheaderModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_12__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ReactiveFormsModule"],
                ngx_mask__WEBPACK_IMPORTED_MODULE_13__["NgxMaskModule"]
            ]
        })
    ], ProzEstimateModule);
    return ProzEstimateModule;
}());



/***/ })

}]);
//# sourceMappingURL=proz-estimate-proz-estimate-module.js.map